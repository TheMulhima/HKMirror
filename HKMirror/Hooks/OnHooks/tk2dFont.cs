namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for tk2dFont class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class Ontk2dFont
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookUpgrade()
        {
            if (!HookedList.Contains("Upgrade"))
            {
                HookedList.Add("Upgrade");
                On.tk2dFont.Upgrade += Upgrade;
            }
        }

        internal static event Delegates.Upgrade_BeforeArgs _beforeUpgrade;
        internal static event Delegates.Upgrade_AfterArgs _afterUpgrade;

        private static void Upgrade(On.tk2dFont.orig_Upgrade orig, tk2dFont self)
        {
            Delegates.Params_Upgrade @params = new()
            {
                self = self
            };
            if (_beforeUpgrade != null)
                foreach (Delegates.Upgrade_BeforeArgs toInvoke in _beforeUpgrade.GetInvocationList())
                    try
                    {
                        _beforeUpgrade?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            self = @params.self;
            orig(self);
            if (_afterUpgrade != null)
                foreach (Delegates.Upgrade_AfterArgs toInvoke in _afterUpgrade.GetInvocationList())
                    try
                    {
                        _afterUpgrade.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void Upgrade_AfterArgs(Params_Upgrade args);

        public delegate void Upgrade_BeforeArgs(Params_Upgrade args);

        public delegate void Upgrade_WithArgs(Action<tk2dFont> orig, tk2dFont self);

        public sealed class Params_Upgrade
        {
            public tk2dFont self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.Upgrade_BeforeArgs Upgrade
        {
            add
            {
                HookHandler._beforeUpgrade += value;
                HookHandler.HookUpgrade();
            }
            remove => HookHandler._beforeUpgrade -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.Upgrade_AfterArgs Upgrade
        {
            add
            {
                HookHandler._afterUpgrade += value;
                HookHandler.HookUpgrade();
            }
            remove => HookHandler._afterUpgrade -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.tk2dFont.hook_Upgrade Upgrade
        {
            add => On.tk2dFont.Upgrade += value;
            remove => On.tk2dFont.Upgrade -= value;
        }
    }
}