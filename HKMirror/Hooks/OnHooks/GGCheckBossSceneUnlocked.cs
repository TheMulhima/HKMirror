using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;

namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for GGCheckBossSceneUnlocked class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnGGCheckBossSceneUnlocked
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookReset()
        {
            if (!HookedList.Contains("Reset"))
            {
                HookedList.Add("Reset");
                On.GGCheckBossSceneUnlocked.Reset += Reset;
            }
        }

        internal static event Delegates.Reset_BeforeArgs _beforeReset;
        internal static event Delegates.Reset_NormalArgs _afterReset;

        private static void Reset(On.GGCheckBossSceneUnlocked.orig_Reset orig, GGCheckBossSceneUnlocked self)
        {
            Delegates.Params_Reset @params = new()
            {
                self = self
            };
            _beforeReset?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterReset != null) _afterReset.Invoke(@params);
        }

        internal static void Hookget_IsTrue()
        {
            if (!HookedList.Contains("get_IsTrue"))
            {
                HookedList.Add("get_IsTrue");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(GGCheckBossSceneUnlocked), "get_IsTrue"), get_IsTrue);
            }
        }

        internal static event Delegates.get_IsTrue_BeforeArgs _beforeget_IsTrue;
        internal static event Delegates.get_IsTrue_NormalArgs _afterget_IsTrue;

        private static bool get_IsTrue(Func<GGCheckBossSceneUnlocked, bool> orig, GGCheckBossSceneUnlocked self)
        {
            Delegates.Params_get_IsTrue @params = new()
            {
                self = self
            };
            _beforeget_IsTrue?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_IsTrue != null) retVal = _afterget_IsTrue.Invoke(@params);
            return retVal;
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void get_IsTrue_BeforeArgs(Params_get_IsTrue args);

        public delegate bool get_IsTrue_NormalArgs(Params_get_IsTrue args);

        public delegate void Reset_BeforeArgs(Params_Reset args);

        public delegate void Reset_NormalArgs(Params_Reset args);

        public sealed class Params_Reset
        {
            public GGCheckBossSceneUnlocked self;
        }

        public sealed class Params_get_IsTrue
        {
            public GGCheckBossSceneUnlocked self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.Reset_BeforeArgs Reset
        {
            add
            {
                HookHandler._beforeReset += value;
                HookHandler.HookReset();
            }
            remove => HookHandler._beforeReset -= value;
        }

        public static event Delegates.get_IsTrue_BeforeArgs get_IsTrue
        {
            add
            {
                HookHandler._beforeget_IsTrue += value;
                HookHandler.Hookget_IsTrue();
            }
            remove => HookHandler._beforeget_IsTrue -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.Reset_NormalArgs Reset
        {
            add
            {
                HookHandler._afterReset += value;
                HookHandler.HookReset();
            }
            remove => HookHandler._afterReset -= value;
        }

        public static event Delegates.get_IsTrue_NormalArgs get_IsTrue
        {
            add
            {
                HookHandler._afterget_IsTrue += value;
                HookHandler.Hookget_IsTrue();
            }
            remove => HookHandler._afterget_IsTrue -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.GGCheckBossSceneUnlocked.hook_Reset Reset
        {
            add => On.GGCheckBossSceneUnlocked.Reset += value;
            remove => On.GGCheckBossSceneUnlocked.Reset -= value;
        }

        public static event Delegates.get_IsTrue_NormalArgs get_IsTrue
        {
            add => HookEndpointManager.Add<Delegates.get_IsTrue_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(GGCheckBossSceneUnlocked), "get_IsTrue"), value);
            remove => HookEndpointManager.Remove<Delegates.get_IsTrue_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(GGCheckBossSceneUnlocked), "get_IsTrue"), value);
        }
    }
}