namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for SaveProfileMPSlots class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnSaveProfileMPSlots
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookAwake()
        {
            if (!HookedList.Contains("Awake"))
            {
                HookedList.Add("Awake");
                On.SaveProfileMPSlots.Awake += Awake;
            }
        }

        internal static event Delegates.Awake_BeforeArgs _beforeAwake;
        internal static event Delegates.Awake_NormalArgs _afterAwake;

        private static void Awake(On.SaveProfileMPSlots.orig_Awake orig, SaveProfileMPSlots self)
        {
            Delegates.Params_Awake @params = new()
            {
                self = self
            };
            _beforeAwake?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterAwake != null) _afterAwake.Invoke(@params);
        }

        internal static void HookshowMPSlots()
        {
            if (!HookedList.Contains("showMPSlots"))
            {
                HookedList.Add("showMPSlots");
                On.SaveProfileMPSlots.showMPSlots += showMPSlots;
            }
        }

        internal static event Delegates.showMPSlots_BeforeArgs _beforeshowMPSlots;
        internal static event Delegates.showMPSlots_NormalArgs _aftershowMPSlots;

        private static void showMPSlots(On.SaveProfileMPSlots.orig_showMPSlots orig, SaveProfileMPSlots self,
            int slotsToShow, bool steelsoulMode)
        {
            Delegates.Params_showMPSlots @params = new()
            {
                self = self, slotsToShow = slotsToShow, steelsoulMode = steelsoulMode
            };
            _beforeshowMPSlots?.Invoke(@params);
            self = @params.self;
            slotsToShow = @params.slotsToShow;
            steelsoulMode = @params.steelsoulMode;
            orig(self, slotsToShow, steelsoulMode);
            if (_aftershowMPSlots != null) _aftershowMPSlots.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void Awake_BeforeArgs(Params_Awake args);

        public delegate void Awake_NormalArgs(Params_Awake args);

        public delegate void showMPSlots_BeforeArgs(Params_showMPSlots args);

        public delegate void showMPSlots_NormalArgs(Params_showMPSlots args);

        public sealed class Params_Awake
        {
            public SaveProfileMPSlots self;
        }

        public sealed class Params_showMPSlots
        {
            public SaveProfileMPSlots self;
            public int slotsToShow;
            public bool steelsoulMode;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.Awake_BeforeArgs Awake
        {
            add
            {
                HookHandler._beforeAwake += value;
                HookHandler.HookAwake();
            }
            remove => HookHandler._beforeAwake -= value;
        }

        public static event Delegates.showMPSlots_BeforeArgs showMPSlots
        {
            add
            {
                HookHandler._beforeshowMPSlots += value;
                HookHandler.HookshowMPSlots();
            }
            remove => HookHandler._beforeshowMPSlots -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.Awake_NormalArgs Awake
        {
            add
            {
                HookHandler._afterAwake += value;
                HookHandler.HookAwake();
            }
            remove => HookHandler._afterAwake -= value;
        }

        public static event Delegates.showMPSlots_NormalArgs showMPSlots
        {
            add
            {
                HookHandler._aftershowMPSlots += value;
                HookHandler.HookshowMPSlots();
            }
            remove => HookHandler._aftershowMPSlots -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.SaveProfileMPSlots.hook_Awake Awake
        {
            add => On.SaveProfileMPSlots.Awake += value;
            remove => On.SaveProfileMPSlots.Awake -= value;
        }

        public static event On.SaveProfileMPSlots.hook_showMPSlots showMPSlots
        {
            add => On.SaveProfileMPSlots.showMPSlots += value;
            remove => On.SaveProfileMPSlots.showMPSlots -= value;
        }
    }
}