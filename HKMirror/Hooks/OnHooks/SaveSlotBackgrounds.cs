namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for SaveSlotBackgrounds class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnSaveSlotBackgrounds
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookGetBackground_string()
        {
            if (!HookedList.Contains("GetBackground_string"))
            {
                HookedList.Add("GetBackground_string");
                On.SaveSlotBackgrounds.GetBackground_string += GetBackground_string;
            }
        }

        internal static event Delegates.GetBackground_string_BeforeArgs _beforeGetBackground_string;
        internal static event Delegates.GetBackground_string_NormalArgs _afterGetBackground_string;

        private static AreaBackground GetBackground_string(On.SaveSlotBackgrounds.orig_GetBackground_string orig,
            SaveSlotBackgrounds self, string areaName)
        {
            Delegates.Params_GetBackground_string @params = new()
            {
                self = self, areaName = areaName
            };
            _beforeGetBackground_string?.Invoke(@params);
            self = @params.self;
            areaName = @params.areaName;
            var retVal = orig(self, areaName);
            if (_afterGetBackground_string != null) retVal = _afterGetBackground_string.Invoke(@params);
            return retVal;
        }

        internal static void HookGetBackground_MapZone()
        {
            if (!HookedList.Contains("GetBackground_MapZone"))
            {
                HookedList.Add("GetBackground_MapZone");
                On.SaveSlotBackgrounds.GetBackground_MapZone += GetBackground_MapZone;
            }
        }

        internal static event Delegates.GetBackground_MapZone_BeforeArgs _beforeGetBackground_MapZone;
        internal static event Delegates.GetBackground_MapZone_NormalArgs _afterGetBackground_MapZone;

        private static AreaBackground GetBackground_MapZone(On.SaveSlotBackgrounds.orig_GetBackground_MapZone orig,
            SaveSlotBackgrounds self, MapZone mapZone)
        {
            Delegates.Params_GetBackground_MapZone @params = new()
            {
                self = self, mapZone = mapZone
            };
            _beforeGetBackground_MapZone?.Invoke(@params);
            self = @params.self;
            mapZone = @params.mapZone;
            var retVal = orig(self, mapZone);
            if (_afterGetBackground_MapZone != null) retVal = _afterGetBackground_MapZone.Invoke(@params);
            return retVal;
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void GetBackground_MapZone_BeforeArgs(Params_GetBackground_MapZone args);

        public delegate AreaBackground GetBackground_MapZone_NormalArgs(Params_GetBackground_MapZone args);

        public delegate void GetBackground_string_BeforeArgs(Params_GetBackground_string args);

        public delegate AreaBackground GetBackground_string_NormalArgs(Params_GetBackground_string args);

        public sealed class Params_GetBackground_string
        {
            public string areaName;
            public SaveSlotBackgrounds self;
        }

        public sealed class Params_GetBackground_MapZone
        {
            public MapZone mapZone;
            public SaveSlotBackgrounds self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.GetBackground_string_BeforeArgs GetBackground_string
        {
            add
            {
                HookHandler._beforeGetBackground_string += value;
                HookHandler.HookGetBackground_string();
            }
            remove => HookHandler._beforeGetBackground_string -= value;
        }

        public static event Delegates.GetBackground_MapZone_BeforeArgs GetBackground_MapZone
        {
            add
            {
                HookHandler._beforeGetBackground_MapZone += value;
                HookHandler.HookGetBackground_MapZone();
            }
            remove => HookHandler._beforeGetBackground_MapZone -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.GetBackground_string_NormalArgs GetBackground_string
        {
            add
            {
                HookHandler._afterGetBackground_string += value;
                HookHandler.HookGetBackground_string();
            }
            remove => HookHandler._afterGetBackground_string -= value;
        }

        public static event Delegates.GetBackground_MapZone_NormalArgs GetBackground_MapZone
        {
            add
            {
                HookHandler._afterGetBackground_MapZone += value;
                HookHandler.HookGetBackground_MapZone();
            }
            remove => HookHandler._afterGetBackground_MapZone -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.SaveSlotBackgrounds.hook_GetBackground_string GetBackground_string
        {
            add => On.SaveSlotBackgrounds.GetBackground_string += value;
            remove => On.SaveSlotBackgrounds.GetBackground_string -= value;
        }

        public static event On.SaveSlotBackgrounds.hook_GetBackground_MapZone GetBackground_MapZone
        {
            add => On.SaveSlotBackgrounds.GetBackground_MapZone += value;
            remove => On.SaveSlotBackgrounds.GetBackground_MapZone -= value;
        }
    }
}