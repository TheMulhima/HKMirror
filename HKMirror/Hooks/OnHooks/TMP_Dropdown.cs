using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;
namespace HKMirror.Hooks.OnHooks;
/// <summary>
/// Contains different types of On Hooks for TMP_Dropdown class.<br />
/// Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnTMP_Dropdown
{
internal static class HookHandler
{
private static List<string> HookedList = new List<string>();
internal static void Hookget_template()
{
if (!HookedList.Contains("get_template"))
{
HookedList.Add("get_template");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_template", true), get_template);

}
}
internal static event Delegates.get_template_BeforeArgs _beforeget_template;
internal static event Delegates.get_template_AfterArgs _afterget_template;
private static UnityEngine.RectTransform get_template(Func<TMPro.TMP_Dropdown, UnityEngine.RectTransform> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_template @params = new() 
{
self = self
};
if (_beforeget_template != null)
{
foreach (Delegates.get_template_BeforeArgs toInvoke in _beforeget_template.GetInvocationList())
{
try
{
_beforeget_template?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_template != null)
{
foreach (Delegates.get_template_AfterArgs toInvoke in _afterget_template.GetInvocationList())
{
try
{
retVal = _afterget_template.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_template()
{
if (!HookedList.Contains("set_template"))
{
HookedList.Add("set_template");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_template", true), set_template);

}
}
internal static event Delegates.set_template_BeforeArgs _beforeset_template;
internal static event Delegates.set_template_AfterArgs _afterset_template;
private static void set_template(Action<TMPro.TMP_Dropdown,  UnityEngine.RectTransform> orig, TMPro.TMP_Dropdown self,  UnityEngine.RectTransform value)
{
Delegates.Params_set_template @params = new() 
{
self = self
, value = value
};
if (_beforeset_template != null)
{
foreach (Delegates.set_template_BeforeArgs toInvoke in _beforeset_template.GetInvocationList())
{
try
{
_beforeset_template?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_template != null)
{
foreach (Delegates.set_template_AfterArgs toInvoke in _afterset_template.GetInvocationList())
{
try
{
_afterset_template.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookget_captionText()
{
if (!HookedList.Contains("get_captionText"))
{
HookedList.Add("get_captionText");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_captionText", true), get_captionText);

}
}
internal static event Delegates.get_captionText_BeforeArgs _beforeget_captionText;
internal static event Delegates.get_captionText_AfterArgs _afterget_captionText;
private static TMPro.TMP_Text get_captionText(Func<TMPro.TMP_Dropdown, TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_captionText @params = new() 
{
self = self
};
if (_beforeget_captionText != null)
{
foreach (Delegates.get_captionText_BeforeArgs toInvoke in _beforeget_captionText.GetInvocationList())
{
try
{
_beforeget_captionText?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_captionText != null)
{
foreach (Delegates.get_captionText_AfterArgs toInvoke in _afterget_captionText.GetInvocationList())
{
try
{
retVal = _afterget_captionText.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_captionText()
{
if (!HookedList.Contains("set_captionText"))
{
HookedList.Add("set_captionText");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_captionText", true), set_captionText);

}
}
internal static event Delegates.set_captionText_BeforeArgs _beforeset_captionText;
internal static event Delegates.set_captionText_AfterArgs _afterset_captionText;
private static void set_captionText(Action<TMPro.TMP_Dropdown,  TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self,  TMPro.TMP_Text value)
{
Delegates.Params_set_captionText @params = new() 
{
self = self
, value = value
};
if (_beforeset_captionText != null)
{
foreach (Delegates.set_captionText_BeforeArgs toInvoke in _beforeset_captionText.GetInvocationList())
{
try
{
_beforeset_captionText?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_captionText != null)
{
foreach (Delegates.set_captionText_AfterArgs toInvoke in _afterset_captionText.GetInvocationList())
{
try
{
_afterset_captionText.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookget_captionImage()
{
if (!HookedList.Contains("get_captionImage"))
{
HookedList.Add("get_captionImage");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_captionImage", true), get_captionImage);

}
}
internal static event Delegates.get_captionImage_BeforeArgs _beforeget_captionImage;
internal static event Delegates.get_captionImage_AfterArgs _afterget_captionImage;
private static UnityEngine.UI.Image get_captionImage(Func<TMPro.TMP_Dropdown, UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_captionImage @params = new() 
{
self = self
};
if (_beforeget_captionImage != null)
{
foreach (Delegates.get_captionImage_BeforeArgs toInvoke in _beforeget_captionImage.GetInvocationList())
{
try
{
_beforeget_captionImage?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_captionImage != null)
{
foreach (Delegates.get_captionImage_AfterArgs toInvoke in _afterget_captionImage.GetInvocationList())
{
try
{
retVal = _afterget_captionImage.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_captionImage()
{
if (!HookedList.Contains("set_captionImage"))
{
HookedList.Add("set_captionImage");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_captionImage", true), set_captionImage);

}
}
internal static event Delegates.set_captionImage_BeforeArgs _beforeset_captionImage;
internal static event Delegates.set_captionImage_AfterArgs _afterset_captionImage;
private static void set_captionImage(Action<TMPro.TMP_Dropdown,  UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self,  UnityEngine.UI.Image value)
{
Delegates.Params_set_captionImage @params = new() 
{
self = self
, value = value
};
if (_beforeset_captionImage != null)
{
foreach (Delegates.set_captionImage_BeforeArgs toInvoke in _beforeset_captionImage.GetInvocationList())
{
try
{
_beforeset_captionImage?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_captionImage != null)
{
foreach (Delegates.set_captionImage_AfterArgs toInvoke in _afterset_captionImage.GetInvocationList())
{
try
{
_afterset_captionImage.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookget_itemText()
{
if (!HookedList.Contains("get_itemText"))
{
HookedList.Add("get_itemText");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_itemText", true), get_itemText);

}
}
internal static event Delegates.get_itemText_BeforeArgs _beforeget_itemText;
internal static event Delegates.get_itemText_AfterArgs _afterget_itemText;
private static TMPro.TMP_Text get_itemText(Func<TMPro.TMP_Dropdown, TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_itemText @params = new() 
{
self = self
};
if (_beforeget_itemText != null)
{
foreach (Delegates.get_itemText_BeforeArgs toInvoke in _beforeget_itemText.GetInvocationList())
{
try
{
_beforeget_itemText?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_itemText != null)
{
foreach (Delegates.get_itemText_AfterArgs toInvoke in _afterget_itemText.GetInvocationList())
{
try
{
retVal = _afterget_itemText.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_itemText()
{
if (!HookedList.Contains("set_itemText"))
{
HookedList.Add("set_itemText");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_itemText", true), set_itemText);

}
}
internal static event Delegates.set_itemText_BeforeArgs _beforeset_itemText;
internal static event Delegates.set_itemText_AfterArgs _afterset_itemText;
private static void set_itemText(Action<TMPro.TMP_Dropdown,  TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self,  TMPro.TMP_Text value)
{
Delegates.Params_set_itemText @params = new() 
{
self = self
, value = value
};
if (_beforeset_itemText != null)
{
foreach (Delegates.set_itemText_BeforeArgs toInvoke in _beforeset_itemText.GetInvocationList())
{
try
{
_beforeset_itemText?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_itemText != null)
{
foreach (Delegates.set_itemText_AfterArgs toInvoke in _afterset_itemText.GetInvocationList())
{
try
{
_afterset_itemText.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookget_itemImage()
{
if (!HookedList.Contains("get_itemImage"))
{
HookedList.Add("get_itemImage");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_itemImage", true), get_itemImage);

}
}
internal static event Delegates.get_itemImage_BeforeArgs _beforeget_itemImage;
internal static event Delegates.get_itemImage_AfterArgs _afterget_itemImage;
private static UnityEngine.UI.Image get_itemImage(Func<TMPro.TMP_Dropdown, UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_itemImage @params = new() 
{
self = self
};
if (_beforeget_itemImage != null)
{
foreach (Delegates.get_itemImage_BeforeArgs toInvoke in _beforeget_itemImage.GetInvocationList())
{
try
{
_beforeget_itemImage?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_itemImage != null)
{
foreach (Delegates.get_itemImage_AfterArgs toInvoke in _afterget_itemImage.GetInvocationList())
{
try
{
retVal = _afterget_itemImage.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_itemImage()
{
if (!HookedList.Contains("set_itemImage"))
{
HookedList.Add("set_itemImage");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_itemImage", true), set_itemImage);

}
}
internal static event Delegates.set_itemImage_BeforeArgs _beforeset_itemImage;
internal static event Delegates.set_itemImage_AfterArgs _afterset_itemImage;
private static void set_itemImage(Action<TMPro.TMP_Dropdown,  UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self,  UnityEngine.UI.Image value)
{
Delegates.Params_set_itemImage @params = new() 
{
self = self
, value = value
};
if (_beforeset_itemImage != null)
{
foreach (Delegates.set_itemImage_BeforeArgs toInvoke in _beforeset_itemImage.GetInvocationList())
{
try
{
_beforeset_itemImage?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_itemImage != null)
{
foreach (Delegates.set_itemImage_AfterArgs toInvoke in _afterset_itemImage.GetInvocationList())
{
try
{
_afterset_itemImage.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookget_options()
{
if (!HookedList.Contains("get_options"))
{
HookedList.Add("get_options");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_options", true), get_options);

}
}
internal static event Delegates.get_options_BeforeArgs _beforeget_options;
internal static event Delegates.get_options_AfterArgs _afterget_options;
private static System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData> get_options(Func<TMPro.TMP_Dropdown, System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData>> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_options @params = new() 
{
self = self
};
if (_beforeget_options != null)
{
foreach (Delegates.get_options_BeforeArgs toInvoke in _beforeget_options.GetInvocationList())
{
try
{
_beforeget_options?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_options != null)
{
foreach (Delegates.get_options_AfterArgs toInvoke in _afterget_options.GetInvocationList())
{
try
{
retVal = _afterget_options.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookget_value()
{
if (!HookedList.Contains("get_value"))
{
HookedList.Add("get_value");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_value", true), get_value);

}
}
internal static event Delegates.get_value_BeforeArgs _beforeget_value;
internal static event Delegates.get_value_AfterArgs _afterget_value;
private static int get_value(Func<TMPro.TMP_Dropdown, int> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_get_value @params = new() 
{
self = self
};
if (_beforeget_value != null)
{
foreach (Delegates.get_value_BeforeArgs toInvoke in _beforeget_value.GetInvocationList())
{
try
{
_beforeget_value?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_value != null)
{
foreach (Delegates.get_value_AfterArgs toInvoke in _afterget_value.GetInvocationList())
{
try
{
retVal = _afterget_value.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_value()
{
if (!HookedList.Contains("set_value"))
{
HookedList.Add("set_value");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_value", true), set_value);

}
}
internal static event Delegates.set_value_BeforeArgs _beforeset_value;
internal static event Delegates.set_value_AfterArgs _afterset_value;
private static void set_value(Action<TMPro.TMP_Dropdown,  int> orig, TMPro.TMP_Dropdown self,  int value)
{
Delegates.Params_set_value @params = new() 
{
self = self
, value = value
};
if (_beforeset_value != null)
{
foreach (Delegates.set_value_BeforeArgs toInvoke in _beforeset_value.GetInvocationList())
{
try
{
_beforeset_value?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_value != null)
{
foreach (Delegates.set_value_AfterArgs toInvoke in _afterset_value.GetInvocationList())
{
try
{
_afterset_value.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookAwake()
{
if (!HookedList.Contains("Awake"))
{
HookedList.Add("Awake");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Awake", true), Awake);

}
}
internal static event Delegates.Awake_BeforeArgs _beforeAwake;
internal static event Delegates.Awake_AfterArgs _afterAwake;
private static void Awake(Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_Awake @params = new() 
{
self = self
};
if (_beforeAwake != null)
{
foreach (Delegates.Awake_BeforeArgs toInvoke in _beforeAwake.GetInvocationList())
{
try
{
_beforeAwake?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterAwake != null)
{
foreach (Delegates.Awake_AfterArgs toInvoke in _afterAwake.GetInvocationList())
{
try
{
_afterAwake.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookRefreshShownValue()
{
if (!HookedList.Contains("RefreshShownValue"))
{
HookedList.Add("RefreshShownValue");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "RefreshShownValue", true), RefreshShownValue);

}
}
internal static event Delegates.RefreshShownValue_BeforeArgs _beforeRefreshShownValue;
internal static event Delegates.RefreshShownValue_AfterArgs _afterRefreshShownValue;
private static void RefreshShownValue(Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_RefreshShownValue @params = new() 
{
self = self
};
if (_beforeRefreshShownValue != null)
{
foreach (Delegates.RefreshShownValue_BeforeArgs toInvoke in _beforeRefreshShownValue.GetInvocationList())
{
try
{
_beforeRefreshShownValue?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterRefreshShownValue != null)
{
foreach (Delegates.RefreshShownValue_AfterArgs toInvoke in _afterRefreshShownValue.GetInvocationList())
{
try
{
_afterRefreshShownValue.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookAddOptions_List()
{
if (!HookedList.Contains("AddOptions_List"))
{
HookedList.Add("AddOptions_List");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AddOptions_List", true), AddOptions_List);

}
}
internal static event Delegates.AddOptions_List_BeforeArgs _beforeAddOptions_List;
internal static event Delegates.AddOptions_List_AfterArgs _afterAddOptions_List;
private static void AddOptions_List(Action<TMPro.TMP_Dropdown,  System.Collections.Generic.List<string>> orig, TMPro.TMP_Dropdown self,  System.Collections.Generic.List<string> options)
{
Delegates.Params_AddOptions_List @params = new() 
{
self = self
, options = options
};
if (_beforeAddOptions_List != null)
{
foreach (Delegates.AddOptions_List_BeforeArgs toInvoke in _beforeAddOptions_List.GetInvocationList())
{
try
{
_beforeAddOptions_List?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
options = @params.options;
orig(self, options);
if (_afterAddOptions_List != null)
{
foreach (Delegates.AddOptions_List_AfterArgs toInvoke in _afterAddOptions_List.GetInvocationList())
{
try
{
_afterAddOptions_List.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookAddOptions_Sprite()
{
if (!HookedList.Contains("AddOptions_Sprite"))
{
HookedList.Add("AddOptions_Sprite");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AddOptions_Sprite", true), AddOptions_Sprite);

}
}
internal static event Delegates.AddOptions_Sprite_BeforeArgs _beforeAddOptions_Sprite;
internal static event Delegates.AddOptions_Sprite_AfterArgs _afterAddOptions_Sprite;
private static void AddOptions_Sprite(Action<TMPro.TMP_Dropdown,  System.Collections.Generic.List<UnityEngine.Sprite>> orig, TMPro.TMP_Dropdown self,  System.Collections.Generic.List<UnityEngine.Sprite> options)
{
Delegates.Params_AddOptions_Sprite @params = new() 
{
self = self
, options = options
};
if (_beforeAddOptions_Sprite != null)
{
foreach (Delegates.AddOptions_Sprite_BeforeArgs toInvoke in _beforeAddOptions_Sprite.GetInvocationList())
{
try
{
_beforeAddOptions_Sprite?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
options = @params.options;
orig(self, options);
if (_afterAddOptions_Sprite != null)
{
foreach (Delegates.AddOptions_Sprite_AfterArgs toInvoke in _afterAddOptions_Sprite.GetInvocationList())
{
try
{
_afterAddOptions_Sprite.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookClearOptions()
{
if (!HookedList.Contains("ClearOptions"))
{
HookedList.Add("ClearOptions");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "ClearOptions", true), ClearOptions);

}
}
internal static event Delegates.ClearOptions_BeforeArgs _beforeClearOptions;
internal static event Delegates.ClearOptions_AfterArgs _afterClearOptions;
private static void ClearOptions(Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_ClearOptions @params = new() 
{
self = self
};
if (_beforeClearOptions != null)
{
foreach (Delegates.ClearOptions_BeforeArgs toInvoke in _beforeClearOptions.GetInvocationList())
{
try
{
_beforeClearOptions?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterClearOptions != null)
{
foreach (Delegates.ClearOptions_AfterArgs toInvoke in _afterClearOptions.GetInvocationList())
{
try
{
_afterClearOptions.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookSetupTemplate()
{
if (!HookedList.Contains("SetupTemplate"))
{
HookedList.Add("SetupTemplate");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "SetupTemplate", true), SetupTemplate);

}
}
internal static event Delegates.SetupTemplate_BeforeArgs _beforeSetupTemplate;
internal static event Delegates.SetupTemplate_AfterArgs _afterSetupTemplate;
private static void SetupTemplate(Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_SetupTemplate @params = new() 
{
self = self
};
if (_beforeSetupTemplate != null)
{
foreach (Delegates.SetupTemplate_BeforeArgs toInvoke in _beforeSetupTemplate.GetInvocationList())
{
try
{
_beforeSetupTemplate?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterSetupTemplate != null)
{
foreach (Delegates.SetupTemplate_AfterArgs toInvoke in _afterSetupTemplate.GetInvocationList())
{
try
{
_afterSetupTemplate.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnPointerClick()
{
if (!HookedList.Contains("OnPointerClick"))
{
HookedList.Add("OnPointerClick");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnPointerClick", true), OnPointerClick);

}
}
internal static event Delegates.OnPointerClick_BeforeArgs _beforeOnPointerClick;
internal static event Delegates.OnPointerClick_AfterArgs _afterOnPointerClick;
private static void OnPointerClick(Action<TMPro.TMP_Dropdown,  UnityEngine.EventSystems.PointerEventData> orig, TMPro.TMP_Dropdown self,  UnityEngine.EventSystems.PointerEventData eventData)
{
Delegates.Params_OnPointerClick @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeOnPointerClick != null)
{
foreach (Delegates.OnPointerClick_BeforeArgs toInvoke in _beforeOnPointerClick.GetInvocationList())
{
try
{
_beforeOnPointerClick?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterOnPointerClick != null)
{
foreach (Delegates.OnPointerClick_AfterArgs toInvoke in _afterOnPointerClick.GetInvocationList())
{
try
{
_afterOnPointerClick.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnSubmit()
{
if (!HookedList.Contains("OnSubmit"))
{
HookedList.Add("OnSubmit");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnSubmit", true), OnSubmit);

}
}
internal static event Delegates.OnSubmit_BeforeArgs _beforeOnSubmit;
internal static event Delegates.OnSubmit_AfterArgs _afterOnSubmit;
private static void OnSubmit(Action<TMPro.TMP_Dropdown,  UnityEngine.EventSystems.BaseEventData> orig, TMPro.TMP_Dropdown self,  UnityEngine.EventSystems.BaseEventData eventData)
{
Delegates.Params_OnSubmit @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeOnSubmit != null)
{
foreach (Delegates.OnSubmit_BeforeArgs toInvoke in _beforeOnSubmit.GetInvocationList())
{
try
{
_beforeOnSubmit?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterOnSubmit != null)
{
foreach (Delegates.OnSubmit_AfterArgs toInvoke in _afterOnSubmit.GetInvocationList())
{
try
{
_afterOnSubmit.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnCancel()
{
if (!HookedList.Contains("OnCancel"))
{
HookedList.Add("OnCancel");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnCancel", true), OnCancel);

}
}
internal static event Delegates.OnCancel_BeforeArgs _beforeOnCancel;
internal static event Delegates.OnCancel_AfterArgs _afterOnCancel;
private static void OnCancel(Action<TMPro.TMP_Dropdown,  UnityEngine.EventSystems.BaseEventData> orig, TMPro.TMP_Dropdown self,  UnityEngine.EventSystems.BaseEventData eventData)
{
Delegates.Params_OnCancel @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeOnCancel != null)
{
foreach (Delegates.OnCancel_BeforeArgs toInvoke in _beforeOnCancel.GetInvocationList())
{
try
{
_beforeOnCancel?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterOnCancel != null)
{
foreach (Delegates.OnCancel_AfterArgs toInvoke in _afterOnCancel.GetInvocationList())
{
try
{
_afterOnCancel.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookShow()
{
if (!HookedList.Contains("Show"))
{
HookedList.Add("Show");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Show", true), Show);

}
}
internal static event Delegates.Show_BeforeArgs _beforeShow;
internal static event Delegates.Show_AfterArgs _afterShow;
private static void Show(Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_Show @params = new() 
{
self = self
};
if (_beforeShow != null)
{
foreach (Delegates.Show_BeforeArgs toInvoke in _beforeShow.GetInvocationList())
{
try
{
_beforeShow?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterShow != null)
{
foreach (Delegates.Show_AfterArgs toInvoke in _afterShow.GetInvocationList())
{
try
{
_afterShow.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookCreateBlocker()
{
if (!HookedList.Contains("CreateBlocker"))
{
HookedList.Add("CreateBlocker");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "CreateBlocker", true), CreateBlocker);

}
}
internal static event Delegates.CreateBlocker_BeforeArgs _beforeCreateBlocker;
internal static event Delegates.CreateBlocker_AfterArgs _afterCreateBlocker;
private static UnityEngine.GameObject CreateBlocker(Func<TMPro.TMP_Dropdown,  UnityEngine.Canvas, UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.Canvas rootCanvas)
{
Delegates.Params_CreateBlocker @params = new() 
{
self = self
, rootCanvas = rootCanvas
};
if (_beforeCreateBlocker != null)
{
foreach (Delegates.CreateBlocker_BeforeArgs toInvoke in _beforeCreateBlocker.GetInvocationList())
{
try
{
_beforeCreateBlocker?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
rootCanvas = @params.rootCanvas;
var retVal = orig(self, rootCanvas);
if (_afterCreateBlocker != null)
{
foreach (Delegates.CreateBlocker_AfterArgs toInvoke in _afterCreateBlocker.GetInvocationList())
{
try
{
retVal = _afterCreateBlocker.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void HookDestroyBlocker()
{
if (!HookedList.Contains("DestroyBlocker"))
{
HookedList.Add("DestroyBlocker");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DestroyBlocker", true), DestroyBlocker);

}
}
internal static event Delegates.DestroyBlocker_BeforeArgs _beforeDestroyBlocker;
internal static event Delegates.DestroyBlocker_AfterArgs _afterDestroyBlocker;
private static void DestroyBlocker(Action<TMPro.TMP_Dropdown,  UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.GameObject blocker)
{
Delegates.Params_DestroyBlocker @params = new() 
{
self = self
, blocker = blocker
};
if (_beforeDestroyBlocker != null)
{
foreach (Delegates.DestroyBlocker_BeforeArgs toInvoke in _beforeDestroyBlocker.GetInvocationList())
{
try
{
_beforeDestroyBlocker?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
blocker = @params.blocker;
orig(self, blocker);
if (_afterDestroyBlocker != null)
{
foreach (Delegates.DestroyBlocker_AfterArgs toInvoke in _afterDestroyBlocker.GetInvocationList())
{
try
{
_afterDestroyBlocker.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookCreateDropdownList()
{
if (!HookedList.Contains("CreateDropdownList"))
{
HookedList.Add("CreateDropdownList");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "CreateDropdownList", true), CreateDropdownList);

}
}
internal static event Delegates.CreateDropdownList_BeforeArgs _beforeCreateDropdownList;
internal static event Delegates.CreateDropdownList_AfterArgs _afterCreateDropdownList;
private static UnityEngine.GameObject CreateDropdownList(Func<TMPro.TMP_Dropdown,  UnityEngine.GameObject, UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.GameObject template)
{
Delegates.Params_CreateDropdownList @params = new() 
{
self = self
, template = template
};
if (_beforeCreateDropdownList != null)
{
foreach (Delegates.CreateDropdownList_BeforeArgs toInvoke in _beforeCreateDropdownList.GetInvocationList())
{
try
{
_beforeCreateDropdownList?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
template = @params.template;
var retVal = orig(self, template);
if (_afterCreateDropdownList != null)
{
foreach (Delegates.CreateDropdownList_AfterArgs toInvoke in _afterCreateDropdownList.GetInvocationList())
{
try
{
retVal = _afterCreateDropdownList.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void HookDestroyDropdownList()
{
if (!HookedList.Contains("DestroyDropdownList"))
{
HookedList.Add("DestroyDropdownList");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DestroyDropdownList", true), DestroyDropdownList);

}
}
internal static event Delegates.DestroyDropdownList_BeforeArgs _beforeDestroyDropdownList;
internal static event Delegates.DestroyDropdownList_AfterArgs _afterDestroyDropdownList;
private static void DestroyDropdownList(Action<TMPro.TMP_Dropdown,  UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.GameObject dropdownList)
{
Delegates.Params_DestroyDropdownList @params = new() 
{
self = self
, dropdownList = dropdownList
};
if (_beforeDestroyDropdownList != null)
{
foreach (Delegates.DestroyDropdownList_BeforeArgs toInvoke in _beforeDestroyDropdownList.GetInvocationList())
{
try
{
_beforeDestroyDropdownList?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
dropdownList = @params.dropdownList;
orig(self, dropdownList);
if (_afterDestroyDropdownList != null)
{
foreach (Delegates.DestroyDropdownList_AfterArgs toInvoke in _afterDestroyDropdownList.GetInvocationList())
{
try
{
_afterDestroyDropdownList.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookAlphaFadeList_float_float()
{
if (!HookedList.Contains("AlphaFadeList_float_float"))
{
HookedList.Add("AlphaFadeList_float_float");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AlphaFadeList_float_float", true), AlphaFadeList_float_float);

}
}
internal static event Delegates.AlphaFadeList_float_float_BeforeArgs _beforeAlphaFadeList_float_float;
internal static event Delegates.AlphaFadeList_float_float_AfterArgs _afterAlphaFadeList_float_float;
private static void AlphaFadeList_float_float(Action<TMPro.TMP_Dropdown,  float,  float> orig, TMPro.TMP_Dropdown self,  float duration,  float alpha)
{
Delegates.Params_AlphaFadeList_float_float @params = new() 
{
self = self
, duration = duration
, alpha = alpha
};
if (_beforeAlphaFadeList_float_float != null)
{
foreach (Delegates.AlphaFadeList_float_float_BeforeArgs toInvoke in _beforeAlphaFadeList_float_float.GetInvocationList())
{
try
{
_beforeAlphaFadeList_float_float?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
duration = @params.duration;
alpha = @params.alpha;
orig(self, duration, alpha);
if (_afterAlphaFadeList_float_float != null)
{
foreach (Delegates.AlphaFadeList_float_float_AfterArgs toInvoke in _afterAlphaFadeList_float_float.GetInvocationList())
{
try
{
_afterAlphaFadeList_float_float.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookAlphaFadeList_float_float_float()
{
if (!HookedList.Contains("AlphaFadeList_float_float_float"))
{
HookedList.Add("AlphaFadeList_float_float_float");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AlphaFadeList_float_float_float", true), AlphaFadeList_float_float_float);

}
}
internal static event Delegates.AlphaFadeList_float_float_float_BeforeArgs _beforeAlphaFadeList_float_float_float;
internal static event Delegates.AlphaFadeList_float_float_float_AfterArgs _afterAlphaFadeList_float_float_float;
private static void AlphaFadeList_float_float_float(Action<TMPro.TMP_Dropdown,  float,  float,  float> orig, TMPro.TMP_Dropdown self,  float duration,  float start,  float end)
{
Delegates.Params_AlphaFadeList_float_float_float @params = new() 
{
self = self
, duration = duration
, start = start
, end = end
};
if (_beforeAlphaFadeList_float_float_float != null)
{
foreach (Delegates.AlphaFadeList_float_float_float_BeforeArgs toInvoke in _beforeAlphaFadeList_float_float_float.GetInvocationList())
{
try
{
_beforeAlphaFadeList_float_float_float?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
duration = @params.duration;
start = @params.start;
end = @params.end;
orig(self, duration, start, end);
if (_afterAlphaFadeList_float_float_float != null)
{
foreach (Delegates.AlphaFadeList_float_float_float_AfterArgs toInvoke in _afterAlphaFadeList_float_float_float.GetInvocationList())
{
try
{
_afterAlphaFadeList_float_float_float.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookSetAlpha()
{
if (!HookedList.Contains("SetAlpha"))
{
HookedList.Add("SetAlpha");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "SetAlpha", true), SetAlpha);

}
}
internal static event Delegates.SetAlpha_BeforeArgs _beforeSetAlpha;
internal static event Delegates.SetAlpha_AfterArgs _afterSetAlpha;
private static void SetAlpha(Action<TMPro.TMP_Dropdown,  float> orig, TMPro.TMP_Dropdown self,  float alpha)
{
Delegates.Params_SetAlpha @params = new() 
{
self = self
, alpha = alpha
};
if (_beforeSetAlpha != null)
{
foreach (Delegates.SetAlpha_BeforeArgs toInvoke in _beforeSetAlpha.GetInvocationList())
{
try
{
_beforeSetAlpha?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
alpha = @params.alpha;
orig(self, alpha);
if (_afterSetAlpha != null)
{
foreach (Delegates.SetAlpha_AfterArgs toInvoke in _afterSetAlpha.GetInvocationList())
{
try
{
_afterSetAlpha.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookHide()
{
if (!HookedList.Contains("Hide"))
{
HookedList.Add("Hide");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Hide", true), Hide);

}
}
internal static event Delegates.Hide_BeforeArgs _beforeHide;
internal static event Delegates.Hide_AfterArgs _afterHide;
private static void Hide(Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self)
{
Delegates.Params_Hide @params = new() 
{
self = self
};
if (_beforeHide != null)
{
foreach (Delegates.Hide_BeforeArgs toInvoke in _beforeHide.GetInvocationList())
{
try
{
_beforeHide?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterHide != null)
{
foreach (Delegates.Hide_AfterArgs toInvoke in _afterHide.GetInvocationList())
{
try
{
_afterHide.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookDelayedDestroyDropdownList()
{
if (!HookedList.Contains("DelayedDestroyDropdownList"))
{
HookedList.Add("DelayedDestroyDropdownList");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DelayedDestroyDropdownList", true), DelayedDestroyDropdownList);

}
}
internal static event Delegates.DelayedDestroyDropdownList_BeforeArgs _beforeDelayedDestroyDropdownList;
private static System.Collections.IEnumerator DelayedDestroyDropdownList(Func<TMPro.TMP_Dropdown,  float, System.Collections.IEnumerator> orig, TMPro.TMP_Dropdown self,  float delay)
{
Delegates.Params_DelayedDestroyDropdownList @params = new() 
{
self = self
, delay = delay
};
if (_beforeDelayedDestroyDropdownList != null)
{
foreach (Delegates.DelayedDestroyDropdownList_BeforeArgs toInvoke in _beforeDelayedDestroyDropdownList.GetInvocationList())
{
try
{
_beforeDelayedDestroyDropdownList?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
delay = @params.delay;
return orig(self, delay);
}
internal static void HookOnSelectItem()
{
if (!HookedList.Contains("OnSelectItem"))
{
HookedList.Add("OnSelectItem");
new Hook(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnSelectItem", true), OnSelectItem);

}
}
internal static event Delegates.OnSelectItem_BeforeArgs _beforeOnSelectItem;
internal static event Delegates.OnSelectItem_AfterArgs _afterOnSelectItem;
private static void OnSelectItem(Action<TMPro.TMP_Dropdown,  UnityEngine.UI.Toggle> orig, TMPro.TMP_Dropdown self,  UnityEngine.UI.Toggle toggle)
{
Delegates.Params_OnSelectItem @params = new() 
{
self = self
, toggle = toggle
};
if (_beforeOnSelectItem != null)
{
foreach (Delegates.OnSelectItem_BeforeArgs toInvoke in _beforeOnSelectItem.GetInvocationList())
{
try
{
_beforeOnSelectItem?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
toggle = @params.toggle;
orig(self, toggle);
if (_afterOnSelectItem != null)
{
foreach (Delegates.OnSelectItem_AfterArgs toInvoke in _afterOnSelectItem.GetInvocationList())
{
try
{
_afterOnSelectItem.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
}

/// <summary>
/// Contains necessary information to create Hooks. Does not contain any hooks
/// </summary>
public static class Delegates
{
public sealed class Params_get_template
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_template_BeforeArgs(Params_get_template args);
public delegate UnityEngine.RectTransform get_template_AfterArgs(Params_get_template args, UnityEngine.RectTransform ret);
public delegate UnityEngine.RectTransform get_template_WithArgs (Func<TMPro.TMP_Dropdown, UnityEngine.RectTransform> orig, TMPro.TMP_Dropdown self);
public sealed class Params_set_template
{
public TMPro.TMP_Dropdown self;
public UnityEngine.RectTransform value;
}
public delegate void set_template_BeforeArgs(Params_set_template args);
public delegate void set_template_AfterArgs(Params_set_template args);
public delegate void set_template_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.RectTransform> orig, TMPro.TMP_Dropdown self,  UnityEngine.RectTransform value);
public sealed class Params_get_captionText
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_captionText_BeforeArgs(Params_get_captionText args);
public delegate TMPro.TMP_Text get_captionText_AfterArgs(Params_get_captionText args, TMPro.TMP_Text ret);
public delegate TMPro.TMP_Text get_captionText_WithArgs (Func<TMPro.TMP_Dropdown, TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self);
public sealed class Params_set_captionText
{
public TMPro.TMP_Dropdown self;
public TMPro.TMP_Text value;
}
public delegate void set_captionText_BeforeArgs(Params_set_captionText args);
public delegate void set_captionText_AfterArgs(Params_set_captionText args);
public delegate void set_captionText_WithArgs (Action<TMPro.TMP_Dropdown,  TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self,  TMPro.TMP_Text value);
public sealed class Params_get_captionImage
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_captionImage_BeforeArgs(Params_get_captionImage args);
public delegate UnityEngine.UI.Image get_captionImage_AfterArgs(Params_get_captionImage args, UnityEngine.UI.Image ret);
public delegate UnityEngine.UI.Image get_captionImage_WithArgs (Func<TMPro.TMP_Dropdown, UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self);
public sealed class Params_set_captionImage
{
public TMPro.TMP_Dropdown self;
public UnityEngine.UI.Image value;
}
public delegate void set_captionImage_BeforeArgs(Params_set_captionImage args);
public delegate void set_captionImage_AfterArgs(Params_set_captionImage args);
public delegate void set_captionImage_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self,  UnityEngine.UI.Image value);
public sealed class Params_get_itemText
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_itemText_BeforeArgs(Params_get_itemText args);
public delegate TMPro.TMP_Text get_itemText_AfterArgs(Params_get_itemText args, TMPro.TMP_Text ret);
public delegate TMPro.TMP_Text get_itemText_WithArgs (Func<TMPro.TMP_Dropdown, TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self);
public sealed class Params_set_itemText
{
public TMPro.TMP_Dropdown self;
public TMPro.TMP_Text value;
}
public delegate void set_itemText_BeforeArgs(Params_set_itemText args);
public delegate void set_itemText_AfterArgs(Params_set_itemText args);
public delegate void set_itemText_WithArgs (Action<TMPro.TMP_Dropdown,  TMPro.TMP_Text> orig, TMPro.TMP_Dropdown self,  TMPro.TMP_Text value);
public sealed class Params_get_itemImage
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_itemImage_BeforeArgs(Params_get_itemImage args);
public delegate UnityEngine.UI.Image get_itemImage_AfterArgs(Params_get_itemImage args, UnityEngine.UI.Image ret);
public delegate UnityEngine.UI.Image get_itemImage_WithArgs (Func<TMPro.TMP_Dropdown, UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self);
public sealed class Params_set_itemImage
{
public TMPro.TMP_Dropdown self;
public UnityEngine.UI.Image value;
}
public delegate void set_itemImage_BeforeArgs(Params_set_itemImage args);
public delegate void set_itemImage_AfterArgs(Params_set_itemImage args);
public delegate void set_itemImage_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.UI.Image> orig, TMPro.TMP_Dropdown self,  UnityEngine.UI.Image value);
public sealed class Params_get_options
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_options_BeforeArgs(Params_get_options args);
public delegate System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData> get_options_AfterArgs(Params_get_options args, System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData> ret);
public delegate System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData> get_options_WithArgs (Func<TMPro.TMP_Dropdown, System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData>> orig, TMPro.TMP_Dropdown self);
public sealed class Params_get_value
{
public TMPro.TMP_Dropdown self;
}
public delegate void get_value_BeforeArgs(Params_get_value args);
public delegate int get_value_AfterArgs(Params_get_value args, int ret);
public delegate int get_value_WithArgs (Func<TMPro.TMP_Dropdown, int> orig, TMPro.TMP_Dropdown self);
public sealed class Params_set_value
{
public TMPro.TMP_Dropdown self;
public int value;
}
public delegate void set_value_BeforeArgs(Params_set_value args);
public delegate void set_value_AfterArgs(Params_set_value args);
public delegate void set_value_WithArgs (Action<TMPro.TMP_Dropdown,  int> orig, TMPro.TMP_Dropdown self,  int value);
public sealed class Params_Awake
{
public TMPro.TMP_Dropdown self;
}
public delegate void Awake_BeforeArgs(Params_Awake args);
public delegate void Awake_AfterArgs(Params_Awake args);
public delegate void Awake_WithArgs (Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self);
public sealed class Params_RefreshShownValue
{
public TMPro.TMP_Dropdown self;
}
public delegate void RefreshShownValue_BeforeArgs(Params_RefreshShownValue args);
public delegate void RefreshShownValue_AfterArgs(Params_RefreshShownValue args);
public delegate void RefreshShownValue_WithArgs (Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self);
public sealed class Params_AddOptions_List
{
public TMPro.TMP_Dropdown self;
public System.Collections.Generic.List<string> options;
}
public delegate void AddOptions_List_BeforeArgs(Params_AddOptions_List args);
public delegate void AddOptions_List_AfterArgs(Params_AddOptions_List args);
public delegate void AddOptions_List_WithArgs (Action<TMPro.TMP_Dropdown,  System.Collections.Generic.List<string>> orig, TMPro.TMP_Dropdown self,  System.Collections.Generic.List<string> options);
public sealed class Params_AddOptions_Sprite
{
public TMPro.TMP_Dropdown self;
public System.Collections.Generic.List<UnityEngine.Sprite> options;
}
public delegate void AddOptions_Sprite_BeforeArgs(Params_AddOptions_Sprite args);
public delegate void AddOptions_Sprite_AfterArgs(Params_AddOptions_Sprite args);
public delegate void AddOptions_Sprite_WithArgs (Action<TMPro.TMP_Dropdown,  System.Collections.Generic.List<UnityEngine.Sprite>> orig, TMPro.TMP_Dropdown self,  System.Collections.Generic.List<UnityEngine.Sprite> options);
public sealed class Params_ClearOptions
{
public TMPro.TMP_Dropdown self;
}
public delegate void ClearOptions_BeforeArgs(Params_ClearOptions args);
public delegate void ClearOptions_AfterArgs(Params_ClearOptions args);
public delegate void ClearOptions_WithArgs (Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self);
public sealed class Params_SetupTemplate
{
public TMPro.TMP_Dropdown self;
}
public delegate void SetupTemplate_BeforeArgs(Params_SetupTemplate args);
public delegate void SetupTemplate_AfterArgs(Params_SetupTemplate args);
public delegate void SetupTemplate_WithArgs (Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self);
public sealed class Params_OnPointerClick
{
public TMPro.TMP_Dropdown self;
public UnityEngine.EventSystems.PointerEventData eventData;
}
public delegate void OnPointerClick_BeforeArgs(Params_OnPointerClick args);
public delegate void OnPointerClick_AfterArgs(Params_OnPointerClick args);
public delegate void OnPointerClick_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.EventSystems.PointerEventData> orig, TMPro.TMP_Dropdown self,  UnityEngine.EventSystems.PointerEventData eventData);
public sealed class Params_OnSubmit
{
public TMPro.TMP_Dropdown self;
public UnityEngine.EventSystems.BaseEventData eventData;
}
public delegate void OnSubmit_BeforeArgs(Params_OnSubmit args);
public delegate void OnSubmit_AfterArgs(Params_OnSubmit args);
public delegate void OnSubmit_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.EventSystems.BaseEventData> orig, TMPro.TMP_Dropdown self,  UnityEngine.EventSystems.BaseEventData eventData);
public sealed class Params_OnCancel
{
public TMPro.TMP_Dropdown self;
public UnityEngine.EventSystems.BaseEventData eventData;
}
public delegate void OnCancel_BeforeArgs(Params_OnCancel args);
public delegate void OnCancel_AfterArgs(Params_OnCancel args);
public delegate void OnCancel_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.EventSystems.BaseEventData> orig, TMPro.TMP_Dropdown self,  UnityEngine.EventSystems.BaseEventData eventData);
public sealed class Params_Show
{
public TMPro.TMP_Dropdown self;
}
public delegate void Show_BeforeArgs(Params_Show args);
public delegate void Show_AfterArgs(Params_Show args);
public delegate void Show_WithArgs (Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self);
public sealed class Params_CreateBlocker
{
public TMPro.TMP_Dropdown self;
public UnityEngine.Canvas rootCanvas;
}
public delegate void CreateBlocker_BeforeArgs(Params_CreateBlocker args);
public delegate UnityEngine.GameObject CreateBlocker_AfterArgs(Params_CreateBlocker args, UnityEngine.GameObject ret);
public delegate UnityEngine.GameObject CreateBlocker_WithArgs (Func<TMPro.TMP_Dropdown,  UnityEngine.Canvas, UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.Canvas rootCanvas);
public sealed class Params_DestroyBlocker
{
public TMPro.TMP_Dropdown self;
public UnityEngine.GameObject blocker;
}
public delegate void DestroyBlocker_BeforeArgs(Params_DestroyBlocker args);
public delegate void DestroyBlocker_AfterArgs(Params_DestroyBlocker args);
public delegate void DestroyBlocker_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.GameObject blocker);
public sealed class Params_CreateDropdownList
{
public TMPro.TMP_Dropdown self;
public UnityEngine.GameObject template;
}
public delegate void CreateDropdownList_BeforeArgs(Params_CreateDropdownList args);
public delegate UnityEngine.GameObject CreateDropdownList_AfterArgs(Params_CreateDropdownList args, UnityEngine.GameObject ret);
public delegate UnityEngine.GameObject CreateDropdownList_WithArgs (Func<TMPro.TMP_Dropdown,  UnityEngine.GameObject, UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.GameObject template);
public sealed class Params_DestroyDropdownList
{
public TMPro.TMP_Dropdown self;
public UnityEngine.GameObject dropdownList;
}
public delegate void DestroyDropdownList_BeforeArgs(Params_DestroyDropdownList args);
public delegate void DestroyDropdownList_AfterArgs(Params_DestroyDropdownList args);
public delegate void DestroyDropdownList_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.GameObject> orig, TMPro.TMP_Dropdown self,  UnityEngine.GameObject dropdownList);
public sealed class Params_AlphaFadeList_float_float
{
public TMPro.TMP_Dropdown self;
public float duration;
public float alpha;
}
public delegate void AlphaFadeList_float_float_BeforeArgs(Params_AlphaFadeList_float_float args);
public delegate void AlphaFadeList_float_float_AfterArgs(Params_AlphaFadeList_float_float args);
public delegate void AlphaFadeList_float_float_WithArgs (Action<TMPro.TMP_Dropdown,  float,  float> orig, TMPro.TMP_Dropdown self,  float duration,  float alpha);
public sealed class Params_AlphaFadeList_float_float_float
{
public TMPro.TMP_Dropdown self;
public float duration;
public float start;
public float end;
}
public delegate void AlphaFadeList_float_float_float_BeforeArgs(Params_AlphaFadeList_float_float_float args);
public delegate void AlphaFadeList_float_float_float_AfterArgs(Params_AlphaFadeList_float_float_float args);
public delegate void AlphaFadeList_float_float_float_WithArgs (Action<TMPro.TMP_Dropdown,  float,  float,  float> orig, TMPro.TMP_Dropdown self,  float duration,  float start,  float end);
public sealed class Params_SetAlpha
{
public TMPro.TMP_Dropdown self;
public float alpha;
}
public delegate void SetAlpha_BeforeArgs(Params_SetAlpha args);
public delegate void SetAlpha_AfterArgs(Params_SetAlpha args);
public delegate void SetAlpha_WithArgs (Action<TMPro.TMP_Dropdown,  float> orig, TMPro.TMP_Dropdown self,  float alpha);
public sealed class Params_Hide
{
public TMPro.TMP_Dropdown self;
}
public delegate void Hide_BeforeArgs(Params_Hide args);
public delegate void Hide_AfterArgs(Params_Hide args);
public delegate void Hide_WithArgs (Action<TMPro.TMP_Dropdown> orig, TMPro.TMP_Dropdown self);
public sealed class Params_DelayedDestroyDropdownList
{
public TMPro.TMP_Dropdown self;
public float delay;
}
public delegate void DelayedDestroyDropdownList_BeforeArgs(Params_DelayedDestroyDropdownList args);
public delegate System.Collections.IEnumerator DelayedDestroyDropdownList_AfterArgs(Params_DelayedDestroyDropdownList args, System.Collections.IEnumerator ret);
public delegate System.Collections.IEnumerator DelayedDestroyDropdownList_WithArgs (Func<TMPro.TMP_Dropdown,  float, System.Collections.IEnumerator> orig, TMPro.TMP_Dropdown self,  float delay);
public sealed class Params_OnSelectItem
{
public TMPro.TMP_Dropdown self;
public UnityEngine.UI.Toggle toggle;
}
public delegate void OnSelectItem_BeforeArgs(Params_OnSelectItem args);
public delegate void OnSelectItem_AfterArgs(Params_OnSelectItem args);
public delegate void OnSelectItem_WithArgs (Action<TMPro.TMP_Dropdown,  UnityEngine.UI.Toggle> orig, TMPro.TMP_Dropdown self,  UnityEngine.UI.Toggle toggle);
}

/// <summary>
/// Contains Hooks to that run code before orig(self) is called
/// </summary>
public static class BeforeOrig
{
public static event Delegates.get_template_BeforeArgs get_template
{
add
{

HookHandler._beforeget_template += value;
HookHandler.Hookget_template();
}
remove => HookHandler._beforeget_template -= value;
}
public static event Delegates.set_template_BeforeArgs set_template
{
add
{

HookHandler._beforeset_template += value;
HookHandler.Hookset_template();
}
remove => HookHandler._beforeset_template -= value;
}
public static event Delegates.get_captionText_BeforeArgs get_captionText
{
add
{

HookHandler._beforeget_captionText += value;
HookHandler.Hookget_captionText();
}
remove => HookHandler._beforeget_captionText -= value;
}
public static event Delegates.set_captionText_BeforeArgs set_captionText
{
add
{

HookHandler._beforeset_captionText += value;
HookHandler.Hookset_captionText();
}
remove => HookHandler._beforeset_captionText -= value;
}
public static event Delegates.get_captionImage_BeforeArgs get_captionImage
{
add
{

HookHandler._beforeget_captionImage += value;
HookHandler.Hookget_captionImage();
}
remove => HookHandler._beforeget_captionImage -= value;
}
public static event Delegates.set_captionImage_BeforeArgs set_captionImage
{
add
{

HookHandler._beforeset_captionImage += value;
HookHandler.Hookset_captionImage();
}
remove => HookHandler._beforeset_captionImage -= value;
}
public static event Delegates.get_itemText_BeforeArgs get_itemText
{
add
{

HookHandler._beforeget_itemText += value;
HookHandler.Hookget_itemText();
}
remove => HookHandler._beforeget_itemText -= value;
}
public static event Delegates.set_itemText_BeforeArgs set_itemText
{
add
{

HookHandler._beforeset_itemText += value;
HookHandler.Hookset_itemText();
}
remove => HookHandler._beforeset_itemText -= value;
}
public static event Delegates.get_itemImage_BeforeArgs get_itemImage
{
add
{

HookHandler._beforeget_itemImage += value;
HookHandler.Hookget_itemImage();
}
remove => HookHandler._beforeget_itemImage -= value;
}
public static event Delegates.set_itemImage_BeforeArgs set_itemImage
{
add
{

HookHandler._beforeset_itemImage += value;
HookHandler.Hookset_itemImage();
}
remove => HookHandler._beforeset_itemImage -= value;
}
public static event Delegates.get_options_BeforeArgs get_options
{
add
{

HookHandler._beforeget_options += value;
HookHandler.Hookget_options();
}
remove => HookHandler._beforeget_options -= value;
}
public static event Delegates.get_value_BeforeArgs get_value
{
add
{

HookHandler._beforeget_value += value;
HookHandler.Hookget_value();
}
remove => HookHandler._beforeget_value -= value;
}
public static event Delegates.set_value_BeforeArgs set_value
{
add
{

HookHandler._beforeset_value += value;
HookHandler.Hookset_value();
}
remove => HookHandler._beforeset_value -= value;
}
public static event Delegates.Awake_BeforeArgs Awake
{
add
{

HookHandler._beforeAwake += value;
HookHandler.HookAwake();
}
remove => HookHandler._beforeAwake -= value;
}
public static event Delegates.RefreshShownValue_BeforeArgs RefreshShownValue
{
add
{

HookHandler._beforeRefreshShownValue += value;
HookHandler.HookRefreshShownValue();
}
remove => HookHandler._beforeRefreshShownValue -= value;
}
public static event Delegates.AddOptions_List_BeforeArgs AddOptions_List
{
add
{

HookHandler._beforeAddOptions_List += value;
HookHandler.HookAddOptions_List();
}
remove => HookHandler._beforeAddOptions_List -= value;
}
public static event Delegates.AddOptions_Sprite_BeforeArgs AddOptions_Sprite
{
add
{

HookHandler._beforeAddOptions_Sprite += value;
HookHandler.HookAddOptions_Sprite();
}
remove => HookHandler._beforeAddOptions_Sprite -= value;
}
public static event Delegates.ClearOptions_BeforeArgs ClearOptions
{
add
{

HookHandler._beforeClearOptions += value;
HookHandler.HookClearOptions();
}
remove => HookHandler._beforeClearOptions -= value;
}
public static event Delegates.SetupTemplate_BeforeArgs SetupTemplate
{
add
{

HookHandler._beforeSetupTemplate += value;
HookHandler.HookSetupTemplate();
}
remove => HookHandler._beforeSetupTemplate -= value;
}
public static event Delegates.OnPointerClick_BeforeArgs OnPointerClick
{
add
{

HookHandler._beforeOnPointerClick += value;
HookHandler.HookOnPointerClick();
}
remove => HookHandler._beforeOnPointerClick -= value;
}
public static event Delegates.OnSubmit_BeforeArgs OnSubmit
{
add
{

HookHandler._beforeOnSubmit += value;
HookHandler.HookOnSubmit();
}
remove => HookHandler._beforeOnSubmit -= value;
}
public static event Delegates.OnCancel_BeforeArgs OnCancel
{
add
{

HookHandler._beforeOnCancel += value;
HookHandler.HookOnCancel();
}
remove => HookHandler._beforeOnCancel -= value;
}
public static event Delegates.Show_BeforeArgs Show
{
add
{

HookHandler._beforeShow += value;
HookHandler.HookShow();
}
remove => HookHandler._beforeShow -= value;
}
public static event Delegates.CreateBlocker_BeforeArgs CreateBlocker
{
add
{

HookHandler._beforeCreateBlocker += value;
HookHandler.HookCreateBlocker();
}
remove => HookHandler._beforeCreateBlocker -= value;
}
public static event Delegates.DestroyBlocker_BeforeArgs DestroyBlocker
{
add
{

HookHandler._beforeDestroyBlocker += value;
HookHandler.HookDestroyBlocker();
}
remove => HookHandler._beforeDestroyBlocker -= value;
}
public static event Delegates.CreateDropdownList_BeforeArgs CreateDropdownList
{
add
{

HookHandler._beforeCreateDropdownList += value;
HookHandler.HookCreateDropdownList();
}
remove => HookHandler._beforeCreateDropdownList -= value;
}
public static event Delegates.DestroyDropdownList_BeforeArgs DestroyDropdownList
{
add
{

HookHandler._beforeDestroyDropdownList += value;
HookHandler.HookDestroyDropdownList();
}
remove => HookHandler._beforeDestroyDropdownList -= value;
}
public static event Delegates.AlphaFadeList_float_float_BeforeArgs AlphaFadeList_float_float
{
add
{

HookHandler._beforeAlphaFadeList_float_float += value;
HookHandler.HookAlphaFadeList_float_float();
}
remove => HookHandler._beforeAlphaFadeList_float_float -= value;
}
public static event Delegates.AlphaFadeList_float_float_float_BeforeArgs AlphaFadeList_float_float_float
{
add
{

HookHandler._beforeAlphaFadeList_float_float_float += value;
HookHandler.HookAlphaFadeList_float_float_float();
}
remove => HookHandler._beforeAlphaFadeList_float_float_float -= value;
}
public static event Delegates.SetAlpha_BeforeArgs SetAlpha
{
add
{

HookHandler._beforeSetAlpha += value;
HookHandler.HookSetAlpha();
}
remove => HookHandler._beforeSetAlpha -= value;
}
public static event Delegates.Hide_BeforeArgs Hide
{
add
{

HookHandler._beforeHide += value;
HookHandler.HookHide();
}
remove => HookHandler._beforeHide -= value;
}
public static event Delegates.DelayedDestroyDropdownList_BeforeArgs DelayedDestroyDropdownList
{
add
{

HookHandler._beforeDelayedDestroyDropdownList += value;
HookHandler.HookDelayedDestroyDropdownList();
}
remove => HookHandler._beforeDelayedDestroyDropdownList -= value;
}
public static event Delegates.OnSelectItem_BeforeArgs OnSelectItem
{
add
{

HookHandler._beforeOnSelectItem += value;
HookHandler.HookOnSelectItem();
}
remove => HookHandler._beforeOnSelectItem -= value;
}
}

/// <summary>
/// Contains Hooks to that run code after orig(self) is called
/// </summary>
public static class AfterOrig
{
public static event Delegates.get_template_AfterArgs get_template
{
add
{

HookHandler._afterget_template += value;
HookHandler.Hookget_template();
}
remove => HookHandler._afterget_template -= value;
}
public static event Delegates.set_template_AfterArgs set_template
{
add
{

HookHandler._afterset_template += value;
HookHandler.Hookset_template();
}
remove => HookHandler._afterset_template -= value;
}
public static event Delegates.get_captionText_AfterArgs get_captionText
{
add
{

HookHandler._afterget_captionText += value;
HookHandler.Hookget_captionText();
}
remove => HookHandler._afterget_captionText -= value;
}
public static event Delegates.set_captionText_AfterArgs set_captionText
{
add
{

HookHandler._afterset_captionText += value;
HookHandler.Hookset_captionText();
}
remove => HookHandler._afterset_captionText -= value;
}
public static event Delegates.get_captionImage_AfterArgs get_captionImage
{
add
{

HookHandler._afterget_captionImage += value;
HookHandler.Hookget_captionImage();
}
remove => HookHandler._afterget_captionImage -= value;
}
public static event Delegates.set_captionImage_AfterArgs set_captionImage
{
add
{

HookHandler._afterset_captionImage += value;
HookHandler.Hookset_captionImage();
}
remove => HookHandler._afterset_captionImage -= value;
}
public static event Delegates.get_itemText_AfterArgs get_itemText
{
add
{

HookHandler._afterget_itemText += value;
HookHandler.Hookget_itemText();
}
remove => HookHandler._afterget_itemText -= value;
}
public static event Delegates.set_itemText_AfterArgs set_itemText
{
add
{

HookHandler._afterset_itemText += value;
HookHandler.Hookset_itemText();
}
remove => HookHandler._afterset_itemText -= value;
}
public static event Delegates.get_itemImage_AfterArgs get_itemImage
{
add
{

HookHandler._afterget_itemImage += value;
HookHandler.Hookget_itemImage();
}
remove => HookHandler._afterget_itemImage -= value;
}
public static event Delegates.set_itemImage_AfterArgs set_itemImage
{
add
{

HookHandler._afterset_itemImage += value;
HookHandler.Hookset_itemImage();
}
remove => HookHandler._afterset_itemImage -= value;
}
public static event Delegates.get_options_AfterArgs get_options
{
add
{

HookHandler._afterget_options += value;
HookHandler.Hookget_options();
}
remove => HookHandler._afterget_options -= value;
}
public static event Delegates.get_value_AfterArgs get_value
{
add
{

HookHandler._afterget_value += value;
HookHandler.Hookget_value();
}
remove => HookHandler._afterget_value -= value;
}
public static event Delegates.set_value_AfterArgs set_value
{
add
{

HookHandler._afterset_value += value;
HookHandler.Hookset_value();
}
remove => HookHandler._afterset_value -= value;
}
public static event Delegates.Awake_AfterArgs Awake
{
add
{

HookHandler._afterAwake += value;
HookHandler.HookAwake();
}
remove => HookHandler._afterAwake -= value;
}
public static event Delegates.RefreshShownValue_AfterArgs RefreshShownValue
{
add
{

HookHandler._afterRefreshShownValue += value;
HookHandler.HookRefreshShownValue();
}
remove => HookHandler._afterRefreshShownValue -= value;
}
public static event Delegates.AddOptions_List_AfterArgs AddOptions_List
{
add
{

HookHandler._afterAddOptions_List += value;
HookHandler.HookAddOptions_List();
}
remove => HookHandler._afterAddOptions_List -= value;
}
public static event Delegates.AddOptions_Sprite_AfterArgs AddOptions_Sprite
{
add
{

HookHandler._afterAddOptions_Sprite += value;
HookHandler.HookAddOptions_Sprite();
}
remove => HookHandler._afterAddOptions_Sprite -= value;
}
public static event Delegates.ClearOptions_AfterArgs ClearOptions
{
add
{

HookHandler._afterClearOptions += value;
HookHandler.HookClearOptions();
}
remove => HookHandler._afterClearOptions -= value;
}
public static event Delegates.SetupTemplate_AfterArgs SetupTemplate
{
add
{

HookHandler._afterSetupTemplate += value;
HookHandler.HookSetupTemplate();
}
remove => HookHandler._afterSetupTemplate -= value;
}
public static event Delegates.OnPointerClick_AfterArgs OnPointerClick
{
add
{

HookHandler._afterOnPointerClick += value;
HookHandler.HookOnPointerClick();
}
remove => HookHandler._afterOnPointerClick -= value;
}
public static event Delegates.OnSubmit_AfterArgs OnSubmit
{
add
{

HookHandler._afterOnSubmit += value;
HookHandler.HookOnSubmit();
}
remove => HookHandler._afterOnSubmit -= value;
}
public static event Delegates.OnCancel_AfterArgs OnCancel
{
add
{

HookHandler._afterOnCancel += value;
HookHandler.HookOnCancel();
}
remove => HookHandler._afterOnCancel -= value;
}
public static event Delegates.Show_AfterArgs Show
{
add
{

HookHandler._afterShow += value;
HookHandler.HookShow();
}
remove => HookHandler._afterShow -= value;
}
public static event Delegates.CreateBlocker_AfterArgs CreateBlocker
{
add
{

HookHandler._afterCreateBlocker += value;
HookHandler.HookCreateBlocker();
}
remove => HookHandler._afterCreateBlocker -= value;
}
public static event Delegates.DestroyBlocker_AfterArgs DestroyBlocker
{
add
{

HookHandler._afterDestroyBlocker += value;
HookHandler.HookDestroyBlocker();
}
remove => HookHandler._afterDestroyBlocker -= value;
}
public static event Delegates.CreateDropdownList_AfterArgs CreateDropdownList
{
add
{

HookHandler._afterCreateDropdownList += value;
HookHandler.HookCreateDropdownList();
}
remove => HookHandler._afterCreateDropdownList -= value;
}
public static event Delegates.DestroyDropdownList_AfterArgs DestroyDropdownList
{
add
{

HookHandler._afterDestroyDropdownList += value;
HookHandler.HookDestroyDropdownList();
}
remove => HookHandler._afterDestroyDropdownList -= value;
}
public static event Delegates.AlphaFadeList_float_float_AfterArgs AlphaFadeList_float_float
{
add
{

HookHandler._afterAlphaFadeList_float_float += value;
HookHandler.HookAlphaFadeList_float_float();
}
remove => HookHandler._afterAlphaFadeList_float_float -= value;
}
public static event Delegates.AlphaFadeList_float_float_float_AfterArgs AlphaFadeList_float_float_float
{
add
{

HookHandler._afterAlphaFadeList_float_float_float += value;
HookHandler.HookAlphaFadeList_float_float_float();
}
remove => HookHandler._afterAlphaFadeList_float_float_float -= value;
}
public static event Delegates.SetAlpha_AfterArgs SetAlpha
{
add
{

HookHandler._afterSetAlpha += value;
HookHandler.HookSetAlpha();
}
remove => HookHandler._afterSetAlpha -= value;
}
public static event Delegates.Hide_AfterArgs Hide
{
add
{

HookHandler._afterHide += value;
HookHandler.HookHide();
}
remove => HookHandler._afterHide -= value;
}
public static event Delegates.OnSelectItem_AfterArgs OnSelectItem
{
add
{

HookHandler._afterOnSelectItem += value;
HookHandler.HookOnSelectItem();
}
remove => HookHandler._afterOnSelectItem -= value;
}
}

/// <summary>
/// Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property getters/setters
/// </summary>
public static class WithOrig
{
public static event Delegates.get_template_WithArgs get_template
{
add => HookEndpointManager.Add<Delegates.get_template_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_template", true), value);
remove => HookEndpointManager.Remove<Delegates.get_template_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_template", true), value);
}
public static event Delegates.set_template_WithArgs set_template
{
add => HookEndpointManager.Add<Delegates.set_template_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_template", true), value);
remove => HookEndpointManager.Remove<Delegates.set_template_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_template", true), value);
}
public static event Delegates.get_captionText_WithArgs get_captionText
{
add => HookEndpointManager.Add<Delegates.get_captionText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_captionText", true), value);
remove => HookEndpointManager.Remove<Delegates.get_captionText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_captionText", true), value);
}
public static event Delegates.set_captionText_WithArgs set_captionText
{
add => HookEndpointManager.Add<Delegates.set_captionText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_captionText", true), value);
remove => HookEndpointManager.Remove<Delegates.set_captionText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_captionText", true), value);
}
public static event Delegates.get_captionImage_WithArgs get_captionImage
{
add => HookEndpointManager.Add<Delegates.get_captionImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_captionImage", true), value);
remove => HookEndpointManager.Remove<Delegates.get_captionImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_captionImage", true), value);
}
public static event Delegates.set_captionImage_WithArgs set_captionImage
{
add => HookEndpointManager.Add<Delegates.set_captionImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_captionImage", true), value);
remove => HookEndpointManager.Remove<Delegates.set_captionImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_captionImage", true), value);
}
public static event Delegates.get_itemText_WithArgs get_itemText
{
add => HookEndpointManager.Add<Delegates.get_itemText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_itemText", true), value);
remove => HookEndpointManager.Remove<Delegates.get_itemText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_itemText", true), value);
}
public static event Delegates.set_itemText_WithArgs set_itemText
{
add => HookEndpointManager.Add<Delegates.set_itemText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_itemText", true), value);
remove => HookEndpointManager.Remove<Delegates.set_itemText_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_itemText", true), value);
}
public static event Delegates.get_itemImage_WithArgs get_itemImage
{
add => HookEndpointManager.Add<Delegates.get_itemImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_itemImage", true), value);
remove => HookEndpointManager.Remove<Delegates.get_itemImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_itemImage", true), value);
}
public static event Delegates.set_itemImage_WithArgs set_itemImage
{
add => HookEndpointManager.Add<Delegates.set_itemImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_itemImage", true), value);
remove => HookEndpointManager.Remove<Delegates.set_itemImage_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_itemImage", true), value);
}
public static event Delegates.get_options_WithArgs get_options
{
add => HookEndpointManager.Add<Delegates.get_options_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_options", true), value);
remove => HookEndpointManager.Remove<Delegates.get_options_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_options", true), value);
}
public static event Delegates.get_value_WithArgs get_value
{
add => HookEndpointManager.Add<Delegates.get_value_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_value", true), value);
remove => HookEndpointManager.Remove<Delegates.get_value_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "get_value", true), value);
}
public static event Delegates.set_value_WithArgs set_value
{
add => HookEndpointManager.Add<Delegates.set_value_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_value", true), value);
remove => HookEndpointManager.Remove<Delegates.set_value_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "set_value", true), value);
}
public static event Delegates.Awake_WithArgs Awake
{
add => HookEndpointManager.Add<Delegates.Awake_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Awake", true), value);
remove => HookEndpointManager.Remove<Delegates.Awake_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Awake", true), value);
}
public static event Delegates.RefreshShownValue_WithArgs RefreshShownValue
{
add => HookEndpointManager.Add<Delegates.RefreshShownValue_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "RefreshShownValue", true), value);
remove => HookEndpointManager.Remove<Delegates.RefreshShownValue_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "RefreshShownValue", true), value);
}
public static event Delegates.AddOptions_List_WithArgs AddOptions_List
{
add => HookEndpointManager.Add<Delegates.AddOptions_List_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AddOptions", true), value);
remove => HookEndpointManager.Remove<Delegates.AddOptions_List_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AddOptions", true), value);
}
public static event Delegates.AddOptions_Sprite_WithArgs AddOptions_Sprite
{
add => HookEndpointManager.Add<Delegates.AddOptions_Sprite_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AddOptions", true), value);
remove => HookEndpointManager.Remove<Delegates.AddOptions_Sprite_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AddOptions", true), value);
}
public static event Delegates.ClearOptions_WithArgs ClearOptions
{
add => HookEndpointManager.Add<Delegates.ClearOptions_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "ClearOptions", true), value);
remove => HookEndpointManager.Remove<Delegates.ClearOptions_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "ClearOptions", true), value);
}
public static event Delegates.SetupTemplate_WithArgs SetupTemplate
{
add => HookEndpointManager.Add<Delegates.SetupTemplate_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "SetupTemplate", true), value);
remove => HookEndpointManager.Remove<Delegates.SetupTemplate_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "SetupTemplate", true), value);
}
public static event Delegates.OnPointerClick_WithArgs OnPointerClick
{
add => HookEndpointManager.Add<Delegates.OnPointerClick_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnPointerClick", true), value);
remove => HookEndpointManager.Remove<Delegates.OnPointerClick_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnPointerClick", true), value);
}
public static event Delegates.OnSubmit_WithArgs OnSubmit
{
add => HookEndpointManager.Add<Delegates.OnSubmit_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnSubmit", true), value);
remove => HookEndpointManager.Remove<Delegates.OnSubmit_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnSubmit", true), value);
}
public static event Delegates.OnCancel_WithArgs OnCancel
{
add => HookEndpointManager.Add<Delegates.OnCancel_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnCancel", true), value);
remove => HookEndpointManager.Remove<Delegates.OnCancel_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnCancel", true), value);
}
public static event Delegates.Show_WithArgs Show
{
add => HookEndpointManager.Add<Delegates.Show_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Show", true), value);
remove => HookEndpointManager.Remove<Delegates.Show_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Show", true), value);
}
public static event Delegates.CreateBlocker_WithArgs CreateBlocker
{
add => HookEndpointManager.Add<Delegates.CreateBlocker_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "CreateBlocker", true), value);
remove => HookEndpointManager.Remove<Delegates.CreateBlocker_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "CreateBlocker", true), value);
}
public static event Delegates.DestroyBlocker_WithArgs DestroyBlocker
{
add => HookEndpointManager.Add<Delegates.DestroyBlocker_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DestroyBlocker", true), value);
remove => HookEndpointManager.Remove<Delegates.DestroyBlocker_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DestroyBlocker", true), value);
}
public static event Delegates.CreateDropdownList_WithArgs CreateDropdownList
{
add => HookEndpointManager.Add<Delegates.CreateDropdownList_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "CreateDropdownList", true), value);
remove => HookEndpointManager.Remove<Delegates.CreateDropdownList_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "CreateDropdownList", true), value);
}
public static event Delegates.DestroyDropdownList_WithArgs DestroyDropdownList
{
add => HookEndpointManager.Add<Delegates.DestroyDropdownList_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DestroyDropdownList", true), value);
remove => HookEndpointManager.Remove<Delegates.DestroyDropdownList_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DestroyDropdownList", true), value);
}
public static event Delegates.AlphaFadeList_float_float_WithArgs AlphaFadeList_float_float
{
add => HookEndpointManager.Add<Delegates.AlphaFadeList_float_float_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AlphaFadeList", true), value);
remove => HookEndpointManager.Remove<Delegates.AlphaFadeList_float_float_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AlphaFadeList", true), value);
}
public static event Delegates.AlphaFadeList_float_float_float_WithArgs AlphaFadeList_float_float_float
{
add => HookEndpointManager.Add<Delegates.AlphaFadeList_float_float_float_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AlphaFadeList", true), value);
remove => HookEndpointManager.Remove<Delegates.AlphaFadeList_float_float_float_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "AlphaFadeList", true), value);
}
public static event Delegates.SetAlpha_WithArgs SetAlpha
{
add => HookEndpointManager.Add<Delegates.SetAlpha_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "SetAlpha", true), value);
remove => HookEndpointManager.Remove<Delegates.SetAlpha_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "SetAlpha", true), value);
}
public static event Delegates.Hide_WithArgs Hide
{
add => HookEndpointManager.Add<Delegates.Hide_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Hide", true), value);
remove => HookEndpointManager.Remove<Delegates.Hide_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "Hide", true), value);
}
public static event Delegates.DelayedDestroyDropdownList_WithArgs DelayedDestroyDropdownList
{
add => HookEndpointManager.Add<Delegates.DelayedDestroyDropdownList_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DelayedDestroyDropdownList", true), value);
remove => HookEndpointManager.Remove<Delegates.DelayedDestroyDropdownList_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "DelayedDestroyDropdownList", true), value);
}
public static event Delegates.OnSelectItem_WithArgs OnSelectItem
{
add => HookEndpointManager.Add<Delegates.OnSelectItem_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnSelectItem", true), value);
remove => HookEndpointManager.Remove<Delegates.OnSelectItem_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(TMPro.TMP_Dropdown), "OnSelectItem", true), value);
}
}

}
