namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for GetPersistentBoolFromSaveData class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnGetPersistentBoolFromSaveData
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookShouldHideDirect()
        {
            if (!HookedList.Contains("ShouldHideDirect"))
            {
                HookedList.Add("ShouldHideDirect");
                On.GetPersistentBoolFromSaveData.ShouldHideDirect += ShouldHideDirect;
            }
        }

        internal static event Delegates.ShouldHideDirect_BeforeArgs _beforeShouldHideDirect;
        internal static event Delegates.ShouldHideDirect_NormalArgs _afterShouldHideDirect;

        private static bool ShouldHideDirect(On.GetPersistentBoolFromSaveData.orig_ShouldHideDirect orig,
            GetPersistentBoolFromSaveData self)
        {
            Delegates.Params_ShouldHideDirect @params = new()
            {
                self = self
            };
            _beforeShouldHideDirect?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterShouldHideDirect != null) retVal = _afterShouldHideDirect.Invoke(@params);
            return retVal;
        }

        internal static void HookReset()
        {
            if (!HookedList.Contains("Reset"))
            {
                HookedList.Add("Reset");
                On.GetPersistentBoolFromSaveData.Reset += Reset;
            }
        }

        internal static event Delegates.Reset_BeforeArgs _beforeReset;
        internal static event Delegates.Reset_NormalArgs _afterReset;

        private static void Reset(On.GetPersistentBoolFromSaveData.orig_Reset orig, GetPersistentBoolFromSaveData self)
        {
            Delegates.Params_Reset @params = new()
            {
                self = self
            };
            _beforeReset?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterReset != null) _afterReset.Invoke(@params);
        }

        internal static void HookOnEnter()
        {
            if (!HookedList.Contains("OnEnter"))
            {
                HookedList.Add("OnEnter");
                On.GetPersistentBoolFromSaveData.OnEnter += OnEnter;
            }
        }

        internal static event Delegates.OnEnter_BeforeArgs _beforeOnEnter;
        internal static event Delegates.OnEnter_NormalArgs _afterOnEnter;

        private static void OnEnter(On.GetPersistentBoolFromSaveData.orig_OnEnter orig,
            GetPersistentBoolFromSaveData self)
        {
            Delegates.Params_OnEnter @params = new()
            {
                self = self
            };
            _beforeOnEnter?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterOnEnter != null) _afterOnEnter.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void OnEnter_BeforeArgs(Params_OnEnter args);

        public delegate void OnEnter_NormalArgs(Params_OnEnter args);

        public delegate void Reset_BeforeArgs(Params_Reset args);

        public delegate void Reset_NormalArgs(Params_Reset args);

        public delegate void ShouldHideDirect_BeforeArgs(Params_ShouldHideDirect args);

        public delegate bool ShouldHideDirect_NormalArgs(Params_ShouldHideDirect args);

        public sealed class Params_ShouldHideDirect
        {
            public GetPersistentBoolFromSaveData self;
        }

        public sealed class Params_Reset
        {
            public GetPersistentBoolFromSaveData self;
        }

        public sealed class Params_OnEnter
        {
            public GetPersistentBoolFromSaveData self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.ShouldHideDirect_BeforeArgs ShouldHideDirect
        {
            add
            {
                HookHandler._beforeShouldHideDirect += value;
                HookHandler.HookShouldHideDirect();
            }
            remove => HookHandler._beforeShouldHideDirect -= value;
        }

        public static event Delegates.Reset_BeforeArgs Reset
        {
            add
            {
                HookHandler._beforeReset += value;
                HookHandler.HookReset();
            }
            remove => HookHandler._beforeReset -= value;
        }

        public static event Delegates.OnEnter_BeforeArgs OnEnter
        {
            add
            {
                HookHandler._beforeOnEnter += value;
                HookHandler.HookOnEnter();
            }
            remove => HookHandler._beforeOnEnter -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.ShouldHideDirect_NormalArgs ShouldHideDirect
        {
            add
            {
                HookHandler._afterShouldHideDirect += value;
                HookHandler.HookShouldHideDirect();
            }
            remove => HookHandler._afterShouldHideDirect -= value;
        }

        public static event Delegates.Reset_NormalArgs Reset
        {
            add
            {
                HookHandler._afterReset += value;
                HookHandler.HookReset();
            }
            remove => HookHandler._afterReset -= value;
        }

        public static event Delegates.OnEnter_NormalArgs OnEnter
        {
            add
            {
                HookHandler._afterOnEnter += value;
                HookHandler.HookOnEnter();
            }
            remove => HookHandler._afterOnEnter -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.GetPersistentBoolFromSaveData.hook_ShouldHideDirect ShouldHideDirect
        {
            add => On.GetPersistentBoolFromSaveData.ShouldHideDirect += value;
            remove => On.GetPersistentBoolFromSaveData.ShouldHideDirect -= value;
        }

        public static event On.GetPersistentBoolFromSaveData.hook_Reset Reset
        {
            add => On.GetPersistentBoolFromSaveData.Reset += value;
            remove => On.GetPersistentBoolFromSaveData.Reset -= value;
        }

        public static event On.GetPersistentBoolFromSaveData.hook_OnEnter OnEnter
        {
            add => On.GetPersistentBoolFromSaveData.OnEnter += value;
            remove => On.GetPersistentBoolFromSaveData.OnEnter -= value;
        }
    }
}