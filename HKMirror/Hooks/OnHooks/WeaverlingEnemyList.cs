using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;
namespace HKMirror.Hooks.OnHooks;
/// <summary>
/// Contains different types of On Hooks for WeaverlingEnemyList class.<br />
/// Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnWeaverlingEnemyList
{
internal static class HookHandler
{
private static List<string> HookedList = new List<string>();
internal static void HookOnEnable()
{
if (!HookedList.Contains("OnEnable"))
{
HookedList.Add("OnEnable");
On.WeaverlingEnemyList.OnEnable += OnEnable;

}
}
internal static event Delegates.OnEnable_BeforeArgs _beforeOnEnable;
internal static event Delegates.OnEnable_AfterArgs _afterOnEnable;
private static void OnEnable(On.WeaverlingEnemyList.orig_OnEnable orig,WeaverlingEnemyList self)
{
Delegates.Params_OnEnable @params = new() 
{
self = self
};
if (_beforeOnEnable != null)
{
foreach (Delegates.OnEnable_BeforeArgs toInvoke in _beforeOnEnable.GetInvocationList())
{
try
{
_beforeOnEnable?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterOnEnable != null)
{
foreach (Delegates.OnEnable_AfterArgs toInvoke in _afterOnEnable.GetInvocationList())
{
try
{
_afterOnEnable.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnTriggerEnter2D()
{
if (!HookedList.Contains("OnTriggerEnter2D"))
{
HookedList.Add("OnTriggerEnter2D");
On.WeaverlingEnemyList.OnTriggerEnter2D += OnTriggerEnter2D;

}
}
internal static event Delegates.OnTriggerEnter2D_BeforeArgs _beforeOnTriggerEnter2D;
internal static event Delegates.OnTriggerEnter2D_AfterArgs _afterOnTriggerEnter2D;
private static void OnTriggerEnter2D(On.WeaverlingEnemyList.orig_OnTriggerEnter2D orig,WeaverlingEnemyList self,  UnityEngine.Collider2D otherCollider)
{
Delegates.Params_OnTriggerEnter2D @params = new() 
{
self = self
, otherCollider = otherCollider
};
if (_beforeOnTriggerEnter2D != null)
{
foreach (Delegates.OnTriggerEnter2D_BeforeArgs toInvoke in _beforeOnTriggerEnter2D.GetInvocationList())
{
try
{
_beforeOnTriggerEnter2D?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
otherCollider = @params.otherCollider;
orig(self, otherCollider);
if (_afterOnTriggerEnter2D != null)
{
foreach (Delegates.OnTriggerEnter2D_AfterArgs toInvoke in _afterOnTriggerEnter2D.GetInvocationList())
{
try
{
_afterOnTriggerEnter2D.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnTriggerExit2D()
{
if (!HookedList.Contains("OnTriggerExit2D"))
{
HookedList.Add("OnTriggerExit2D");
On.WeaverlingEnemyList.OnTriggerExit2D += OnTriggerExit2D;

}
}
internal static event Delegates.OnTriggerExit2D_BeforeArgs _beforeOnTriggerExit2D;
internal static event Delegates.OnTriggerExit2D_AfterArgs _afterOnTriggerExit2D;
private static void OnTriggerExit2D(On.WeaverlingEnemyList.orig_OnTriggerExit2D orig,WeaverlingEnemyList self,  UnityEngine.Collider2D otherCollider)
{
Delegates.Params_OnTriggerExit2D @params = new() 
{
self = self
, otherCollider = otherCollider
};
if (_beforeOnTriggerExit2D != null)
{
foreach (Delegates.OnTriggerExit2D_BeforeArgs toInvoke in _beforeOnTriggerExit2D.GetInvocationList())
{
try
{
_beforeOnTriggerExit2D?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
otherCollider = @params.otherCollider;
orig(self, otherCollider);
if (_afterOnTriggerExit2D != null)
{
foreach (Delegates.OnTriggerExit2D_AfterArgs toInvoke in _afterOnTriggerExit2D.GetInvocationList())
{
try
{
_afterOnTriggerExit2D.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookGetTarget()
{
if (!HookedList.Contains("GetTarget"))
{
HookedList.Add("GetTarget");
On.WeaverlingEnemyList.GetTarget += GetTarget;

}
}
internal static event Delegates.GetTarget_BeforeArgs _beforeGetTarget;
internal static event Delegates.GetTarget_AfterArgs _afterGetTarget;
private static UnityEngine.GameObject GetTarget(On.WeaverlingEnemyList.orig_GetTarget orig,WeaverlingEnemyList self)
{
Delegates.Params_GetTarget @params = new() 
{
self = self
};
if (_beforeGetTarget != null)
{
foreach (Delegates.GetTarget_BeforeArgs toInvoke in _beforeGetTarget.GetInvocationList())
{
try
{
_beforeGetTarget?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterGetTarget != null)
{
foreach (Delegates.GetTarget_AfterArgs toInvoke in _afterGetTarget.GetInvocationList())
{
try
{
retVal = _afterGetTarget.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
}

/// <summary>
/// Contains necessary information to create Hooks. Does not contain any hooks
/// </summary>
public static class Delegates
{
public sealed class Params_OnEnable
{
public WeaverlingEnemyList self;
}
public delegate void OnEnable_BeforeArgs(Params_OnEnable args);
public delegate void OnEnable_AfterArgs(Params_OnEnable args);
public delegate void OnEnable_WithArgs (Action<WeaverlingEnemyList> orig, WeaverlingEnemyList self);
public sealed class Params_OnTriggerEnter2D
{
public WeaverlingEnemyList self;
public UnityEngine.Collider2D otherCollider;
}
public delegate void OnTriggerEnter2D_BeforeArgs(Params_OnTriggerEnter2D args);
public delegate void OnTriggerEnter2D_AfterArgs(Params_OnTriggerEnter2D args);
public delegate void OnTriggerEnter2D_WithArgs (Action<WeaverlingEnemyList,  UnityEngine.Collider2D> orig, WeaverlingEnemyList self,  UnityEngine.Collider2D otherCollider);
public sealed class Params_OnTriggerExit2D
{
public WeaverlingEnemyList self;
public UnityEngine.Collider2D otherCollider;
}
public delegate void OnTriggerExit2D_BeforeArgs(Params_OnTriggerExit2D args);
public delegate void OnTriggerExit2D_AfterArgs(Params_OnTriggerExit2D args);
public delegate void OnTriggerExit2D_WithArgs (Action<WeaverlingEnemyList,  UnityEngine.Collider2D> orig, WeaverlingEnemyList self,  UnityEngine.Collider2D otherCollider);
public sealed class Params_GetTarget
{
public WeaverlingEnemyList self;
}
public delegate void GetTarget_BeforeArgs(Params_GetTarget args);
public delegate UnityEngine.GameObject GetTarget_AfterArgs(Params_GetTarget args, UnityEngine.GameObject ret);
public delegate UnityEngine.GameObject GetTarget_WithArgs (Func<WeaverlingEnemyList, UnityEngine.GameObject> orig, WeaverlingEnemyList self);
}

/// <summary>
/// Contains Hooks to that run code before orig(self) is called
/// </summary>
public static class BeforeOrig
{
public static event Delegates.OnEnable_BeforeArgs OnEnable
{
add
{

HookHandler._beforeOnEnable += value;
HookHandler.HookOnEnable();
}
remove => HookHandler._beforeOnEnable -= value;
}
public static event Delegates.OnTriggerEnter2D_BeforeArgs OnTriggerEnter2D
{
add
{

HookHandler._beforeOnTriggerEnter2D += value;
HookHandler.HookOnTriggerEnter2D();
}
remove => HookHandler._beforeOnTriggerEnter2D -= value;
}
public static event Delegates.OnTriggerExit2D_BeforeArgs OnTriggerExit2D
{
add
{

HookHandler._beforeOnTriggerExit2D += value;
HookHandler.HookOnTriggerExit2D();
}
remove => HookHandler._beforeOnTriggerExit2D -= value;
}
public static event Delegates.GetTarget_BeforeArgs GetTarget
{
add
{

HookHandler._beforeGetTarget += value;
HookHandler.HookGetTarget();
}
remove => HookHandler._beforeGetTarget -= value;
}
}

/// <summary>
/// Contains Hooks to that run code after orig(self) is called
/// </summary>
public static class AfterOrig
{
public static event Delegates.OnEnable_AfterArgs OnEnable
{
add
{

HookHandler._afterOnEnable += value;
HookHandler.HookOnEnable();
}
remove => HookHandler._afterOnEnable -= value;
}
public static event Delegates.OnTriggerEnter2D_AfterArgs OnTriggerEnter2D
{
add
{

HookHandler._afterOnTriggerEnter2D += value;
HookHandler.HookOnTriggerEnter2D();
}
remove => HookHandler._afterOnTriggerEnter2D -= value;
}
public static event Delegates.OnTriggerExit2D_AfterArgs OnTriggerExit2D
{
add
{

HookHandler._afterOnTriggerExit2D += value;
HookHandler.HookOnTriggerExit2D();
}
remove => HookHandler._afterOnTriggerExit2D -= value;
}
public static event Delegates.GetTarget_AfterArgs GetTarget
{
add
{

HookHandler._afterGetTarget += value;
HookHandler.HookGetTarget();
}
remove => HookHandler._afterGetTarget -= value;
}
}

/// <summary>
/// Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property getters/setters
/// </summary>
public static class WithOrig
{
public static event On.WeaverlingEnemyList.hook_OnEnable OnEnable
{
add => On.WeaverlingEnemyList.OnEnable += value;
remove => On.WeaverlingEnemyList.OnEnable -= value;
}
public static event On.WeaverlingEnemyList.hook_OnTriggerEnter2D OnTriggerEnter2D
{
add => On.WeaverlingEnemyList.OnTriggerEnter2D += value;
remove => On.WeaverlingEnemyList.OnTriggerEnter2D -= value;
}
public static event On.WeaverlingEnemyList.hook_OnTriggerExit2D OnTriggerExit2D
{
add => On.WeaverlingEnemyList.OnTriggerExit2D += value;
remove => On.WeaverlingEnemyList.OnTriggerExit2D -= value;
}
public static event On.WeaverlingEnemyList.hook_GetTarget GetTarget
{
add => On.WeaverlingEnemyList.GetTarget += value;
remove => On.WeaverlingEnemyList.GetTarget -= value;
}
}

}
