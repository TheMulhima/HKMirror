namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for ShopItemStats class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnShopItemStats
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookAwake()
        {
            if (!HookedList.Contains("Awake"))
            {
                HookedList.Add("Awake");
                On.ShopItemStats.Awake += Awake;
            }
        }

        internal static event Delegates.Awake_BeforeArgs _beforeAwake;
        internal static event Delegates.Awake_NormalArgs _afterAwake;

        private static void Awake(On.ShopItemStats.orig_Awake orig, ShopItemStats self)
        {
            Delegates.Params_Awake @params = new()
            {
                self = self
            };
            _beforeAwake?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterAwake != null) _afterAwake.Invoke(@params);
        }

        internal static void HookOnEnable()
        {
            if (!HookedList.Contains("OnEnable"))
            {
                HookedList.Add("OnEnable");
                On.ShopItemStats.OnEnable += OnEnable;
            }
        }

        internal static event Delegates.OnEnable_BeforeArgs _beforeOnEnable;
        internal static event Delegates.OnEnable_NormalArgs _afterOnEnable;

        private static void OnEnable(On.ShopItemStats.orig_OnEnable orig, ShopItemStats self)
        {
            Delegates.Params_OnEnable @params = new()
            {
                self = self
            };
            _beforeOnEnable?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterOnEnable != null) _afterOnEnable.Invoke(@params);
        }

        internal static void HookUpdate()
        {
            if (!HookedList.Contains("Update"))
            {
                HookedList.Add("Update");
                On.ShopItemStats.Update += Update;
            }
        }

        internal static event Delegates.Update_BeforeArgs _beforeUpdate;
        internal static event Delegates.Update_NormalArgs _afterUpdate;

        private static void Update(On.ShopItemStats.orig_Update orig, ShopItemStats self)
        {
            Delegates.Params_Update @params = new()
            {
                self = self
            };
            _beforeUpdate?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterUpdate != null) _afterUpdate.Invoke(@params);
        }

        internal static void HookGetCost()
        {
            if (!HookedList.Contains("GetCost"))
            {
                HookedList.Add("GetCost");
                On.ShopItemStats.GetCost += GetCost;
            }
        }

        internal static event Delegates.GetCost_BeforeArgs _beforeGetCost;
        internal static event Delegates.GetCost_NormalArgs _afterGetCost;

        private static int GetCost(On.ShopItemStats.orig_GetCost orig, ShopItemStats self)
        {
            Delegates.Params_GetCost @params = new()
            {
                self = self
            };
            _beforeGetCost?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetCost != null) retVal = _afterGetCost.Invoke(@params);
            return retVal;
        }

        internal static void HookGetNotchCost()
        {
            if (!HookedList.Contains("GetNotchCost"))
            {
                HookedList.Add("GetNotchCost");
                On.ShopItemStats.GetNotchCost += GetNotchCost;
            }
        }

        internal static event Delegates.GetNotchCost_BeforeArgs _beforeGetNotchCost;
        internal static event Delegates.GetNotchCost_NormalArgs _afterGetNotchCost;

        private static int GetNotchCost(On.ShopItemStats.orig_GetNotchCost orig, ShopItemStats self)
        {
            Delegates.Params_GetNotchCost @params = new()
            {
                self = self
            };
            _beforeGetNotchCost?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetNotchCost != null) retVal = _afterGetNotchCost.Invoke(@params);
            return retVal;
        }

        internal static void HookGetCharmsRequired()
        {
            if (!HookedList.Contains("GetCharmsRequired"))
            {
                HookedList.Add("GetCharmsRequired");
                On.ShopItemStats.GetCharmsRequired += GetCharmsRequired;
            }
        }

        internal static event Delegates.GetCharmsRequired_BeforeArgs _beforeGetCharmsRequired;
        internal static event Delegates.GetCharmsRequired_NormalArgs _afterGetCharmsRequired;

        private static int GetCharmsRequired(On.ShopItemStats.orig_GetCharmsRequired orig, ShopItemStats self)
        {
            Delegates.Params_GetCharmsRequired @params = new()
            {
                self = self
            };
            _beforeGetCharmsRequired?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetCharmsRequired != null) retVal = _afterGetCharmsRequired.Invoke(@params);
            return retVal;
        }

        internal static void HookGetRelicNumber()
        {
            if (!HookedList.Contains("GetRelicNumber"))
            {
                HookedList.Add("GetRelicNumber");
                On.ShopItemStats.GetRelicNumber += GetRelicNumber;
            }
        }

        internal static event Delegates.GetRelicNumber_BeforeArgs _beforeGetRelicNumber;
        internal static event Delegates.GetRelicNumber_NormalArgs _afterGetRelicNumber;

        private static int GetRelicNumber(On.ShopItemStats.orig_GetRelicNumber orig, ShopItemStats self)
        {
            Delegates.Params_GetRelicNumber @params = new()
            {
                self = self
            };
            _beforeGetRelicNumber?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetRelicNumber != null) retVal = _afterGetRelicNumber.Invoke(@params);
            return retVal;
        }

        internal static void HookGetNameConvo()
        {
            if (!HookedList.Contains("GetNameConvo"))
            {
                HookedList.Add("GetNameConvo");
                On.ShopItemStats.GetNameConvo += GetNameConvo;
            }
        }

        internal static event Delegates.GetNameConvo_BeforeArgs _beforeGetNameConvo;
        internal static event Delegates.GetNameConvo_NormalArgs _afterGetNameConvo;

        private static string GetNameConvo(On.ShopItemStats.orig_GetNameConvo orig, ShopItemStats self)
        {
            Delegates.Params_GetNameConvo @params = new()
            {
                self = self
            };
            _beforeGetNameConvo?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetNameConvo != null) retVal = _afterGetNameConvo.Invoke(@params);
            return retVal;
        }

        internal static void HookGetDescConvo()
        {
            if (!HookedList.Contains("GetDescConvo"))
            {
                HookedList.Add("GetDescConvo");
                On.ShopItemStats.GetDescConvo += GetDescConvo;
            }
        }

        internal static event Delegates.GetDescConvo_BeforeArgs _beforeGetDescConvo;
        internal static event Delegates.GetDescConvo_NormalArgs _afterGetDescConvo;

        private static string GetDescConvo(On.ShopItemStats.orig_GetDescConvo orig, ShopItemStats self)
        {
            Delegates.Params_GetDescConvo @params = new()
            {
                self = self
            };
            _beforeGetDescConvo?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetDescConvo != null) retVal = _afterGetDescConvo.Invoke(@params);
            return retVal;
        }

        internal static void HookGetPlayerDataBoolName()
        {
            if (!HookedList.Contains("GetPlayerDataBoolName"))
            {
                HookedList.Add("GetPlayerDataBoolName");
                On.ShopItemStats.GetPlayerDataBoolName += GetPlayerDataBoolName;
            }
        }

        internal static event Delegates.GetPlayerDataBoolName_BeforeArgs _beforeGetPlayerDataBoolName;
        internal static event Delegates.GetPlayerDataBoolName_NormalArgs _afterGetPlayerDataBoolName;

        private static string GetPlayerDataBoolName(On.ShopItemStats.orig_GetPlayerDataBoolName orig,
            ShopItemStats self)
        {
            Delegates.Params_GetPlayerDataBoolName @params = new()
            {
                self = self
            };
            _beforeGetPlayerDataBoolName?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetPlayerDataBoolName != null) retVal = _afterGetPlayerDataBoolName.Invoke(@params);
            return retVal;
        }

        internal static void HookGetRequiredPlayerDataBoolName()
        {
            if (!HookedList.Contains("GetRequiredPlayerDataBoolName"))
            {
                HookedList.Add("GetRequiredPlayerDataBoolName");
                On.ShopItemStats.GetRequiredPlayerDataBoolName += GetRequiredPlayerDataBoolName;
            }
        }

        internal static event Delegates.GetRequiredPlayerDataBoolName_BeforeArgs _beforeGetRequiredPlayerDataBoolName;
        internal static event Delegates.GetRequiredPlayerDataBoolName_NormalArgs _afterGetRequiredPlayerDataBoolName;

        private static string GetRequiredPlayerDataBoolName(On.ShopItemStats.orig_GetRequiredPlayerDataBoolName orig,
            ShopItemStats self)
        {
            Delegates.Params_GetRequiredPlayerDataBoolName @params = new()
            {
                self = self
            };
            _beforeGetRequiredPlayerDataBoolName?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetRequiredPlayerDataBoolName != null)
                retVal = _afterGetRequiredPlayerDataBoolName.Invoke(@params);
            return retVal;
        }

        internal static void HookGetRemovalPlayerDataBoolName()
        {
            if (!HookedList.Contains("GetRemovalPlayerDataBoolName"))
            {
                HookedList.Add("GetRemovalPlayerDataBoolName");
                On.ShopItemStats.GetRemovalPlayerDataBoolName += GetRemovalPlayerDataBoolName;
            }
        }

        internal static event Delegates.GetRemovalPlayerDataBoolName_BeforeArgs _beforeGetRemovalPlayerDataBoolName;
        internal static event Delegates.GetRemovalPlayerDataBoolName_NormalArgs _afterGetRemovalPlayerDataBoolName;

        private static string GetRemovalPlayerDataBoolName(On.ShopItemStats.orig_GetRemovalPlayerDataBoolName orig,
            ShopItemStats self)
        {
            Delegates.Params_GetRemovalPlayerDataBoolName @params = new()
            {
                self = self
            };
            _beforeGetRemovalPlayerDataBoolName?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetRemovalPlayerDataBoolName != null) retVal = _afterGetRemovalPlayerDataBoolName.Invoke(@params);
            return retVal;
        }

        internal static void HookGetItemNumber()
        {
            if (!HookedList.Contains("GetItemNumber"))
            {
                HookedList.Add("GetItemNumber");
                On.ShopItemStats.GetItemNumber += GetItemNumber;
            }
        }

        internal static event Delegates.GetItemNumber_BeforeArgs _beforeGetItemNumber;
        internal static event Delegates.GetItemNumber_NormalArgs _afterGetItemNumber;

        private static int GetItemNumber(On.ShopItemStats.orig_GetItemNumber orig, ShopItemStats self)
        {
            Delegates.Params_GetItemNumber @params = new()
            {
                self = self
            };
            _beforeGetItemNumber?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetItemNumber != null) retVal = _afterGetItemNumber.Invoke(@params);
            return retVal;
        }

        internal static void HookGetSpecialType()
        {
            if (!HookedList.Contains("GetSpecialType"))
            {
                HookedList.Add("GetSpecialType");
                On.ShopItemStats.GetSpecialType += GetSpecialType;
            }
        }

        internal static event Delegates.GetSpecialType_BeforeArgs _beforeGetSpecialType;
        internal static event Delegates.GetSpecialType_NormalArgs _afterGetSpecialType;

        private static int GetSpecialType(On.ShopItemStats.orig_GetSpecialType orig, ShopItemStats self)
        {
            Delegates.Params_GetSpecialType @params = new()
            {
                self = self
            };
            _beforeGetSpecialType?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetSpecialType != null) retVal = _afterGetSpecialType.Invoke(@params);
            return retVal;
        }

        internal static void HookCanBuy()
        {
            if (!HookedList.Contains("CanBuy"))
            {
                HookedList.Add("CanBuy");
                On.ShopItemStats.CanBuy += CanBuy;
            }
        }

        internal static event Delegates.CanBuy_BeforeArgs _beforeCanBuy;
        internal static event Delegates.CanBuy_NormalArgs _afterCanBuy;

        private static bool CanBuy(On.ShopItemStats.orig_CanBuy orig, ShopItemStats self)
        {
            Delegates.Params_CanBuy @params = new()
            {
                self = self
            };
            _beforeCanBuy?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterCanBuy != null) retVal = _afterCanBuy.Invoke(@params);
            return retVal;
        }

        internal static void HookSetCanBuy()
        {
            if (!HookedList.Contains("SetCanBuy"))
            {
                HookedList.Add("SetCanBuy");
                On.ShopItemStats.SetCanBuy += SetCanBuy;
            }
        }

        internal static event Delegates.SetCanBuy_BeforeArgs _beforeSetCanBuy;
        internal static event Delegates.SetCanBuy_NormalArgs _afterSetCanBuy;

        private static void SetCanBuy(On.ShopItemStats.orig_SetCanBuy orig, ShopItemStats self, bool can)
        {
            Delegates.Params_SetCanBuy @params = new()
            {
                self = self, can = can
            };
            _beforeSetCanBuy?.Invoke(@params);
            self = @params.self;
            can = @params.can;
            orig(self, can);
            if (_afterSetCanBuy != null) _afterSetCanBuy.Invoke(@params);
        }

        internal static void HookSetDescConvo()
        {
            if (!HookedList.Contains("SetDescConvo"))
            {
                HookedList.Add("SetDescConvo");
                On.ShopItemStats.SetDescConvo += SetDescConvo;
            }
        }

        internal static event Delegates.SetDescConvo_BeforeArgs _beforeSetDescConvo;
        internal static event Delegates.SetDescConvo_NormalArgs _afterSetDescConvo;

        private static void SetDescConvo(On.ShopItemStats.orig_SetDescConvo orig, ShopItemStats self, string convo)
        {
            Delegates.Params_SetDescConvo @params = new()
            {
                self = self, convo = convo
            };
            _beforeSetDescConvo?.Invoke(@params);
            self = @params.self;
            convo = @params.convo;
            orig(self, convo);
            if (_afterSetDescConvo != null) _afterSetDescConvo.Invoke(@params);
        }

        internal static void HookSetCost()
        {
            if (!HookedList.Contains("SetCost"))
            {
                HookedList.Add("SetCost");
                On.ShopItemStats.SetCost += SetCost;
            }
        }

        internal static event Delegates.SetCost_BeforeArgs _beforeSetCost;
        internal static event Delegates.SetCost_NormalArgs _afterSetCost;

        private static void SetCost(On.ShopItemStats.orig_SetCost orig, ShopItemStats self, int newCost)
        {
            Delegates.Params_SetCost @params = new()
            {
                self = self, newCost = newCost
            };
            _beforeSetCost?.Invoke(@params);
            self = @params.self;
            newCost = @params.newCost;
            orig(self, newCost);
            if (_afterSetCost != null) _afterSetCost.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void Awake_BeforeArgs(Params_Awake args);

        public delegate void Awake_NormalArgs(Params_Awake args);

        public delegate void CanBuy_BeforeArgs(Params_CanBuy args);

        public delegate bool CanBuy_NormalArgs(Params_CanBuy args);

        public delegate void GetCharmsRequired_BeforeArgs(Params_GetCharmsRequired args);

        public delegate int GetCharmsRequired_NormalArgs(Params_GetCharmsRequired args);

        public delegate void GetCost_BeforeArgs(Params_GetCost args);

        public delegate int GetCost_NormalArgs(Params_GetCost args);

        public delegate void GetDescConvo_BeforeArgs(Params_GetDescConvo args);

        public delegate string GetDescConvo_NormalArgs(Params_GetDescConvo args);

        public delegate void GetItemNumber_BeforeArgs(Params_GetItemNumber args);

        public delegate int GetItemNumber_NormalArgs(Params_GetItemNumber args);

        public delegate void GetNameConvo_BeforeArgs(Params_GetNameConvo args);

        public delegate string GetNameConvo_NormalArgs(Params_GetNameConvo args);

        public delegate void GetNotchCost_BeforeArgs(Params_GetNotchCost args);

        public delegate int GetNotchCost_NormalArgs(Params_GetNotchCost args);

        public delegate void GetPlayerDataBoolName_BeforeArgs(Params_GetPlayerDataBoolName args);

        public delegate string GetPlayerDataBoolName_NormalArgs(Params_GetPlayerDataBoolName args);

        public delegate void GetRelicNumber_BeforeArgs(Params_GetRelicNumber args);

        public delegate int GetRelicNumber_NormalArgs(Params_GetRelicNumber args);

        public delegate void GetRemovalPlayerDataBoolName_BeforeArgs(Params_GetRemovalPlayerDataBoolName args);

        public delegate string GetRemovalPlayerDataBoolName_NormalArgs(Params_GetRemovalPlayerDataBoolName args);

        public delegate void GetRequiredPlayerDataBoolName_BeforeArgs(Params_GetRequiredPlayerDataBoolName args);

        public delegate string GetRequiredPlayerDataBoolName_NormalArgs(Params_GetRequiredPlayerDataBoolName args);

        public delegate void GetSpecialType_BeforeArgs(Params_GetSpecialType args);

        public delegate int GetSpecialType_NormalArgs(Params_GetSpecialType args);

        public delegate void OnEnable_BeforeArgs(Params_OnEnable args);

        public delegate void OnEnable_NormalArgs(Params_OnEnable args);

        public delegate void SetCanBuy_BeforeArgs(Params_SetCanBuy args);

        public delegate void SetCanBuy_NormalArgs(Params_SetCanBuy args);

        public delegate void SetCost_BeforeArgs(Params_SetCost args);

        public delegate void SetCost_NormalArgs(Params_SetCost args);

        public delegate void SetDescConvo_BeforeArgs(Params_SetDescConvo args);

        public delegate void SetDescConvo_NormalArgs(Params_SetDescConvo args);

        public delegate void Update_BeforeArgs(Params_Update args);

        public delegate void Update_NormalArgs(Params_Update args);

        public sealed class Params_Awake
        {
            public ShopItemStats self;
        }

        public sealed class Params_OnEnable
        {
            public ShopItemStats self;
        }

        public sealed class Params_Update
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetCost
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetNotchCost
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetCharmsRequired
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetRelicNumber
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetNameConvo
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetDescConvo
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetPlayerDataBoolName
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetRequiredPlayerDataBoolName
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetRemovalPlayerDataBoolName
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetItemNumber
        {
            public ShopItemStats self;
        }

        public sealed class Params_GetSpecialType
        {
            public ShopItemStats self;
        }

        public sealed class Params_CanBuy
        {
            public ShopItemStats self;
        }

        public sealed class Params_SetCanBuy
        {
            public bool can;
            public ShopItemStats self;
        }

        public sealed class Params_SetDescConvo
        {
            public string convo;
            public ShopItemStats self;
        }

        public sealed class Params_SetCost
        {
            public int newCost;
            public ShopItemStats self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.Awake_BeforeArgs Awake
        {
            add
            {
                HookHandler._beforeAwake += value;
                HookHandler.HookAwake();
            }
            remove => HookHandler._beforeAwake -= value;
        }

        public static event Delegates.OnEnable_BeforeArgs OnEnable
        {
            add
            {
                HookHandler._beforeOnEnable += value;
                HookHandler.HookOnEnable();
            }
            remove => HookHandler._beforeOnEnable -= value;
        }

        public static event Delegates.Update_BeforeArgs Update
        {
            add
            {
                HookHandler._beforeUpdate += value;
                HookHandler.HookUpdate();
            }
            remove => HookHandler._beforeUpdate -= value;
        }

        public static event Delegates.GetCost_BeforeArgs GetCost
        {
            add
            {
                HookHandler._beforeGetCost += value;
                HookHandler.HookGetCost();
            }
            remove => HookHandler._beforeGetCost -= value;
        }

        public static event Delegates.GetNotchCost_BeforeArgs GetNotchCost
        {
            add
            {
                HookHandler._beforeGetNotchCost += value;
                HookHandler.HookGetNotchCost();
            }
            remove => HookHandler._beforeGetNotchCost -= value;
        }

        public static event Delegates.GetCharmsRequired_BeforeArgs GetCharmsRequired
        {
            add
            {
                HookHandler._beforeGetCharmsRequired += value;
                HookHandler.HookGetCharmsRequired();
            }
            remove => HookHandler._beforeGetCharmsRequired -= value;
        }

        public static event Delegates.GetRelicNumber_BeforeArgs GetRelicNumber
        {
            add
            {
                HookHandler._beforeGetRelicNumber += value;
                HookHandler.HookGetRelicNumber();
            }
            remove => HookHandler._beforeGetRelicNumber -= value;
        }

        public static event Delegates.GetNameConvo_BeforeArgs GetNameConvo
        {
            add
            {
                HookHandler._beforeGetNameConvo += value;
                HookHandler.HookGetNameConvo();
            }
            remove => HookHandler._beforeGetNameConvo -= value;
        }

        public static event Delegates.GetDescConvo_BeforeArgs GetDescConvo
        {
            add
            {
                HookHandler._beforeGetDescConvo += value;
                HookHandler.HookGetDescConvo();
            }
            remove => HookHandler._beforeGetDescConvo -= value;
        }

        public static event Delegates.GetPlayerDataBoolName_BeforeArgs GetPlayerDataBoolName
        {
            add
            {
                HookHandler._beforeGetPlayerDataBoolName += value;
                HookHandler.HookGetPlayerDataBoolName();
            }
            remove => HookHandler._beforeGetPlayerDataBoolName -= value;
        }

        public static event Delegates.GetRequiredPlayerDataBoolName_BeforeArgs GetRequiredPlayerDataBoolName
        {
            add
            {
                HookHandler._beforeGetRequiredPlayerDataBoolName += value;
                HookHandler.HookGetRequiredPlayerDataBoolName();
            }
            remove => HookHandler._beforeGetRequiredPlayerDataBoolName -= value;
        }

        public static event Delegates.GetRemovalPlayerDataBoolName_BeforeArgs GetRemovalPlayerDataBoolName
        {
            add
            {
                HookHandler._beforeGetRemovalPlayerDataBoolName += value;
                HookHandler.HookGetRemovalPlayerDataBoolName();
            }
            remove => HookHandler._beforeGetRemovalPlayerDataBoolName -= value;
        }

        public static event Delegates.GetItemNumber_BeforeArgs GetItemNumber
        {
            add
            {
                HookHandler._beforeGetItemNumber += value;
                HookHandler.HookGetItemNumber();
            }
            remove => HookHandler._beforeGetItemNumber -= value;
        }

        public static event Delegates.GetSpecialType_BeforeArgs GetSpecialType
        {
            add
            {
                HookHandler._beforeGetSpecialType += value;
                HookHandler.HookGetSpecialType();
            }
            remove => HookHandler._beforeGetSpecialType -= value;
        }

        public static event Delegates.CanBuy_BeforeArgs CanBuy
        {
            add
            {
                HookHandler._beforeCanBuy += value;
                HookHandler.HookCanBuy();
            }
            remove => HookHandler._beforeCanBuy -= value;
        }

        public static event Delegates.SetCanBuy_BeforeArgs SetCanBuy
        {
            add
            {
                HookHandler._beforeSetCanBuy += value;
                HookHandler.HookSetCanBuy();
            }
            remove => HookHandler._beforeSetCanBuy -= value;
        }

        public static event Delegates.SetDescConvo_BeforeArgs SetDescConvo
        {
            add
            {
                HookHandler._beforeSetDescConvo += value;
                HookHandler.HookSetDescConvo();
            }
            remove => HookHandler._beforeSetDescConvo -= value;
        }

        public static event Delegates.SetCost_BeforeArgs SetCost
        {
            add
            {
                HookHandler._beforeSetCost += value;
                HookHandler.HookSetCost();
            }
            remove => HookHandler._beforeSetCost -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.Awake_NormalArgs Awake
        {
            add
            {
                HookHandler._afterAwake += value;
                HookHandler.HookAwake();
            }
            remove => HookHandler._afterAwake -= value;
        }

        public static event Delegates.OnEnable_NormalArgs OnEnable
        {
            add
            {
                HookHandler._afterOnEnable += value;
                HookHandler.HookOnEnable();
            }
            remove => HookHandler._afterOnEnable -= value;
        }

        public static event Delegates.Update_NormalArgs Update
        {
            add
            {
                HookHandler._afterUpdate += value;
                HookHandler.HookUpdate();
            }
            remove => HookHandler._afterUpdate -= value;
        }

        public static event Delegates.GetCost_NormalArgs GetCost
        {
            add
            {
                HookHandler._afterGetCost += value;
                HookHandler.HookGetCost();
            }
            remove => HookHandler._afterGetCost -= value;
        }

        public static event Delegates.GetNotchCost_NormalArgs GetNotchCost
        {
            add
            {
                HookHandler._afterGetNotchCost += value;
                HookHandler.HookGetNotchCost();
            }
            remove => HookHandler._afterGetNotchCost -= value;
        }

        public static event Delegates.GetCharmsRequired_NormalArgs GetCharmsRequired
        {
            add
            {
                HookHandler._afterGetCharmsRequired += value;
                HookHandler.HookGetCharmsRequired();
            }
            remove => HookHandler._afterGetCharmsRequired -= value;
        }

        public static event Delegates.GetRelicNumber_NormalArgs GetRelicNumber
        {
            add
            {
                HookHandler._afterGetRelicNumber += value;
                HookHandler.HookGetRelicNumber();
            }
            remove => HookHandler._afterGetRelicNumber -= value;
        }

        public static event Delegates.GetNameConvo_NormalArgs GetNameConvo
        {
            add
            {
                HookHandler._afterGetNameConvo += value;
                HookHandler.HookGetNameConvo();
            }
            remove => HookHandler._afterGetNameConvo -= value;
        }

        public static event Delegates.GetDescConvo_NormalArgs GetDescConvo
        {
            add
            {
                HookHandler._afterGetDescConvo += value;
                HookHandler.HookGetDescConvo();
            }
            remove => HookHandler._afterGetDescConvo -= value;
        }

        public static event Delegates.GetPlayerDataBoolName_NormalArgs GetPlayerDataBoolName
        {
            add
            {
                HookHandler._afterGetPlayerDataBoolName += value;
                HookHandler.HookGetPlayerDataBoolName();
            }
            remove => HookHandler._afterGetPlayerDataBoolName -= value;
        }

        public static event Delegates.GetRequiredPlayerDataBoolName_NormalArgs GetRequiredPlayerDataBoolName
        {
            add
            {
                HookHandler._afterGetRequiredPlayerDataBoolName += value;
                HookHandler.HookGetRequiredPlayerDataBoolName();
            }
            remove => HookHandler._afterGetRequiredPlayerDataBoolName -= value;
        }

        public static event Delegates.GetRemovalPlayerDataBoolName_NormalArgs GetRemovalPlayerDataBoolName
        {
            add
            {
                HookHandler._afterGetRemovalPlayerDataBoolName += value;
                HookHandler.HookGetRemovalPlayerDataBoolName();
            }
            remove => HookHandler._afterGetRemovalPlayerDataBoolName -= value;
        }

        public static event Delegates.GetItemNumber_NormalArgs GetItemNumber
        {
            add
            {
                HookHandler._afterGetItemNumber += value;
                HookHandler.HookGetItemNumber();
            }
            remove => HookHandler._afterGetItemNumber -= value;
        }

        public static event Delegates.GetSpecialType_NormalArgs GetSpecialType
        {
            add
            {
                HookHandler._afterGetSpecialType += value;
                HookHandler.HookGetSpecialType();
            }
            remove => HookHandler._afterGetSpecialType -= value;
        }

        public static event Delegates.CanBuy_NormalArgs CanBuy
        {
            add
            {
                HookHandler._afterCanBuy += value;
                HookHandler.HookCanBuy();
            }
            remove => HookHandler._afterCanBuy -= value;
        }

        public static event Delegates.SetCanBuy_NormalArgs SetCanBuy
        {
            add
            {
                HookHandler._afterSetCanBuy += value;
                HookHandler.HookSetCanBuy();
            }
            remove => HookHandler._afterSetCanBuy -= value;
        }

        public static event Delegates.SetDescConvo_NormalArgs SetDescConvo
        {
            add
            {
                HookHandler._afterSetDescConvo += value;
                HookHandler.HookSetDescConvo();
            }
            remove => HookHandler._afterSetDescConvo -= value;
        }

        public static event Delegates.SetCost_NormalArgs SetCost
        {
            add
            {
                HookHandler._afterSetCost += value;
                HookHandler.HookSetCost();
            }
            remove => HookHandler._afterSetCost -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.ShopItemStats.hook_Awake Awake
        {
            add => On.ShopItemStats.Awake += value;
            remove => On.ShopItemStats.Awake -= value;
        }

        public static event On.ShopItemStats.hook_OnEnable OnEnable
        {
            add => On.ShopItemStats.OnEnable += value;
            remove => On.ShopItemStats.OnEnable -= value;
        }

        public static event On.ShopItemStats.hook_Update Update
        {
            add => On.ShopItemStats.Update += value;
            remove => On.ShopItemStats.Update -= value;
        }

        public static event On.ShopItemStats.hook_GetCost GetCost
        {
            add => On.ShopItemStats.GetCost += value;
            remove => On.ShopItemStats.GetCost -= value;
        }

        public static event On.ShopItemStats.hook_GetNotchCost GetNotchCost
        {
            add => On.ShopItemStats.GetNotchCost += value;
            remove => On.ShopItemStats.GetNotchCost -= value;
        }

        public static event On.ShopItemStats.hook_GetCharmsRequired GetCharmsRequired
        {
            add => On.ShopItemStats.GetCharmsRequired += value;
            remove => On.ShopItemStats.GetCharmsRequired -= value;
        }

        public static event On.ShopItemStats.hook_GetRelicNumber GetRelicNumber
        {
            add => On.ShopItemStats.GetRelicNumber += value;
            remove => On.ShopItemStats.GetRelicNumber -= value;
        }

        public static event On.ShopItemStats.hook_GetNameConvo GetNameConvo
        {
            add => On.ShopItemStats.GetNameConvo += value;
            remove => On.ShopItemStats.GetNameConvo -= value;
        }

        public static event On.ShopItemStats.hook_GetDescConvo GetDescConvo
        {
            add => On.ShopItemStats.GetDescConvo += value;
            remove => On.ShopItemStats.GetDescConvo -= value;
        }

        public static event On.ShopItemStats.hook_GetPlayerDataBoolName GetPlayerDataBoolName
        {
            add => On.ShopItemStats.GetPlayerDataBoolName += value;
            remove => On.ShopItemStats.GetPlayerDataBoolName -= value;
        }

        public static event On.ShopItemStats.hook_GetRequiredPlayerDataBoolName GetRequiredPlayerDataBoolName
        {
            add => On.ShopItemStats.GetRequiredPlayerDataBoolName += value;
            remove => On.ShopItemStats.GetRequiredPlayerDataBoolName -= value;
        }

        public static event On.ShopItemStats.hook_GetRemovalPlayerDataBoolName GetRemovalPlayerDataBoolName
        {
            add => On.ShopItemStats.GetRemovalPlayerDataBoolName += value;
            remove => On.ShopItemStats.GetRemovalPlayerDataBoolName -= value;
        }

        public static event On.ShopItemStats.hook_GetItemNumber GetItemNumber
        {
            add => On.ShopItemStats.GetItemNumber += value;
            remove => On.ShopItemStats.GetItemNumber -= value;
        }

        public static event On.ShopItemStats.hook_GetSpecialType GetSpecialType
        {
            add => On.ShopItemStats.GetSpecialType += value;
            remove => On.ShopItemStats.GetSpecialType -= value;
        }

        public static event On.ShopItemStats.hook_CanBuy CanBuy
        {
            add => On.ShopItemStats.CanBuy += value;
            remove => On.ShopItemStats.CanBuy -= value;
        }

        public static event On.ShopItemStats.hook_SetCanBuy SetCanBuy
        {
            add => On.ShopItemStats.SetCanBuy += value;
            remove => On.ShopItemStats.SetCanBuy -= value;
        }

        public static event On.ShopItemStats.hook_SetDescConvo SetDescConvo
        {
            add => On.ShopItemStats.SetDescConvo += value;
            remove => On.ShopItemStats.SetDescConvo -= value;
        }

        public static event On.ShopItemStats.hook_SetCost SetCost
        {
            add => On.ShopItemStats.SetCost += value;
            remove => On.ShopItemStats.SetCost -= value;
        }
    }
}