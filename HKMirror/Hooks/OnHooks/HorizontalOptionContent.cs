using Modding.Menu;
using Modding.Menu.Config;
using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;
using UnityEngine.UI;

namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for HorizontalOptionContent class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnHorizontalOptionContent
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookAddHorizontalOption_ContentArea_string_HorizontalOptionConfig()
        {
            if (!HookedList.Contains("AddHorizontalOption_ContentArea_string_HorizontalOptionConfig"))
            {
                HookedList.Add("AddHorizontalOption_ContentArea_string_HorizontalOptionConfig");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(HorizontalOptionContent),
                        "AddHorizontalOption_ContentArea_string_HorizontalOptionConfig", false),
                    AddHorizontalOption_ContentArea_string_HorizontalOptionConfig);
            }
        }

        internal static event Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_BeforeArgs
            _beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig;

        internal static event Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_AfterArgs
            _afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig;

        private static ContentArea AddHorizontalOption_ContentArea_string_HorizontalOptionConfig(
            Func<ContentArea, string, HorizontalOptionConfig, ContentArea> orig, ContentArea content, string name,
            HorizontalOptionConfig config)
        {
            Delegates.Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig @params = new()
            {
                content = content, name = name, config = config
            };
            if (_beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig != null)
                foreach (Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_BeforeArgs toInvoke in
                         _beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig.GetInvocationList())
                    try
                    {
                        _beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            content = @params.content;
            name = @params.name;
            config = @params.config;
            var retVal = orig(content, name, config);
            if (_afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig != null)
                foreach (Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_AfterArgs toInvoke in
                         _afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig.GetInvocationList())
                    try
                    {
                        retVal = _afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig.Invoke(@params,
                            retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }

        internal static void HookAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal()
        {
            if (!HookedList.Contains(
                    "AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal"))
            {
                HookedList.Add("AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(HorizontalOptionContent),
                        "AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal", false),
                    AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal);
            }
        }

        internal static event
            Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_BeforeArgs
            _beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal;

        internal static event
            Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_AfterArgs
            _afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal;

        private static ContentArea AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal(
            Func<ContentArea, string, HorizontalOptionConfig, MenuOptionHorizontal, ContentArea> orig,
            ContentArea content, string name, HorizontalOptionConfig config, MenuOptionHorizontal horizontalOption)
        {
            Delegates.Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
                @params = new()
                {
                    content = content, name = name, config = config, horizontalOption = horizontalOption
                };
            if (_beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal != null)
                foreach
                    (Delegates.
                         AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_BeforeArgs
                         toInvoke in
                     _beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
                         .GetInvocationList())
                    try
                    {
                        _beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
                            ?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            content = @params.content;
            name = @params.name;
            config = @params.config;
            horizontalOption = @params.horizontalOption;
            var retVal = orig(content, name, config, horizontalOption);
            if (_afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal != null)
                foreach
                    (Delegates.
                         AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_AfterArgs
                         toInvoke in
                     _afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
                         .GetInvocationList())
                    try
                    {
                        retVal =
                            _afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
                                .Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate ContentArea AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_AfterArgs(
            Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig args, ContentArea ret);

        public delegate void AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_BeforeArgs(
            Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig args);

        public delegate ContentArea
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_AfterArgs(
                Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal args,
                ContentArea ret);

        public delegate void
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_BeforeArgs(
                Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal args);

        public delegate ContentArea
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_WithArgs(
                Func<ContentArea, string, HorizontalOptionConfig, MenuOptionHorizontal, ContentArea> orig,
                ContentArea content, string name, HorizontalOptionConfig config, MenuOptionHorizontal horizontalOption);

        public delegate ContentArea AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_WithArgs(
            Func<ContentArea, string, HorizontalOptionConfig, ContentArea> orig, ContentArea content, string name,
            HorizontalOptionConfig config);

        public sealed class Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig
        {
            public HorizontalOptionConfig config;
            public ContentArea content;
            public string name;
        }

        public sealed class Params_AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
        {
            public HorizontalOptionConfig config;
            public ContentArea content;
            public MenuOptionHorizontal horizontalOption;
            public string name;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_BeforeArgs
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig
            {
                add
                {
                    HookHandler._beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig += value;
                    HookHandler.HookAddHorizontalOption_ContentArea_string_HorizontalOptionConfig();
                }
                remove => HookHandler._beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig -= value;
            }

        public static event
            Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_BeforeArgs
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
            {
                add
                {
                    HookHandler
                            ._beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal +=
                        value;
                    HookHandler
                        .HookAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal();
                }
                remove => HookHandler
                    ._beforeAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal -= value;
            }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_AfterArgs
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig
            {
                add
                {
                    HookHandler._afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig += value;
                    HookHandler.HookAddHorizontalOption_ContentArea_string_HorizontalOptionConfig();
                }
                remove => HookHandler._afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig -= value;
            }

        public static event
            Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_AfterArgs
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
            {
                add
                {
                    HookHandler
                            ._afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal +=
                        value;
                    HookHandler
                        .HookAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal();
                }
                remove => HookHandler
                    ._afterAddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal -= value;
            }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_WithArgs
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig
            {
                add => HookEndpointManager
                    .Add<Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_WithArgs>(
                        ReflectionHelper.GetMethodInfo(typeof(HorizontalOptionContent), "AddHorizontalOption", false),
                        value);
                remove =>
                    HookEndpointManager
                        .Remove<Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_WithArgs>(
                            ReflectionHelper.GetMethodInfo(typeof(HorizontalOptionContent), "AddHorizontalOption",
                                false), value);
            }

        public static event
            Delegates.AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_WithArgs
            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal
            {
                add => HookEndpointManager
                    .Add<Delegates.
                        AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_WithArgs>(
                        ReflectionHelper.GetMethodInfo(typeof(HorizontalOptionContent), "AddHorizontalOption", false),
                        value);
                remove =>
                    HookEndpointManager
                        .Remove<
                            Delegates.
                            AddHorizontalOption_ContentArea_string_HorizontalOptionConfig_MenuOptionHorizontal_WithArgs>(
                            ReflectionHelper.GetMethodInfo(typeof(HorizontalOptionContent), "AddHorizontalOption",
                                false), value);
            }
    }
}