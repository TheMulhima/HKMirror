namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for GameVersionData class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnGameVersionData
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookGetGameVersionString()
        {
            if (!HookedList.Contains("GetGameVersionString"))
            {
                HookedList.Add("GetGameVersionString");
                On.GameVersionData.GetGameVersionString += GetGameVersionString;
            }
        }

        internal static event Delegates.GetGameVersionString_BeforeArgs _beforeGetGameVersionString;
        internal static event Delegates.GetGameVersionString_NormalArgs _afterGetGameVersionString;

        private static string GetGameVersionString(On.GameVersionData.orig_GetGameVersionString orig,
            GameVersionData self)
        {
            Delegates.Params_GetGameVersionString @params = new()
            {
                self = self
            };
            _beforeGetGameVersionString?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterGetGameVersionString != null) retVal = _afterGetGameVersionString.Invoke(@params);
            return retVal;
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void GetGameVersionString_BeforeArgs(Params_GetGameVersionString args);

        public delegate string GetGameVersionString_NormalArgs(Params_GetGameVersionString args);

        public sealed class Params_GetGameVersionString
        {
            public GameVersionData self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.GetGameVersionString_BeforeArgs GetGameVersionString
        {
            add
            {
                HookHandler._beforeGetGameVersionString += value;
                HookHandler.HookGetGameVersionString();
            }
            remove => HookHandler._beforeGetGameVersionString -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.GetGameVersionString_NormalArgs GetGameVersionString
        {
            add
            {
                HookHandler._afterGetGameVersionString += value;
                HookHandler.HookGetGameVersionString();
            }
            remove => HookHandler._afterGetGameVersionString -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.GameVersionData.hook_GetGameVersionString GetGameVersionString
        {
            add => On.GameVersionData.GetGameVersionString += value;
            remove => On.GameVersionData.GetGameVersionString -= value;
        }
    }
}