namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for ActionQueue class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnActionQueue
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookNext()
        {
            if (!HookedList.Contains("Next"))
            {
                HookedList.Add("Next");
                On.ActionQueue.Next += Next;
            }
        }

        internal static event Delegates.Next_BeforeArgs _beforeNext;
        internal static event Delegates.Next_NormalArgs _afterNext;

        private static void Next(On.ActionQueue.orig_Next orig, ActionQueue self)
        {
            Delegates.Params_Next @params = new()
            {
                self = self
            };
            _beforeNext?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterNext != null) _afterNext.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void Next_BeforeArgs(Params_Next args);

        public delegate void Next_NormalArgs(Params_Next args);

        public sealed class Params_Next
        {
            public ActionQueue self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.Next_BeforeArgs Next
        {
            add
            {
                HookHandler._beforeNext += value;
                HookHandler.HookNext();
            }
            remove => HookHandler._beforeNext -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.Next_NormalArgs Next
        {
            add
            {
                HookHandler._afterNext += value;
                HookHandler.HookNext();
            }
            remove => HookHandler._afterNext -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.ActionQueue.hook_Next Next
        {
            add => On.ActionQueue.Next += value;
            remove => On.ActionQueue.Next -= value;
        }
    }
}