namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for SaveSlotOverrides class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnSaveSlotOverrides
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookOnValidate()
        {
            if (!HookedList.Contains("OnValidate"))
            {
                HookedList.Add("OnValidate");
                On.SaveSlotOverrides.OnValidate += OnValidate;
            }
        }

        internal static event Delegates.OnValidate_BeforeArgs _beforeOnValidate;
        internal static event Delegates.OnValidate_NormalArgs _afterOnValidate;

        private static void OnValidate(On.SaveSlotOverrides.orig_OnValidate orig, SaveSlotOverrides self)
        {
            Delegates.Params_OnValidate @params = new()
            {
                self = self
            };
            _beforeOnValidate?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterOnValidate != null) _afterOnValidate.Invoke(@params);
        }

        internal static void HookAwake()
        {
            if (!HookedList.Contains("Awake"))
            {
                HookedList.Add("Awake");
                On.SaveSlotOverrides.Awake += Awake;
            }
        }

        internal static event Delegates.Awake_BeforeArgs _beforeAwake;
        internal static event Delegates.Awake_NormalArgs _afterAwake;

        private static void Awake(On.SaveSlotOverrides.orig_Awake orig, SaveSlotOverrides self)
        {
            Delegates.Params_Awake @params = new()
            {
                self = self
            };
            _beforeAwake?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterAwake != null) _afterAwake.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void Awake_BeforeArgs(Params_Awake args);

        public delegate void Awake_NormalArgs(Params_Awake args);

        public delegate void OnValidate_BeforeArgs(Params_OnValidate args);

        public delegate void OnValidate_NormalArgs(Params_OnValidate args);

        public sealed class Params_OnValidate
        {
            public SaveSlotOverrides self;
        }

        public sealed class Params_Awake
        {
            public SaveSlotOverrides self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.OnValidate_BeforeArgs OnValidate
        {
            add
            {
                HookHandler._beforeOnValidate += value;
                HookHandler.HookOnValidate();
            }
            remove => HookHandler._beforeOnValidate -= value;
        }

        public static event Delegates.Awake_BeforeArgs Awake
        {
            add
            {
                HookHandler._beforeAwake += value;
                HookHandler.HookAwake();
            }
            remove => HookHandler._beforeAwake -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.OnValidate_NormalArgs OnValidate
        {
            add
            {
                HookHandler._afterOnValidate += value;
                HookHandler.HookOnValidate();
            }
            remove => HookHandler._afterOnValidate -= value;
        }

        public static event Delegates.Awake_NormalArgs Awake
        {
            add
            {
                HookHandler._afterAwake += value;
                HookHandler.HookAwake();
            }
            remove => HookHandler._afterAwake -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.SaveSlotOverrides.hook_OnValidate OnValidate
        {
            add => On.SaveSlotOverrides.OnValidate += value;
            remove => On.SaveSlotOverrides.OnValidate -= value;
        }

        public static event On.SaveSlotOverrides.hook_Awake Awake
        {
            add => On.SaveSlotOverrides.Awake += value;
            remove => On.SaveSlotOverrides.Awake -= value;
        }
    }
}