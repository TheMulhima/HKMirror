using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;
namespace HKMirror.Hooks.OnHooks;
/// <summary>
/// Contains different types of On Hooks for MenuPreventDeselect class.<br />
/// Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnMenuPreventDeselect
{
internal static class HookHandler
{
private static List<string> HookedList = new List<string>();
internal static void HookStart()
{
if (!HookedList.Contains("Start"))
{
HookedList.Add("Start");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "Start", true), Start);

}
}
internal static event Delegates.Start_BeforeArgs _beforeStart;
internal static event Delegates.Start_AfterArgs _afterStart;
private static void Start(Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self)
{
Delegates.Params_Start @params = new() 
{
self = self
};
if (_beforeStart != null)
{
foreach (Delegates.Start_BeforeArgs toInvoke in _beforeStart.GetInvocationList())
{
try
{
_beforeStart?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterStart != null)
{
foreach (Delegates.Start_AfterArgs toInvoke in _afterStart.GetInvocationList())
{
try
{
_afterStart.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnSelect()
{
if (!HookedList.Contains("OnSelect"))
{
HookedList.Add("OnSelect");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnSelect", true), OnSelect);

}
}
internal static event Delegates.OnSelect_BeforeArgs _beforeOnSelect;
internal static event Delegates.OnSelect_AfterArgs _afterOnSelect;
private static void OnSelect(Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData)
{
Delegates.Params_OnSelect @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeOnSelect != null)
{
foreach (Delegates.OnSelect_BeforeArgs toInvoke in _beforeOnSelect.GetInvocationList())
{
try
{
_beforeOnSelect?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterOnSelect != null)
{
foreach (Delegates.OnSelect_AfterArgs toInvoke in _afterOnSelect.GetInvocationList())
{
try
{
_afterOnSelect.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnDeselect()
{
if (!HookedList.Contains("OnDeselect"))
{
HookedList.Add("OnDeselect");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnDeselect", true), OnDeselect);

}
}
internal static event Delegates.OnDeselect_BeforeArgs _beforeOnDeselect;
internal static event Delegates.OnDeselect_AfterArgs _afterOnDeselect;
private static void OnDeselect(Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData)
{
Delegates.Params_OnDeselect @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeOnDeselect != null)
{
foreach (Delegates.OnDeselect_BeforeArgs toInvoke in _beforeOnDeselect.GetInvocationList())
{
try
{
_beforeOnDeselect?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterOnDeselect != null)
{
foreach (Delegates.OnDeselect_AfterArgs toInvoke in _afterOnDeselect.GetInvocationList())
{
try
{
_afterOnDeselect.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookOnCancel()
{
if (!HookedList.Contains("OnCancel"))
{
HookedList.Add("OnCancel");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnCancel", true), OnCancel);

}
}
internal static event Delegates.OnCancel_BeforeArgs _beforeOnCancel;
internal static event Delegates.OnCancel_AfterArgs _afterOnCancel;
private static void OnCancel(Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData)
{
Delegates.Params_OnCancel @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeOnCancel != null)
{
foreach (Delegates.OnCancel_BeforeArgs toInvoke in _beforeOnCancel.GetInvocationList())
{
try
{
_beforeOnCancel?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterOnCancel != null)
{
foreach (Delegates.OnCancel_AfterArgs toInvoke in _afterOnCancel.GetInvocationList())
{
try
{
_afterOnCancel.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookValidateDeselect()
{
if (!HookedList.Contains("ValidateDeselect"))
{
HookedList.Add("ValidateDeselect");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "ValidateDeselect", true), ValidateDeselect);

}
}
internal static event Delegates.ValidateDeselect_BeforeArgs _beforeValidateDeselect;
private static System.Collections.IEnumerator ValidateDeselect(Func<UnityEngine.UI.MenuPreventDeselect, System.Collections.IEnumerator> orig, UnityEngine.UI.MenuPreventDeselect self)
{
Delegates.Params_ValidateDeselect @params = new() 
{
self = self
};
if (_beforeValidateDeselect != null)
{
foreach (Delegates.ValidateDeselect_BeforeArgs toInvoke in _beforeValidateDeselect.GetInvocationList())
{
try
{
_beforeValidateDeselect?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
return orig(self);
}
internal static void HookHookUpAudioPlayer()
{
if (!HookedList.Contains("HookUpAudioPlayer"))
{
HookedList.Add("HookUpAudioPlayer");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "HookUpAudioPlayer", true), HookUpAudioPlayer);

}
}
internal static event Delegates.HookUpAudioPlayer_BeforeArgs _beforeHookUpAudioPlayer;
internal static event Delegates.HookUpAudioPlayer_AfterArgs _afterHookUpAudioPlayer;
private static void HookUpAudioPlayer(Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self)
{
Delegates.Params_HookUpAudioPlayer @params = new() 
{
self = self
};
if (_beforeHookUpAudioPlayer != null)
{
foreach (Delegates.HookUpAudioPlayer_BeforeArgs toInvoke in _beforeHookUpAudioPlayer.GetInvocationList())
{
try
{
_beforeHookUpAudioPlayer?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterHookUpAudioPlayer != null)
{
foreach (Delegates.HookUpAudioPlayer_AfterArgs toInvoke in _afterHookUpAudioPlayer.GetInvocationList())
{
try
{
_afterHookUpAudioPlayer.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookForceDeselect()
{
if (!HookedList.Contains("ForceDeselect"))
{
HookedList.Add("ForceDeselect");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "ForceDeselect", true), ForceDeselect);

}
}
internal static event Delegates.ForceDeselect_BeforeArgs _beforeForceDeselect;
internal static event Delegates.ForceDeselect_AfterArgs _afterForceDeselect;
private static void ForceDeselect(Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self)
{
Delegates.Params_ForceDeselect @params = new() 
{
self = self
};
if (_beforeForceDeselect != null)
{
foreach (Delegates.ForceDeselect_BeforeArgs toInvoke in _beforeForceDeselect.GetInvocationList())
{
try
{
_beforeForceDeselect?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterForceDeselect != null)
{
foreach (Delegates.ForceDeselect_AfterArgs toInvoke in _afterForceDeselect.GetInvocationList())
{
try
{
_afterForceDeselect.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void HookSimulateSubmit()
{
if (!HookedList.Contains("SimulateSubmit"))
{
HookedList.Add("SimulateSubmit");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "SimulateSubmit", true), SimulateSubmit);

}
}
internal static event Delegates.SimulateSubmit_BeforeArgs _beforeSimulateSubmit;
internal static event Delegates.SimulateSubmit_AfterArgs _afterSimulateSubmit;
private static void SimulateSubmit(Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self)
{
Delegates.Params_SimulateSubmit @params = new() 
{
self = self
};
if (_beforeSimulateSubmit != null)
{
foreach (Delegates.SimulateSubmit_BeforeArgs toInvoke in _beforeSimulateSubmit.GetInvocationList())
{
try
{
_beforeSimulateSubmit?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
orig(self);
if (_afterSimulateSubmit != null)
{
foreach (Delegates.SimulateSubmit_AfterArgs toInvoke in _afterSimulateSubmit.GetInvocationList())
{
try
{
_afterSimulateSubmit.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookget_customCancelAction()
{
if (!HookedList.Contains("get_customCancelAction"))
{
HookedList.Add("get_customCancelAction");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "get_customCancelAction", true), get_customCancelAction);

}
}
internal static event Delegates.get_customCancelAction_BeforeArgs _beforeget_customCancelAction;
internal static event Delegates.get_customCancelAction_AfterArgs _afterget_customCancelAction;
private static System.Action<UnityEngine.UI.MenuPreventDeselect> get_customCancelAction(Func<UnityEngine.UI.MenuPreventDeselect, System.Action<UnityEngine.UI.MenuPreventDeselect>> orig, UnityEngine.UI.MenuPreventDeselect self)
{
Delegates.Params_get_customCancelAction @params = new() 
{
self = self
};
if (_beforeget_customCancelAction != null)
{
foreach (Delegates.get_customCancelAction_BeforeArgs toInvoke in _beforeget_customCancelAction.GetInvocationList())
{
try
{
_beforeget_customCancelAction?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
var retVal = orig(self);
if (_afterget_customCancelAction != null)
{
foreach (Delegates.get_customCancelAction_AfterArgs toInvoke in _afterget_customCancelAction.GetInvocationList())
{
try
{
retVal = _afterget_customCancelAction.Invoke(@params, retVal);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
return retVal;
}
internal static void Hookset_customCancelAction()
{
if (!HookedList.Contains("set_customCancelAction"))
{
HookedList.Add("set_customCancelAction");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "set_customCancelAction", true), set_customCancelAction);

}
}
internal static event Delegates.set_customCancelAction_BeforeArgs _beforeset_customCancelAction;
internal static event Delegates.set_customCancelAction_AfterArgs _afterset_customCancelAction;
private static void set_customCancelAction(Action<UnityEngine.UI.MenuPreventDeselect,  System.Action<UnityEngine.UI.MenuPreventDeselect>> orig, UnityEngine.UI.MenuPreventDeselect self,  System.Action<UnityEngine.UI.MenuPreventDeselect> value)
{
Delegates.Params_set_customCancelAction @params = new() 
{
self = self
, value = value
};
if (_beforeset_customCancelAction != null)
{
foreach (Delegates.set_customCancelAction_BeforeArgs toInvoke in _beforeset_customCancelAction.GetInvocationList())
{
try
{
_beforeset_customCancelAction?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
value = @params.value;
orig(self, value);
if (_afterset_customCancelAction != null)
{
foreach (Delegates.set_customCancelAction_AfterArgs toInvoke in _afterset_customCancelAction.GetInvocationList())
{
try
{
_afterset_customCancelAction.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
internal static void Hookorig_OnCancel()
{
if (!HookedList.Contains("orig_OnCancel"))
{
HookedList.Add("orig_OnCancel");
new Hook(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "orig_OnCancel", true), orig_OnCancel);

}
}
internal static event Delegates.orig_OnCancel_BeforeArgs _beforeorig_OnCancel;
internal static event Delegates.orig_OnCancel_AfterArgs _afterorig_OnCancel;
private static void orig_OnCancel(Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData)
{
Delegates.Params_orig_OnCancel @params = new() 
{
self = self
, eventData = eventData
};
if (_beforeorig_OnCancel != null)
{
foreach (Delegates.orig_OnCancel_BeforeArgs toInvoke in _beforeorig_OnCancel.GetInvocationList())
{
try
{
_beforeorig_OnCancel?.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
self = @params.self;
eventData = @params.eventData;
orig(self, eventData);
if (_afterorig_OnCancel != null)
{
foreach (Delegates.orig_OnCancel_AfterArgs toInvoke in _afterorig_OnCancel.GetInvocationList())
{
try
{
_afterorig_OnCancel.Invoke(@params);
}
catch (Exception e) 
{ HKMirrorMod.DoLogError(e);
}
}
}
}
}

/// <summary>
/// Contains necessary information to create Hooks. Does not contain any hooks
/// </summary>
public static class Delegates
{
public sealed class Params_Start
{
public UnityEngine.UI.MenuPreventDeselect self;
}
public delegate void Start_BeforeArgs(Params_Start args);
public delegate void Start_AfterArgs(Params_Start args);
public delegate void Start_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self);
public sealed class Params_OnSelect
{
public UnityEngine.UI.MenuPreventDeselect self;
public UnityEngine.EventSystems.BaseEventData eventData;
}
public delegate void OnSelect_BeforeArgs(Params_OnSelect args);
public delegate void OnSelect_AfterArgs(Params_OnSelect args);
public delegate void OnSelect_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData);
public sealed class Params_OnDeselect
{
public UnityEngine.UI.MenuPreventDeselect self;
public UnityEngine.EventSystems.BaseEventData eventData;
}
public delegate void OnDeselect_BeforeArgs(Params_OnDeselect args);
public delegate void OnDeselect_AfterArgs(Params_OnDeselect args);
public delegate void OnDeselect_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData);
public sealed class Params_OnCancel
{
public UnityEngine.UI.MenuPreventDeselect self;
public UnityEngine.EventSystems.BaseEventData eventData;
}
public delegate void OnCancel_BeforeArgs(Params_OnCancel args);
public delegate void OnCancel_AfterArgs(Params_OnCancel args);
public delegate void OnCancel_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData);
public sealed class Params_ValidateDeselect
{
public UnityEngine.UI.MenuPreventDeselect self;
}
public delegate void ValidateDeselect_BeforeArgs(Params_ValidateDeselect args);
public delegate System.Collections.IEnumerator ValidateDeselect_AfterArgs(Params_ValidateDeselect args, System.Collections.IEnumerator ret);
public delegate System.Collections.IEnumerator ValidateDeselect_WithArgs (Func<UnityEngine.UI.MenuPreventDeselect, System.Collections.IEnumerator> orig, UnityEngine.UI.MenuPreventDeselect self);
public sealed class Params_HookUpAudioPlayer
{
public UnityEngine.UI.MenuPreventDeselect self;
}
public delegate void HookUpAudioPlayer_BeforeArgs(Params_HookUpAudioPlayer args);
public delegate void HookUpAudioPlayer_AfterArgs(Params_HookUpAudioPlayer args);
public delegate void HookUpAudioPlayer_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self);
public sealed class Params_ForceDeselect
{
public UnityEngine.UI.MenuPreventDeselect self;
}
public delegate void ForceDeselect_BeforeArgs(Params_ForceDeselect args);
public delegate void ForceDeselect_AfterArgs(Params_ForceDeselect args);
public delegate void ForceDeselect_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self);
public sealed class Params_SimulateSubmit
{
public UnityEngine.UI.MenuPreventDeselect self;
}
public delegate void SimulateSubmit_BeforeArgs(Params_SimulateSubmit args);
public delegate void SimulateSubmit_AfterArgs(Params_SimulateSubmit args);
public delegate void SimulateSubmit_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect> orig, UnityEngine.UI.MenuPreventDeselect self);
public sealed class Params_get_customCancelAction
{
public UnityEngine.UI.MenuPreventDeselect self;
}
public delegate void get_customCancelAction_BeforeArgs(Params_get_customCancelAction args);
public delegate System.Action<UnityEngine.UI.MenuPreventDeselect> get_customCancelAction_AfterArgs(Params_get_customCancelAction args, System.Action<UnityEngine.UI.MenuPreventDeselect> ret);
public delegate System.Action<UnityEngine.UI.MenuPreventDeselect> get_customCancelAction_WithArgs (Func<UnityEngine.UI.MenuPreventDeselect, System.Action<UnityEngine.UI.MenuPreventDeselect>> orig, UnityEngine.UI.MenuPreventDeselect self);
public sealed class Params_set_customCancelAction
{
public UnityEngine.UI.MenuPreventDeselect self;
public System.Action<UnityEngine.UI.MenuPreventDeselect> value;
}
public delegate void set_customCancelAction_BeforeArgs(Params_set_customCancelAction args);
public delegate void set_customCancelAction_AfterArgs(Params_set_customCancelAction args);
public delegate void set_customCancelAction_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect,  System.Action<UnityEngine.UI.MenuPreventDeselect>> orig, UnityEngine.UI.MenuPreventDeselect self,  System.Action<UnityEngine.UI.MenuPreventDeselect> value);
public sealed class Params_orig_OnCancel
{
public UnityEngine.UI.MenuPreventDeselect self;
public UnityEngine.EventSystems.BaseEventData eventData;
}
public delegate void orig_OnCancel_BeforeArgs(Params_orig_OnCancel args);
public delegate void orig_OnCancel_AfterArgs(Params_orig_OnCancel args);
public delegate void orig_OnCancel_WithArgs (Action<UnityEngine.UI.MenuPreventDeselect,  UnityEngine.EventSystems.BaseEventData> orig, UnityEngine.UI.MenuPreventDeselect self,  UnityEngine.EventSystems.BaseEventData eventData);
}

/// <summary>
/// Contains Hooks to that run code before orig(self) is called
/// </summary>
public static class BeforeOrig
{
public static event Delegates.Start_BeforeArgs Start
{
add
{

HookHandler._beforeStart += value;
HookHandler.HookStart();
}
remove => HookHandler._beforeStart -= value;
}
public static event Delegates.OnSelect_BeforeArgs OnSelect
{
add
{

HookHandler._beforeOnSelect += value;
HookHandler.HookOnSelect();
}
remove => HookHandler._beforeOnSelect -= value;
}
public static event Delegates.OnDeselect_BeforeArgs OnDeselect
{
add
{

HookHandler._beforeOnDeselect += value;
HookHandler.HookOnDeselect();
}
remove => HookHandler._beforeOnDeselect -= value;
}
public static event Delegates.OnCancel_BeforeArgs OnCancel
{
add
{

HookHandler._beforeOnCancel += value;
HookHandler.HookOnCancel();
}
remove => HookHandler._beforeOnCancel -= value;
}
public static event Delegates.ValidateDeselect_BeforeArgs ValidateDeselect
{
add
{

HookHandler._beforeValidateDeselect += value;
HookHandler.HookValidateDeselect();
}
remove => HookHandler._beforeValidateDeselect -= value;
}
public static event Delegates.HookUpAudioPlayer_BeforeArgs HookUpAudioPlayer
{
add
{

HookHandler._beforeHookUpAudioPlayer += value;
HookHandler.HookHookUpAudioPlayer();
}
remove => HookHandler._beforeHookUpAudioPlayer -= value;
}
public static event Delegates.ForceDeselect_BeforeArgs ForceDeselect
{
add
{

HookHandler._beforeForceDeselect += value;
HookHandler.HookForceDeselect();
}
remove => HookHandler._beforeForceDeselect -= value;
}
public static event Delegates.SimulateSubmit_BeforeArgs SimulateSubmit
{
add
{

HookHandler._beforeSimulateSubmit += value;
HookHandler.HookSimulateSubmit();
}
remove => HookHandler._beforeSimulateSubmit -= value;
}
public static event Delegates.get_customCancelAction_BeforeArgs get_customCancelAction
{
add
{

HookHandler._beforeget_customCancelAction += value;
HookHandler.Hookget_customCancelAction();
}
remove => HookHandler._beforeget_customCancelAction -= value;
}
public static event Delegates.set_customCancelAction_BeforeArgs set_customCancelAction
{
add
{

HookHandler._beforeset_customCancelAction += value;
HookHandler.Hookset_customCancelAction();
}
remove => HookHandler._beforeset_customCancelAction -= value;
}
public static event Delegates.orig_OnCancel_BeforeArgs orig_OnCancel
{
add
{

HookHandler._beforeorig_OnCancel += value;
HookHandler.Hookorig_OnCancel();
}
remove => HookHandler._beforeorig_OnCancel -= value;
}
}

/// <summary>
/// Contains Hooks to that run code after orig(self) is called
/// </summary>
public static class AfterOrig
{
public static event Delegates.Start_AfterArgs Start
{
add
{

HookHandler._afterStart += value;
HookHandler.HookStart();
}
remove => HookHandler._afterStart -= value;
}
public static event Delegates.OnSelect_AfterArgs OnSelect
{
add
{

HookHandler._afterOnSelect += value;
HookHandler.HookOnSelect();
}
remove => HookHandler._afterOnSelect -= value;
}
public static event Delegates.OnDeselect_AfterArgs OnDeselect
{
add
{

HookHandler._afterOnDeselect += value;
HookHandler.HookOnDeselect();
}
remove => HookHandler._afterOnDeselect -= value;
}
public static event Delegates.OnCancel_AfterArgs OnCancel
{
add
{

HookHandler._afterOnCancel += value;
HookHandler.HookOnCancel();
}
remove => HookHandler._afterOnCancel -= value;
}
public static event Delegates.HookUpAudioPlayer_AfterArgs HookUpAudioPlayer
{
add
{

HookHandler._afterHookUpAudioPlayer += value;
HookHandler.HookHookUpAudioPlayer();
}
remove => HookHandler._afterHookUpAudioPlayer -= value;
}
public static event Delegates.ForceDeselect_AfterArgs ForceDeselect
{
add
{

HookHandler._afterForceDeselect += value;
HookHandler.HookForceDeselect();
}
remove => HookHandler._afterForceDeselect -= value;
}
public static event Delegates.SimulateSubmit_AfterArgs SimulateSubmit
{
add
{

HookHandler._afterSimulateSubmit += value;
HookHandler.HookSimulateSubmit();
}
remove => HookHandler._afterSimulateSubmit -= value;
}
public static event Delegates.get_customCancelAction_AfterArgs get_customCancelAction
{
add
{

HookHandler._afterget_customCancelAction += value;
HookHandler.Hookget_customCancelAction();
}
remove => HookHandler._afterget_customCancelAction -= value;
}
public static event Delegates.set_customCancelAction_AfterArgs set_customCancelAction
{
add
{

HookHandler._afterset_customCancelAction += value;
HookHandler.Hookset_customCancelAction();
}
remove => HookHandler._afterset_customCancelAction -= value;
}
public static event Delegates.orig_OnCancel_AfterArgs orig_OnCancel
{
add
{

HookHandler._afterorig_OnCancel += value;
HookHandler.Hookorig_OnCancel();
}
remove => HookHandler._afterorig_OnCancel -= value;
}
}

/// <summary>
/// Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property getters/setters
/// </summary>
public static class WithOrig
{
public static event Delegates.Start_WithArgs Start
{
add => HookEndpointManager.Add<Delegates.Start_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "Start", true), value);
remove => HookEndpointManager.Remove<Delegates.Start_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "Start", true), value);
}
public static event Delegates.OnSelect_WithArgs OnSelect
{
add => HookEndpointManager.Add<Delegates.OnSelect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnSelect", true), value);
remove => HookEndpointManager.Remove<Delegates.OnSelect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnSelect", true), value);
}
public static event Delegates.OnDeselect_WithArgs OnDeselect
{
add => HookEndpointManager.Add<Delegates.OnDeselect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnDeselect", true), value);
remove => HookEndpointManager.Remove<Delegates.OnDeselect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnDeselect", true), value);
}
public static event Delegates.OnCancel_WithArgs OnCancel
{
add => HookEndpointManager.Add<Delegates.OnCancel_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnCancel", true), value);
remove => HookEndpointManager.Remove<Delegates.OnCancel_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "OnCancel", true), value);
}
public static event Delegates.ValidateDeselect_WithArgs ValidateDeselect
{
add => HookEndpointManager.Add<Delegates.ValidateDeselect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "ValidateDeselect", true), value);
remove => HookEndpointManager.Remove<Delegates.ValidateDeselect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "ValidateDeselect", true), value);
}
public static event Delegates.HookUpAudioPlayer_WithArgs HookUpAudioPlayer
{
add => HookEndpointManager.Add<Delegates.HookUpAudioPlayer_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "HookUpAudioPlayer", true), value);
remove => HookEndpointManager.Remove<Delegates.HookUpAudioPlayer_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "HookUpAudioPlayer", true), value);
}
public static event Delegates.ForceDeselect_WithArgs ForceDeselect
{
add => HookEndpointManager.Add<Delegates.ForceDeselect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "ForceDeselect", true), value);
remove => HookEndpointManager.Remove<Delegates.ForceDeselect_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "ForceDeselect", true), value);
}
public static event Delegates.SimulateSubmit_WithArgs SimulateSubmit
{
add => HookEndpointManager.Add<Delegates.SimulateSubmit_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "SimulateSubmit", true), value);
remove => HookEndpointManager.Remove<Delegates.SimulateSubmit_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "SimulateSubmit", true), value);
}
public static event Delegates.get_customCancelAction_WithArgs get_customCancelAction
{
add => HookEndpointManager.Add<Delegates.get_customCancelAction_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "get_customCancelAction", true), value);
remove => HookEndpointManager.Remove<Delegates.get_customCancelAction_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "get_customCancelAction", true), value);
}
public static event Delegates.set_customCancelAction_WithArgs set_customCancelAction
{
add => HookEndpointManager.Add<Delegates.set_customCancelAction_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "set_customCancelAction", true), value);
remove => HookEndpointManager.Remove<Delegates.set_customCancelAction_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "set_customCancelAction", true), value);
}
public static event Delegates.orig_OnCancel_WithArgs orig_OnCancel
{
add => HookEndpointManager.Add<Delegates.orig_OnCancel_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "orig_OnCancel", true), value);
remove => HookEndpointManager.Remove<Delegates.orig_OnCancel_WithArgs>(ReflectionHelper.GetMethodInfo(typeof(UnityEngine.UI.MenuPreventDeselect), "orig_OnCancel", true), value);
}
}

}
