using UnityEngine.EventSystems;

namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for PlayMakerUGuiPointerEventsProxy class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnPlayMakerUGuiPointerEventsProxy
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookOnPointerClick()
        {
            if (!HookedList.Contains("OnPointerClick"))
            {
                HookedList.Add("OnPointerClick");
                On.PlayMakerUGuiPointerEventsProxy.OnPointerClick += OnPointerClick;
            }
        }

        internal static event Delegates.OnPointerClick_BeforeArgs _beforeOnPointerClick;
        internal static event Delegates.OnPointerClick_NormalArgs _afterOnPointerClick;

        private static void OnPointerClick(On.PlayMakerUGuiPointerEventsProxy.orig_OnPointerClick orig,
            PlayMakerUGuiPointerEventsProxy self, PointerEventData data)
        {
            Delegates.Params_OnPointerClick @params = new()
            {
                self = self, data = data
            };
            _beforeOnPointerClick?.Invoke(@params);
            self = @params.self;
            data = @params.data;
            orig(self, data);
            if (_afterOnPointerClick != null) _afterOnPointerClick.Invoke(@params);
        }

        internal static void HookOnPointerDown()
        {
            if (!HookedList.Contains("OnPointerDown"))
            {
                HookedList.Add("OnPointerDown");
                On.PlayMakerUGuiPointerEventsProxy.OnPointerDown += OnPointerDown;
            }
        }

        internal static event Delegates.OnPointerDown_BeforeArgs _beforeOnPointerDown;
        internal static event Delegates.OnPointerDown_NormalArgs _afterOnPointerDown;

        private static void OnPointerDown(On.PlayMakerUGuiPointerEventsProxy.orig_OnPointerDown orig,
            PlayMakerUGuiPointerEventsProxy self, PointerEventData data)
        {
            Delegates.Params_OnPointerDown @params = new()
            {
                self = self, data = data
            };
            _beforeOnPointerDown?.Invoke(@params);
            self = @params.self;
            data = @params.data;
            orig(self, data);
            if (_afterOnPointerDown != null) _afterOnPointerDown.Invoke(@params);
        }

        internal static void HookOnPointerEnter()
        {
            if (!HookedList.Contains("OnPointerEnter"))
            {
                HookedList.Add("OnPointerEnter");
                On.PlayMakerUGuiPointerEventsProxy.OnPointerEnter += OnPointerEnter;
            }
        }

        internal static event Delegates.OnPointerEnter_BeforeArgs _beforeOnPointerEnter;
        internal static event Delegates.OnPointerEnter_NormalArgs _afterOnPointerEnter;

        private static void OnPointerEnter(On.PlayMakerUGuiPointerEventsProxy.orig_OnPointerEnter orig,
            PlayMakerUGuiPointerEventsProxy self, PointerEventData data)
        {
            Delegates.Params_OnPointerEnter @params = new()
            {
                self = self, data = data
            };
            _beforeOnPointerEnter?.Invoke(@params);
            self = @params.self;
            data = @params.data;
            orig(self, data);
            if (_afterOnPointerEnter != null) _afterOnPointerEnter.Invoke(@params);
        }

        internal static void HookOnPointerExit()
        {
            if (!HookedList.Contains("OnPointerExit"))
            {
                HookedList.Add("OnPointerExit");
                On.PlayMakerUGuiPointerEventsProxy.OnPointerExit += OnPointerExit;
            }
        }

        internal static event Delegates.OnPointerExit_BeforeArgs _beforeOnPointerExit;
        internal static event Delegates.OnPointerExit_NormalArgs _afterOnPointerExit;

        private static void OnPointerExit(On.PlayMakerUGuiPointerEventsProxy.orig_OnPointerExit orig,
            PlayMakerUGuiPointerEventsProxy self, PointerEventData data)
        {
            Delegates.Params_OnPointerExit @params = new()
            {
                self = self, data = data
            };
            _beforeOnPointerExit?.Invoke(@params);
            self = @params.self;
            data = @params.data;
            orig(self, data);
            if (_afterOnPointerExit != null) _afterOnPointerExit.Invoke(@params);
        }

        internal static void HookOnPointerUp()
        {
            if (!HookedList.Contains("OnPointerUp"))
            {
                HookedList.Add("OnPointerUp");
                On.PlayMakerUGuiPointerEventsProxy.OnPointerUp += OnPointerUp;
            }
        }

        internal static event Delegates.OnPointerUp_BeforeArgs _beforeOnPointerUp;
        internal static event Delegates.OnPointerUp_NormalArgs _afterOnPointerUp;

        private static void OnPointerUp(On.PlayMakerUGuiPointerEventsProxy.orig_OnPointerUp orig,
            PlayMakerUGuiPointerEventsProxy self, PointerEventData data)
        {
            Delegates.Params_OnPointerUp @params = new()
            {
                self = self, data = data
            };
            _beforeOnPointerUp?.Invoke(@params);
            self = @params.self;
            data = @params.data;
            orig(self, data);
            if (_afterOnPointerUp != null) _afterOnPointerUp.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void OnPointerClick_BeforeArgs(Params_OnPointerClick args);

        public delegate void OnPointerClick_NormalArgs(Params_OnPointerClick args);

        public delegate void OnPointerDown_BeforeArgs(Params_OnPointerDown args);

        public delegate void OnPointerDown_NormalArgs(Params_OnPointerDown args);

        public delegate void OnPointerEnter_BeforeArgs(Params_OnPointerEnter args);

        public delegate void OnPointerEnter_NormalArgs(Params_OnPointerEnter args);

        public delegate void OnPointerExit_BeforeArgs(Params_OnPointerExit args);

        public delegate void OnPointerExit_NormalArgs(Params_OnPointerExit args);

        public delegate void OnPointerUp_BeforeArgs(Params_OnPointerUp args);

        public delegate void OnPointerUp_NormalArgs(Params_OnPointerUp args);

        public sealed class Params_OnPointerClick
        {
            public PointerEventData data;
            public PlayMakerUGuiPointerEventsProxy self;
        }

        public sealed class Params_OnPointerDown
        {
            public PointerEventData data;
            public PlayMakerUGuiPointerEventsProxy self;
        }

        public sealed class Params_OnPointerEnter
        {
            public PointerEventData data;
            public PlayMakerUGuiPointerEventsProxy self;
        }

        public sealed class Params_OnPointerExit
        {
            public PointerEventData data;
            public PlayMakerUGuiPointerEventsProxy self;
        }

        public sealed class Params_OnPointerUp
        {
            public PointerEventData data;
            public PlayMakerUGuiPointerEventsProxy self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.OnPointerClick_BeforeArgs OnPointerClick
        {
            add
            {
                HookHandler._beforeOnPointerClick += value;
                HookHandler.HookOnPointerClick();
            }
            remove => HookHandler._beforeOnPointerClick -= value;
        }

        public static event Delegates.OnPointerDown_BeforeArgs OnPointerDown
        {
            add
            {
                HookHandler._beforeOnPointerDown += value;
                HookHandler.HookOnPointerDown();
            }
            remove => HookHandler._beforeOnPointerDown -= value;
        }

        public static event Delegates.OnPointerEnter_BeforeArgs OnPointerEnter
        {
            add
            {
                HookHandler._beforeOnPointerEnter += value;
                HookHandler.HookOnPointerEnter();
            }
            remove => HookHandler._beforeOnPointerEnter -= value;
        }

        public static event Delegates.OnPointerExit_BeforeArgs OnPointerExit
        {
            add
            {
                HookHandler._beforeOnPointerExit += value;
                HookHandler.HookOnPointerExit();
            }
            remove => HookHandler._beforeOnPointerExit -= value;
        }

        public static event Delegates.OnPointerUp_BeforeArgs OnPointerUp
        {
            add
            {
                HookHandler._beforeOnPointerUp += value;
                HookHandler.HookOnPointerUp();
            }
            remove => HookHandler._beforeOnPointerUp -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.OnPointerClick_NormalArgs OnPointerClick
        {
            add
            {
                HookHandler._afterOnPointerClick += value;
                HookHandler.HookOnPointerClick();
            }
            remove => HookHandler._afterOnPointerClick -= value;
        }

        public static event Delegates.OnPointerDown_NormalArgs OnPointerDown
        {
            add
            {
                HookHandler._afterOnPointerDown += value;
                HookHandler.HookOnPointerDown();
            }
            remove => HookHandler._afterOnPointerDown -= value;
        }

        public static event Delegates.OnPointerEnter_NormalArgs OnPointerEnter
        {
            add
            {
                HookHandler._afterOnPointerEnter += value;
                HookHandler.HookOnPointerEnter();
            }
            remove => HookHandler._afterOnPointerEnter -= value;
        }

        public static event Delegates.OnPointerExit_NormalArgs OnPointerExit
        {
            add
            {
                HookHandler._afterOnPointerExit += value;
                HookHandler.HookOnPointerExit();
            }
            remove => HookHandler._afterOnPointerExit -= value;
        }

        public static event Delegates.OnPointerUp_NormalArgs OnPointerUp
        {
            add
            {
                HookHandler._afterOnPointerUp += value;
                HookHandler.HookOnPointerUp();
            }
            remove => HookHandler._afterOnPointerUp -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.PlayMakerUGuiPointerEventsProxy.hook_OnPointerClick OnPointerClick
        {
            add => On.PlayMakerUGuiPointerEventsProxy.OnPointerClick += value;
            remove => On.PlayMakerUGuiPointerEventsProxy.OnPointerClick -= value;
        }

        public static event On.PlayMakerUGuiPointerEventsProxy.hook_OnPointerDown OnPointerDown
        {
            add => On.PlayMakerUGuiPointerEventsProxy.OnPointerDown += value;
            remove => On.PlayMakerUGuiPointerEventsProxy.OnPointerDown -= value;
        }

        public static event On.PlayMakerUGuiPointerEventsProxy.hook_OnPointerEnter OnPointerEnter
        {
            add => On.PlayMakerUGuiPointerEventsProxy.OnPointerEnter += value;
            remove => On.PlayMakerUGuiPointerEventsProxy.OnPointerEnter -= value;
        }

        public static event On.PlayMakerUGuiPointerEventsProxy.hook_OnPointerExit OnPointerExit
        {
            add => On.PlayMakerUGuiPointerEventsProxy.OnPointerExit += value;
            remove => On.PlayMakerUGuiPointerEventsProxy.OnPointerExit -= value;
        }

        public static event On.PlayMakerUGuiPointerEventsProxy.hook_OnPointerUp OnPointerUp
        {
            add => On.PlayMakerUGuiPointerEventsProxy.OnPointerUp += value;
            remove => On.PlayMakerUGuiPointerEventsProxy.OnPointerUp -= value;
        }
    }
}