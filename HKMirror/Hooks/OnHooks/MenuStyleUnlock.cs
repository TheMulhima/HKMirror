namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for MenuStyleUnlock class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnMenuStyleUnlock
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookStart()
        {
            if (!HookedList.Contains("Start"))
            {
                HookedList.Add("Start");
                On.MenuStyleUnlock.Start += Start;
            }
        }

        internal static event Delegates.Start_BeforeArgs _beforeStart;
        internal static event Delegates.Start_NormalArgs _afterStart;

        private static void Start(On.MenuStyleUnlock.orig_Start orig, MenuStyleUnlock self)
        {
            Delegates.Params_Start @params = new()
            {
                self = self
            };
            _beforeStart?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterStart != null) _afterStart.Invoke(@params);
        }

        internal static void HookUnlock()
        {
            if (!HookedList.Contains("Unlock"))
            {
                HookedList.Add("Unlock");
                On.MenuStyleUnlock.Unlock += Unlock;
            }
        }

        internal static event Delegates.Unlock_BeforeArgs _beforeUnlock;
        internal static event Delegates.Unlock_NormalArgs _afterUnlock;

        private static void Unlock(On.MenuStyleUnlock.orig_Unlock orig, string key)
        {
            Delegates.Params_Unlock @params = new()
            {
                key = key
            };
            _beforeUnlock?.Invoke(@params);
            key = @params.key;
            orig(key);
            if (_afterUnlock != null) _afterUnlock.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void Start_BeforeArgs(Params_Start args);

        public delegate void Start_NormalArgs(Params_Start args);

        public delegate void Unlock_BeforeArgs(Params_Unlock args);

        public delegate void Unlock_NormalArgs(Params_Unlock args);

        public sealed class Params_Start
        {
            public MenuStyleUnlock self;
        }

        public sealed class Params_Unlock
        {
            public string key;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.Start_BeforeArgs Start
        {
            add
            {
                HookHandler._beforeStart += value;
                HookHandler.HookStart();
            }
            remove => HookHandler._beforeStart -= value;
        }

        public static event Delegates.Unlock_BeforeArgs Unlock
        {
            add
            {
                HookHandler._beforeUnlock += value;
                HookHandler.HookUnlock();
            }
            remove => HookHandler._beforeUnlock -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.Start_NormalArgs Start
        {
            add
            {
                HookHandler._afterStart += value;
                HookHandler.HookStart();
            }
            remove => HookHandler._afterStart -= value;
        }

        public static event Delegates.Unlock_NormalArgs Unlock
        {
            add
            {
                HookHandler._afterUnlock += value;
                HookHandler.HookUnlock();
            }
            remove => HookHandler._afterUnlock -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.MenuStyleUnlock.hook_Start Start
        {
            add => On.MenuStyleUnlock.Start += value;
            remove => On.MenuStyleUnlock.Start -= value;
        }

        public static event On.MenuStyleUnlock.hook_Unlock Unlock
        {
            add => On.MenuStyleUnlock.Unlock += value;
            remove => On.MenuStyleUnlock.Unlock -= value;
        }
    }
}