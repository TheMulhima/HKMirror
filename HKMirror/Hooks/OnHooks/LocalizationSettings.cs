using Language;

namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for LocalizationSettings class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnLocalizationSettings
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookGetLanguageEnum()
        {
            if (!HookedList.Contains("GetLanguageEnum"))
            {
                HookedList.Add("GetLanguageEnum");
                On.LocalizationSettings.GetLanguageEnum += GetLanguageEnum;
            }
        }

        internal static event Delegates.GetLanguageEnum_BeforeArgs _beforeGetLanguageEnum;
        internal static event Delegates.GetLanguageEnum_NormalArgs _afterGetLanguageEnum;

        private static LanguageCode GetLanguageEnum(On.LocalizationSettings.orig_GetLanguageEnum orig, string langCode)
        {
            Delegates.Params_GetLanguageEnum @params = new()
            {
                langCode = langCode
            };
            _beforeGetLanguageEnum?.Invoke(@params);
            langCode = @params.langCode;
            var retVal = orig(langCode);
            if (_afterGetLanguageEnum != null) retVal = _afterGetLanguageEnum.Invoke(@params);
            return retVal;
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void GetLanguageEnum_BeforeArgs(Params_GetLanguageEnum args);

        public delegate LanguageCode GetLanguageEnum_NormalArgs(Params_GetLanguageEnum args);

        public sealed class Params_GetLanguageEnum
        {
            public string langCode;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.GetLanguageEnum_BeforeArgs GetLanguageEnum
        {
            add
            {
                HookHandler._beforeGetLanguageEnum += value;
                HookHandler.HookGetLanguageEnum();
            }
            remove => HookHandler._beforeGetLanguageEnum -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.GetLanguageEnum_NormalArgs GetLanguageEnum
        {
            add
            {
                HookHandler._afterGetLanguageEnum += value;
                HookHandler.HookGetLanguageEnum();
            }
            remove => HookHandler._afterGetLanguageEnum -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.LocalizationSettings.hook_GetLanguageEnum GetLanguageEnum
        {
            add => On.LocalizationSettings.GetLanguageEnum += value;
            remove => On.LocalizationSettings.GetLanguageEnum -= value;
        }
    }
}