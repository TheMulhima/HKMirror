using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;

namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for PlayMakerUtils_Extensions class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnPlayMakerUtils_Extensions
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookIndexOf_ArrayList_Object()
        {
            if (!HookedList.Contains("IndexOf_ArrayList_Object"))
            {
                HookedList.Add("IndexOf_ArrayList_Object");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf_ArrayList_Object",
                        false), IndexOf_ArrayList_Object);
            }
        }

        internal static event Delegates.IndexOf_ArrayList_Object_BeforeArgs _beforeIndexOf_ArrayList_Object;
        internal static event Delegates.IndexOf_ArrayList_Object_AfterArgs _afterIndexOf_ArrayList_Object;

        private static int IndexOf_ArrayList_Object(Func<ArrayList, object, int> orig, ArrayList target, object value)
        {
            Delegates.Params_IndexOf_ArrayList_Object @params = new()
            {
                target = target, value = value
            };
            if (_beforeIndexOf_ArrayList_Object != null)
                foreach (Delegates.IndexOf_ArrayList_Object_BeforeArgs toInvoke in _beforeIndexOf_ArrayList_Object
                             .GetInvocationList())
                    try
                    {
                        _beforeIndexOf_ArrayList_Object?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            target = @params.target;
            value = @params.value;
            var retVal = orig(target, value);
            if (_afterIndexOf_ArrayList_Object != null)
                foreach (Delegates.IndexOf_ArrayList_Object_AfterArgs toInvoke in _afterIndexOf_ArrayList_Object
                             .GetInvocationList())
                    try
                    {
                        retVal = _afterIndexOf_ArrayList_Object.Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }

        internal static void HookIndexOf_ArrayList_Object_int()
        {
            if (!HookedList.Contains("IndexOf_ArrayList_Object_int"))
            {
                HookedList.Add("IndexOf_ArrayList_Object_int");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf_ArrayList_Object_int",
                        false), IndexOf_ArrayList_Object_int);
            }
        }

        internal static event Delegates.IndexOf_ArrayList_Object_int_BeforeArgs _beforeIndexOf_ArrayList_Object_int;
        internal static event Delegates.IndexOf_ArrayList_Object_int_AfterArgs _afterIndexOf_ArrayList_Object_int;

        private static int IndexOf_ArrayList_Object_int(Func<ArrayList, object, int, int> orig, ArrayList target,
            object value, int startIndex)
        {
            Delegates.Params_IndexOf_ArrayList_Object_int @params = new()
            {
                target = target, value = value, startIndex = startIndex
            };
            if (_beforeIndexOf_ArrayList_Object_int != null)
                foreach (Delegates.IndexOf_ArrayList_Object_int_BeforeArgs toInvoke in
                         _beforeIndexOf_ArrayList_Object_int.GetInvocationList())
                    try
                    {
                        _beforeIndexOf_ArrayList_Object_int?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            target = @params.target;
            value = @params.value;
            startIndex = @params.startIndex;
            var retVal = orig(target, value, startIndex);
            if (_afterIndexOf_ArrayList_Object_int != null)
                foreach (Delegates.IndexOf_ArrayList_Object_int_AfterArgs toInvoke in _afterIndexOf_ArrayList_Object_int
                             .GetInvocationList())
                    try
                    {
                        retVal = _afterIndexOf_ArrayList_Object_int.Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }

        internal static void HookIndexOf_ArrayList_Object_int_int()
        {
            if (!HookedList.Contains("IndexOf_ArrayList_Object_int_int"))
            {
                HookedList.Add("IndexOf_ArrayList_Object_int_int");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions),
                        "IndexOf_ArrayList_Object_int_int", false), IndexOf_ArrayList_Object_int_int);
            }
        }

        internal static event Delegates.IndexOf_ArrayList_Object_int_int_BeforeArgs
            _beforeIndexOf_ArrayList_Object_int_int;

        internal static event Delegates.IndexOf_ArrayList_Object_int_int_AfterArgs
            _afterIndexOf_ArrayList_Object_int_int;

        private static int IndexOf_ArrayList_Object_int_int(Func<ArrayList, object, int, int, int> orig,
            ArrayList target, object value, int startIndex, int count)
        {
            Delegates.Params_IndexOf_ArrayList_Object_int_int @params = new()
            {
                target = target, value = value, startIndex = startIndex, count = count
            };
            if (_beforeIndexOf_ArrayList_Object_int_int != null)
                foreach (Delegates.IndexOf_ArrayList_Object_int_int_BeforeArgs toInvoke in
                         _beforeIndexOf_ArrayList_Object_int_int.GetInvocationList())
                    try
                    {
                        _beforeIndexOf_ArrayList_Object_int_int?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            target = @params.target;
            value = @params.value;
            startIndex = @params.startIndex;
            count = @params.count;
            var retVal = orig(target, value, startIndex, count);
            if (_afterIndexOf_ArrayList_Object_int_int != null)
                foreach (Delegates.IndexOf_ArrayList_Object_int_int_AfterArgs toInvoke in
                         _afterIndexOf_ArrayList_Object_int_int.GetInvocationList())
                    try
                    {
                        retVal = _afterIndexOf_ArrayList_Object_int_int.Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }

        internal static void HookLastIndexOf_ArrayList_Object()
        {
            if (!HookedList.Contains("LastIndexOf_ArrayList_Object"))
            {
                HookedList.Add("LastIndexOf_ArrayList_Object");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf_ArrayList_Object",
                        false), LastIndexOf_ArrayList_Object);
            }
        }

        internal static event Delegates.LastIndexOf_ArrayList_Object_BeforeArgs _beforeLastIndexOf_ArrayList_Object;
        internal static event Delegates.LastIndexOf_ArrayList_Object_AfterArgs _afterLastIndexOf_ArrayList_Object;

        private static int LastIndexOf_ArrayList_Object(Func<ArrayList, object, int> orig, ArrayList target,
            object value)
        {
            Delegates.Params_LastIndexOf_ArrayList_Object @params = new()
            {
                target = target, value = value
            };
            if (_beforeLastIndexOf_ArrayList_Object != null)
                foreach (Delegates.LastIndexOf_ArrayList_Object_BeforeArgs toInvoke in
                         _beforeLastIndexOf_ArrayList_Object.GetInvocationList())
                    try
                    {
                        _beforeLastIndexOf_ArrayList_Object?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            target = @params.target;
            value = @params.value;
            var retVal = orig(target, value);
            if (_afterLastIndexOf_ArrayList_Object != null)
                foreach (Delegates.LastIndexOf_ArrayList_Object_AfterArgs toInvoke in _afterLastIndexOf_ArrayList_Object
                             .GetInvocationList())
                    try
                    {
                        retVal = _afterLastIndexOf_ArrayList_Object.Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }

        internal static void HookLastIndexOf_ArrayList_Object_int()
        {
            if (!HookedList.Contains("LastIndexOf_ArrayList_Object_int"))
            {
                HookedList.Add("LastIndexOf_ArrayList_Object_int");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions),
                        "LastIndexOf_ArrayList_Object_int", false), LastIndexOf_ArrayList_Object_int);
            }
        }

        internal static event Delegates.LastIndexOf_ArrayList_Object_int_BeforeArgs
            _beforeLastIndexOf_ArrayList_Object_int;

        internal static event Delegates.LastIndexOf_ArrayList_Object_int_AfterArgs
            _afterLastIndexOf_ArrayList_Object_int;

        private static int LastIndexOf_ArrayList_Object_int(Func<ArrayList, object, int, int> orig, ArrayList target,
            object value, int startIndex)
        {
            Delegates.Params_LastIndexOf_ArrayList_Object_int @params = new()
            {
                target = target, value = value, startIndex = startIndex
            };
            if (_beforeLastIndexOf_ArrayList_Object_int != null)
                foreach (Delegates.LastIndexOf_ArrayList_Object_int_BeforeArgs toInvoke in
                         _beforeLastIndexOf_ArrayList_Object_int.GetInvocationList())
                    try
                    {
                        _beforeLastIndexOf_ArrayList_Object_int?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            target = @params.target;
            value = @params.value;
            startIndex = @params.startIndex;
            var retVal = orig(target, value, startIndex);
            if (_afterLastIndexOf_ArrayList_Object_int != null)
                foreach (Delegates.LastIndexOf_ArrayList_Object_int_AfterArgs toInvoke in
                         _afterLastIndexOf_ArrayList_Object_int.GetInvocationList())
                    try
                    {
                        retVal = _afterLastIndexOf_ArrayList_Object_int.Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }

        internal static void HookLastIndexOf_ArrayList_Object_int_int()
        {
            if (!HookedList.Contains("LastIndexOf_ArrayList_Object_int_int"))
            {
                HookedList.Add("LastIndexOf_ArrayList_Object_int_int");
                new Hook(
                    ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions),
                        "LastIndexOf_ArrayList_Object_int_int", false), LastIndexOf_ArrayList_Object_int_int);
            }
        }

        internal static event Delegates.LastIndexOf_ArrayList_Object_int_int_BeforeArgs
            _beforeLastIndexOf_ArrayList_Object_int_int;

        internal static event Delegates.LastIndexOf_ArrayList_Object_int_int_AfterArgs
            _afterLastIndexOf_ArrayList_Object_int_int;

        private static int LastIndexOf_ArrayList_Object_int_int(Func<ArrayList, object, int, int, int> orig,
            ArrayList target, object value, int startIndex, int count)
        {
            Delegates.Params_LastIndexOf_ArrayList_Object_int_int @params = new()
            {
                target = target, value = value, startIndex = startIndex, count = count
            };
            if (_beforeLastIndexOf_ArrayList_Object_int_int != null)
                foreach (Delegates.LastIndexOf_ArrayList_Object_int_int_BeforeArgs toInvoke in
                         _beforeLastIndexOf_ArrayList_Object_int_int.GetInvocationList())
                    try
                    {
                        _beforeLastIndexOf_ArrayList_Object_int_int?.Invoke(@params);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            target = @params.target;
            value = @params.value;
            startIndex = @params.startIndex;
            count = @params.count;
            var retVal = orig(target, value, startIndex, count);
            if (_afterLastIndexOf_ArrayList_Object_int_int != null)
                foreach (Delegates.LastIndexOf_ArrayList_Object_int_int_AfterArgs toInvoke in
                         _afterLastIndexOf_ArrayList_Object_int_int.GetInvocationList())
                    try
                    {
                        retVal = _afterLastIndexOf_ArrayList_Object_int_int.Invoke(@params, retVal);
                    }
                    catch (Exception e)
                    {
                        HKMirrorMod.DoLogError(e);
                    }

            return retVal;
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate int IndexOf_ArrayList_Object_AfterArgs(Params_IndexOf_ArrayList_Object args, int ret);

        public delegate void IndexOf_ArrayList_Object_BeforeArgs(Params_IndexOf_ArrayList_Object args);

        public delegate int IndexOf_ArrayList_Object_int_AfterArgs(Params_IndexOf_ArrayList_Object_int args, int ret);

        public delegate void IndexOf_ArrayList_Object_int_BeforeArgs(Params_IndexOf_ArrayList_Object_int args);

        public delegate int IndexOf_ArrayList_Object_int_int_AfterArgs(Params_IndexOf_ArrayList_Object_int_int args,
            int ret);

        public delegate void IndexOf_ArrayList_Object_int_int_BeforeArgs(Params_IndexOf_ArrayList_Object_int_int args);

        public delegate int IndexOf_ArrayList_Object_int_int_WithArgs(Func<ArrayList, object, int, int, int> orig,
            ArrayList target, object value, int startIndex, int count);

        public delegate int IndexOf_ArrayList_Object_int_WithArgs(Func<ArrayList, object, int, int> orig,
            ArrayList target, object value, int startIndex);

        public delegate int IndexOf_ArrayList_Object_WithArgs(Func<ArrayList, object, int> orig, ArrayList target,
            object value);

        public delegate int LastIndexOf_ArrayList_Object_AfterArgs(Params_LastIndexOf_ArrayList_Object args, int ret);

        public delegate void LastIndexOf_ArrayList_Object_BeforeArgs(Params_LastIndexOf_ArrayList_Object args);

        public delegate int LastIndexOf_ArrayList_Object_int_AfterArgs(Params_LastIndexOf_ArrayList_Object_int args,
            int ret);

        public delegate void LastIndexOf_ArrayList_Object_int_BeforeArgs(Params_LastIndexOf_ArrayList_Object_int args);

        public delegate int LastIndexOf_ArrayList_Object_int_int_AfterArgs(
            Params_LastIndexOf_ArrayList_Object_int_int args, int ret);

        public delegate void LastIndexOf_ArrayList_Object_int_int_BeforeArgs(
            Params_LastIndexOf_ArrayList_Object_int_int args);

        public delegate int LastIndexOf_ArrayList_Object_int_int_WithArgs(Func<ArrayList, object, int, int, int> orig,
            ArrayList target, object value, int startIndex, int count);

        public delegate int LastIndexOf_ArrayList_Object_int_WithArgs(Func<ArrayList, object, int, int> orig,
            ArrayList target, object value, int startIndex);

        public delegate int LastIndexOf_ArrayList_Object_WithArgs(Func<ArrayList, object, int> orig, ArrayList target,
            object value);

        public sealed class Params_IndexOf_ArrayList_Object
        {
            public ArrayList target;
            public object value;
        }

        public sealed class Params_IndexOf_ArrayList_Object_int
        {
            public int startIndex;
            public ArrayList target;
            public object value;
        }

        public sealed class Params_IndexOf_ArrayList_Object_int_int
        {
            public int count;
            public int startIndex;
            public ArrayList target;
            public object value;
        }

        public sealed class Params_LastIndexOf_ArrayList_Object
        {
            public ArrayList target;
            public object value;
        }

        public sealed class Params_LastIndexOf_ArrayList_Object_int
        {
            public int startIndex;
            public ArrayList target;
            public object value;
        }

        public sealed class Params_LastIndexOf_ArrayList_Object_int_int
        {
            public int count;
            public int startIndex;
            public ArrayList target;
            public object value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.IndexOf_ArrayList_Object_BeforeArgs IndexOf_ArrayList_Object
        {
            add
            {
                HookHandler._beforeIndexOf_ArrayList_Object += value;
                HookHandler.HookIndexOf_ArrayList_Object();
            }
            remove => HookHandler._beforeIndexOf_ArrayList_Object -= value;
        }

        public static event Delegates.IndexOf_ArrayList_Object_int_BeforeArgs IndexOf_ArrayList_Object_int
        {
            add
            {
                HookHandler._beforeIndexOf_ArrayList_Object_int += value;
                HookHandler.HookIndexOf_ArrayList_Object_int();
            }
            remove => HookHandler._beforeIndexOf_ArrayList_Object_int -= value;
        }

        public static event Delegates.IndexOf_ArrayList_Object_int_int_BeforeArgs IndexOf_ArrayList_Object_int_int
        {
            add
            {
                HookHandler._beforeIndexOf_ArrayList_Object_int_int += value;
                HookHandler.HookIndexOf_ArrayList_Object_int_int();
            }
            remove => HookHandler._beforeIndexOf_ArrayList_Object_int_int -= value;
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_BeforeArgs LastIndexOf_ArrayList_Object
        {
            add
            {
                HookHandler._beforeLastIndexOf_ArrayList_Object += value;
                HookHandler.HookLastIndexOf_ArrayList_Object();
            }
            remove => HookHandler._beforeLastIndexOf_ArrayList_Object -= value;
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_int_BeforeArgs LastIndexOf_ArrayList_Object_int
        {
            add
            {
                HookHandler._beforeLastIndexOf_ArrayList_Object_int += value;
                HookHandler.HookLastIndexOf_ArrayList_Object_int();
            }
            remove => HookHandler._beforeLastIndexOf_ArrayList_Object_int -= value;
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_int_int_BeforeArgs
            LastIndexOf_ArrayList_Object_int_int
            {
                add
                {
                    HookHandler._beforeLastIndexOf_ArrayList_Object_int_int += value;
                    HookHandler.HookLastIndexOf_ArrayList_Object_int_int();
                }
                remove => HookHandler._beforeLastIndexOf_ArrayList_Object_int_int -= value;
            }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.IndexOf_ArrayList_Object_AfterArgs IndexOf_ArrayList_Object
        {
            add
            {
                HookHandler._afterIndexOf_ArrayList_Object += value;
                HookHandler.HookIndexOf_ArrayList_Object();
            }
            remove => HookHandler._afterIndexOf_ArrayList_Object -= value;
        }

        public static event Delegates.IndexOf_ArrayList_Object_int_AfterArgs IndexOf_ArrayList_Object_int
        {
            add
            {
                HookHandler._afterIndexOf_ArrayList_Object_int += value;
                HookHandler.HookIndexOf_ArrayList_Object_int();
            }
            remove => HookHandler._afterIndexOf_ArrayList_Object_int -= value;
        }

        public static event Delegates.IndexOf_ArrayList_Object_int_int_AfterArgs IndexOf_ArrayList_Object_int_int
        {
            add
            {
                HookHandler._afterIndexOf_ArrayList_Object_int_int += value;
                HookHandler.HookIndexOf_ArrayList_Object_int_int();
            }
            remove => HookHandler._afterIndexOf_ArrayList_Object_int_int -= value;
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_AfterArgs LastIndexOf_ArrayList_Object
        {
            add
            {
                HookHandler._afterLastIndexOf_ArrayList_Object += value;
                HookHandler.HookLastIndexOf_ArrayList_Object();
            }
            remove => HookHandler._afterLastIndexOf_ArrayList_Object -= value;
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_int_AfterArgs LastIndexOf_ArrayList_Object_int
        {
            add
            {
                HookHandler._afterLastIndexOf_ArrayList_Object_int += value;
                HookHandler.HookLastIndexOf_ArrayList_Object_int();
            }
            remove => HookHandler._afterLastIndexOf_ArrayList_Object_int -= value;
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_int_int_AfterArgs
            LastIndexOf_ArrayList_Object_int_int
            {
                add
                {
                    HookHandler._afterLastIndexOf_ArrayList_Object_int_int += value;
                    HookHandler.HookLastIndexOf_ArrayList_Object_int_int();
                }
                remove => HookHandler._afterLastIndexOf_ArrayList_Object_int_int -= value;
            }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event Delegates.IndexOf_ArrayList_Object_WithArgs IndexOf_ArrayList_Object
        {
            add => HookEndpointManager.Add<Delegates.IndexOf_ArrayList_Object_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf", false), value);
            remove => HookEndpointManager.Remove<Delegates.IndexOf_ArrayList_Object_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf", false), value);
        }

        public static event Delegates.IndexOf_ArrayList_Object_int_WithArgs IndexOf_ArrayList_Object_int
        {
            add => HookEndpointManager.Add<Delegates.IndexOf_ArrayList_Object_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf", false), value);
            remove => HookEndpointManager.Remove<Delegates.IndexOf_ArrayList_Object_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf", false), value);
        }

        public static event Delegates.IndexOf_ArrayList_Object_int_int_WithArgs IndexOf_ArrayList_Object_int_int
        {
            add => HookEndpointManager.Add<Delegates.IndexOf_ArrayList_Object_int_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf", false), value);
            remove => HookEndpointManager.Remove<Delegates.IndexOf_ArrayList_Object_int_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "IndexOf", false), value);
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_WithArgs LastIndexOf_ArrayList_Object
        {
            add => HookEndpointManager.Add<Delegates.LastIndexOf_ArrayList_Object_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf", false), value);
            remove => HookEndpointManager.Remove<Delegates.LastIndexOf_ArrayList_Object_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf", false), value);
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_int_WithArgs LastIndexOf_ArrayList_Object_int
        {
            add => HookEndpointManager.Add<Delegates.LastIndexOf_ArrayList_Object_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf", false), value);
            remove => HookEndpointManager.Remove<Delegates.LastIndexOf_ArrayList_Object_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf", false), value);
        }

        public static event Delegates.LastIndexOf_ArrayList_Object_int_int_WithArgs LastIndexOf_ArrayList_Object_int_int
        {
            add => HookEndpointManager.Add<Delegates.LastIndexOf_ArrayList_Object_int_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf", false), value);
            remove => HookEndpointManager.Remove<Delegates.LastIndexOf_ArrayList_Object_int_int_WithArgs>(
                ReflectionHelper.GetMethodInfo(typeof(PlayMakerUtils_Extensions), "LastIndexOf", false), value);
        }
    }
}