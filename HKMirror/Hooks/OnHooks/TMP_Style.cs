using MonoMod.RuntimeDetour;
using MonoMod.RuntimeDetour.HookGen;
using TMPro;

namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for TMP_Style class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnTMP_Style
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void Hookget_name()
        {
            if (!HookedList.Contains("get_name"))
            {
                HookedList.Add("get_name");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_name"), get_name);
            }
        }

        internal static event Delegates.get_name_BeforeArgs _beforeget_name;
        internal static event Delegates.get_name_NormalArgs _afterget_name;

        private static string get_name(Func<TMP_Style, string> orig, TMP_Style self)
        {
            Delegates.Params_get_name @params = new()
            {
                self = self
            };
            _beforeget_name?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_name != null) retVal = _afterget_name.Invoke(@params);
            return retVal;
        }

        internal static void Hookset_name()
        {
            if (!HookedList.Contains("set_name"))
            {
                HookedList.Add("set_name");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "set_name"), set_name);
            }
        }

        internal static event Delegates.set_name_BeforeArgs _beforeset_name;
        internal static event Delegates.set_name_NormalArgs _afterset_name;

        private static void set_name(Action<TMP_Style, string> orig, TMP_Style self, string value)
        {
            Delegates.Params_set_name @params = new()
            {
                self = self, value = value
            };
            _beforeset_name?.Invoke(@params);
            self = @params.self;
            value = @params.value;
            orig(self, value);
            if (_afterset_name != null) _afterset_name.Invoke(@params);
        }

        internal static void Hookget_hashCode()
        {
            if (!HookedList.Contains("get_hashCode"))
            {
                HookedList.Add("get_hashCode");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_hashCode"), get_hashCode);
            }
        }

        internal static event Delegates.get_hashCode_BeforeArgs _beforeget_hashCode;
        internal static event Delegates.get_hashCode_NormalArgs _afterget_hashCode;

        private static int get_hashCode(Func<TMP_Style, int> orig, TMP_Style self)
        {
            Delegates.Params_get_hashCode @params = new()
            {
                self = self
            };
            _beforeget_hashCode?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_hashCode != null) retVal = _afterget_hashCode.Invoke(@params);
            return retVal;
        }

        internal static void Hookset_hashCode()
        {
            if (!HookedList.Contains("set_hashCode"))
            {
                HookedList.Add("set_hashCode");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "set_hashCode"), set_hashCode);
            }
        }

        internal static event Delegates.set_hashCode_BeforeArgs _beforeset_hashCode;
        internal static event Delegates.set_hashCode_NormalArgs _afterset_hashCode;

        private static void set_hashCode(Action<TMP_Style, int> orig, TMP_Style self, int value)
        {
            Delegates.Params_set_hashCode @params = new()
            {
                self = self, value = value
            };
            _beforeset_hashCode?.Invoke(@params);
            self = @params.self;
            value = @params.value;
            orig(self, value);
            if (_afterset_hashCode != null) _afterset_hashCode.Invoke(@params);
        }

        internal static void Hookget_styleOpeningDefinition()
        {
            if (!HookedList.Contains("get_styleOpeningDefinition"))
            {
                HookedList.Add("get_styleOpeningDefinition");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleOpeningDefinition"),
                    get_styleOpeningDefinition);
            }
        }

        internal static event Delegates.get_styleOpeningDefinition_BeforeArgs _beforeget_styleOpeningDefinition;
        internal static event Delegates.get_styleOpeningDefinition_NormalArgs _afterget_styleOpeningDefinition;

        private static string get_styleOpeningDefinition(Func<TMP_Style, string> orig, TMP_Style self)
        {
            Delegates.Params_get_styleOpeningDefinition @params = new()
            {
                self = self
            };
            _beforeget_styleOpeningDefinition?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_styleOpeningDefinition != null) retVal = _afterget_styleOpeningDefinition.Invoke(@params);
            return retVal;
        }

        internal static void Hookget_styleClosingDefinition()
        {
            if (!HookedList.Contains("get_styleClosingDefinition"))
            {
                HookedList.Add("get_styleClosingDefinition");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleClosingDefinition"),
                    get_styleClosingDefinition);
            }
        }

        internal static event Delegates.get_styleClosingDefinition_BeforeArgs _beforeget_styleClosingDefinition;
        internal static event Delegates.get_styleClosingDefinition_NormalArgs _afterget_styleClosingDefinition;

        private static string get_styleClosingDefinition(Func<TMP_Style, string> orig, TMP_Style self)
        {
            Delegates.Params_get_styleClosingDefinition @params = new()
            {
                self = self
            };
            _beforeget_styleClosingDefinition?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_styleClosingDefinition != null) retVal = _afterget_styleClosingDefinition.Invoke(@params);
            return retVal;
        }

        internal static void Hookget_styleOpeningTagArray()
        {
            if (!HookedList.Contains("get_styleOpeningTagArray"))
            {
                HookedList.Add("get_styleOpeningTagArray");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleOpeningTagArray"),
                    get_styleOpeningTagArray);
            }
        }

        internal static event Delegates.get_styleOpeningTagArray_BeforeArgs _beforeget_styleOpeningTagArray;
        internal static event Delegates.get_styleOpeningTagArray_NormalArgs _afterget_styleOpeningTagArray;

        private static int[] get_styleOpeningTagArray(Func<TMP_Style, int[]> orig, TMP_Style self)
        {
            Delegates.Params_get_styleOpeningTagArray @params = new()
            {
                self = self
            };
            _beforeget_styleOpeningTagArray?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_styleOpeningTagArray != null) retVal = _afterget_styleOpeningTagArray.Invoke(@params);
            return retVal;
        }

        internal static void Hookget_styleClosingTagArray()
        {
            if (!HookedList.Contains("get_styleClosingTagArray"))
            {
                HookedList.Add("get_styleClosingTagArray");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleClosingTagArray"),
                    get_styleClosingTagArray);
            }
        }

        internal static event Delegates.get_styleClosingTagArray_BeforeArgs _beforeget_styleClosingTagArray;
        internal static event Delegates.get_styleClosingTagArray_NormalArgs _afterget_styleClosingTagArray;

        private static int[] get_styleClosingTagArray(Func<TMP_Style, int[]> orig, TMP_Style self)
        {
            Delegates.Params_get_styleClosingTagArray @params = new()
            {
                self = self
            };
            _beforeget_styleClosingTagArray?.Invoke(@params);
            self = @params.self;
            var retVal = orig(self);
            if (_afterget_styleClosingTagArray != null) retVal = _afterget_styleClosingTagArray.Invoke(@params);
            return retVal;
        }

        internal static void HookRefreshStyle()
        {
            if (!HookedList.Contains("RefreshStyle"))
            {
                HookedList.Add("RefreshStyle");
                new Hook(ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "RefreshStyle"), RefreshStyle);
            }
        }

        internal static event Delegates.RefreshStyle_BeforeArgs _beforeRefreshStyle;
        internal static event Delegates.RefreshStyle_NormalArgs _afterRefreshStyle;

        private static void RefreshStyle(Action<TMP_Style> orig, TMP_Style self)
        {
            Delegates.Params_RefreshStyle @params = new()
            {
                self = self
            };
            _beforeRefreshStyle?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterRefreshStyle != null) _afterRefreshStyle.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void get_hashCode_BeforeArgs(Params_get_hashCode args);

        public delegate int get_hashCode_NormalArgs(Params_get_hashCode args);

        public delegate void get_name_BeforeArgs(Params_get_name args);

        public delegate string get_name_NormalArgs(Params_get_name args);

        public delegate void get_styleClosingDefinition_BeforeArgs(Params_get_styleClosingDefinition args);

        public delegate string get_styleClosingDefinition_NormalArgs(Params_get_styleClosingDefinition args);

        public delegate void get_styleClosingTagArray_BeforeArgs(Params_get_styleClosingTagArray args);

        public delegate int[] get_styleClosingTagArray_NormalArgs(Params_get_styleClosingTagArray args);

        public delegate void get_styleOpeningDefinition_BeforeArgs(Params_get_styleOpeningDefinition args);

        public delegate string get_styleOpeningDefinition_NormalArgs(Params_get_styleOpeningDefinition args);

        public delegate void get_styleOpeningTagArray_BeforeArgs(Params_get_styleOpeningTagArray args);

        public delegate int[] get_styleOpeningTagArray_NormalArgs(Params_get_styleOpeningTagArray args);

        public delegate void RefreshStyle_BeforeArgs(Params_RefreshStyle args);

        public delegate void RefreshStyle_NormalArgs(Params_RefreshStyle args);

        public delegate void set_hashCode_BeforeArgs(Params_set_hashCode args);

        public delegate void set_hashCode_NormalArgs(Params_set_hashCode args);

        public delegate void set_name_BeforeArgs(Params_set_name args);

        public delegate void set_name_NormalArgs(Params_set_name args);

        public sealed class Params_get_name
        {
            public TMP_Style self;
        }

        public sealed class Params_set_name
        {
            public TMP_Style self;
            public string value;
        }

        public sealed class Params_get_hashCode
        {
            public TMP_Style self;
        }

        public sealed class Params_set_hashCode
        {
            public TMP_Style self;
            public int value;
        }

        public sealed class Params_get_styleOpeningDefinition
        {
            public TMP_Style self;
        }

        public sealed class Params_get_styleClosingDefinition
        {
            public TMP_Style self;
        }

        public sealed class Params_get_styleOpeningTagArray
        {
            public TMP_Style self;
        }

        public sealed class Params_get_styleClosingTagArray
        {
            public TMP_Style self;
        }

        public sealed class Params_RefreshStyle
        {
            public TMP_Style self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.get_name_BeforeArgs get_name
        {
            add
            {
                HookHandler._beforeget_name += value;
                HookHandler.Hookget_name();
            }
            remove => HookHandler._beforeget_name -= value;
        }

        public static event Delegates.set_name_BeforeArgs set_name
        {
            add
            {
                HookHandler._beforeset_name += value;
                HookHandler.Hookset_name();
            }
            remove => HookHandler._beforeset_name -= value;
        }

        public static event Delegates.get_hashCode_BeforeArgs get_hashCode
        {
            add
            {
                HookHandler._beforeget_hashCode += value;
                HookHandler.Hookget_hashCode();
            }
            remove => HookHandler._beforeget_hashCode -= value;
        }

        public static event Delegates.set_hashCode_BeforeArgs set_hashCode
        {
            add
            {
                HookHandler._beforeset_hashCode += value;
                HookHandler.Hookset_hashCode();
            }
            remove => HookHandler._beforeset_hashCode -= value;
        }

        public static event Delegates.get_styleOpeningDefinition_BeforeArgs get_styleOpeningDefinition
        {
            add
            {
                HookHandler._beforeget_styleOpeningDefinition += value;
                HookHandler.Hookget_styleOpeningDefinition();
            }
            remove => HookHandler._beforeget_styleOpeningDefinition -= value;
        }

        public static event Delegates.get_styleClosingDefinition_BeforeArgs get_styleClosingDefinition
        {
            add
            {
                HookHandler._beforeget_styleClosingDefinition += value;
                HookHandler.Hookget_styleClosingDefinition();
            }
            remove => HookHandler._beforeget_styleClosingDefinition -= value;
        }

        public static event Delegates.get_styleOpeningTagArray_BeforeArgs get_styleOpeningTagArray
        {
            add
            {
                HookHandler._beforeget_styleOpeningTagArray += value;
                HookHandler.Hookget_styleOpeningTagArray();
            }
            remove => HookHandler._beforeget_styleOpeningTagArray -= value;
        }

        public static event Delegates.get_styleClosingTagArray_BeforeArgs get_styleClosingTagArray
        {
            add
            {
                HookHandler._beforeget_styleClosingTagArray += value;
                HookHandler.Hookget_styleClosingTagArray();
            }
            remove => HookHandler._beforeget_styleClosingTagArray -= value;
        }

        public static event Delegates.RefreshStyle_BeforeArgs RefreshStyle
        {
            add
            {
                HookHandler._beforeRefreshStyle += value;
                HookHandler.HookRefreshStyle();
            }
            remove => HookHandler._beforeRefreshStyle -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.get_name_NormalArgs get_name
        {
            add
            {
                HookHandler._afterget_name += value;
                HookHandler.Hookget_name();
            }
            remove => HookHandler._afterget_name -= value;
        }

        public static event Delegates.set_name_NormalArgs set_name
        {
            add
            {
                HookHandler._afterset_name += value;
                HookHandler.Hookset_name();
            }
            remove => HookHandler._afterset_name -= value;
        }

        public static event Delegates.get_hashCode_NormalArgs get_hashCode
        {
            add
            {
                HookHandler._afterget_hashCode += value;
                HookHandler.Hookget_hashCode();
            }
            remove => HookHandler._afterget_hashCode -= value;
        }

        public static event Delegates.set_hashCode_NormalArgs set_hashCode
        {
            add
            {
                HookHandler._afterset_hashCode += value;
                HookHandler.Hookset_hashCode();
            }
            remove => HookHandler._afterset_hashCode -= value;
        }

        public static event Delegates.get_styleOpeningDefinition_NormalArgs get_styleOpeningDefinition
        {
            add
            {
                HookHandler._afterget_styleOpeningDefinition += value;
                HookHandler.Hookget_styleOpeningDefinition();
            }
            remove => HookHandler._afterget_styleOpeningDefinition -= value;
        }

        public static event Delegates.get_styleClosingDefinition_NormalArgs get_styleClosingDefinition
        {
            add
            {
                HookHandler._afterget_styleClosingDefinition += value;
                HookHandler.Hookget_styleClosingDefinition();
            }
            remove => HookHandler._afterget_styleClosingDefinition -= value;
        }

        public static event Delegates.get_styleOpeningTagArray_NormalArgs get_styleOpeningTagArray
        {
            add
            {
                HookHandler._afterget_styleOpeningTagArray += value;
                HookHandler.Hookget_styleOpeningTagArray();
            }
            remove => HookHandler._afterget_styleOpeningTagArray -= value;
        }

        public static event Delegates.get_styleClosingTagArray_NormalArgs get_styleClosingTagArray
        {
            add
            {
                HookHandler._afterget_styleClosingTagArray += value;
                HookHandler.Hookget_styleClosingTagArray();
            }
            remove => HookHandler._afterget_styleClosingTagArray -= value;
        }

        public static event Delegates.RefreshStyle_NormalArgs RefreshStyle
        {
            add
            {
                HookHandler._afterRefreshStyle += value;
                HookHandler.HookRefreshStyle();
            }
            remove => HookHandler._afterRefreshStyle -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event Delegates.get_name_NormalArgs get_name
        {
            add => HookEndpointManager.Add<Delegates.get_name_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_name"), value);
            remove => HookEndpointManager.Remove<Delegates.get_name_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_name"), value);
        }

        public static event Delegates.set_name_NormalArgs set_name
        {
            add => HookEndpointManager.Add<Delegates.set_name_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "set_name"), value);
            remove => HookEndpointManager.Remove<Delegates.set_name_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "set_name"), value);
        }

        public static event Delegates.get_hashCode_NormalArgs get_hashCode
        {
            add => HookEndpointManager.Add<Delegates.get_hashCode_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_hashCode"), value);
            remove => HookEndpointManager.Remove<Delegates.get_hashCode_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_hashCode"), value);
        }

        public static event Delegates.set_hashCode_NormalArgs set_hashCode
        {
            add => HookEndpointManager.Add<Delegates.set_hashCode_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "set_hashCode"), value);
            remove => HookEndpointManager.Remove<Delegates.set_hashCode_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "set_hashCode"), value);
        }

        public static event Delegates.get_styleOpeningDefinition_NormalArgs get_styleOpeningDefinition
        {
            add => HookEndpointManager.Add<Delegates.get_styleOpeningDefinition_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleOpeningDefinition"), value);
            remove => HookEndpointManager.Remove<Delegates.get_styleOpeningDefinition_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleOpeningDefinition"), value);
        }

        public static event Delegates.get_styleClosingDefinition_NormalArgs get_styleClosingDefinition
        {
            add => HookEndpointManager.Add<Delegates.get_styleClosingDefinition_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleClosingDefinition"), value);
            remove => HookEndpointManager.Remove<Delegates.get_styleClosingDefinition_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleClosingDefinition"), value);
        }

        public static event Delegates.get_styleOpeningTagArray_NormalArgs get_styleOpeningTagArray
        {
            add => HookEndpointManager.Add<Delegates.get_styleOpeningTagArray_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleOpeningTagArray"), value);
            remove => HookEndpointManager.Remove<Delegates.get_styleOpeningTagArray_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleOpeningTagArray"), value);
        }

        public static event Delegates.get_styleClosingTagArray_NormalArgs get_styleClosingTagArray
        {
            add => HookEndpointManager.Add<Delegates.get_styleClosingTagArray_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleClosingTagArray"), value);
            remove => HookEndpointManager.Remove<Delegates.get_styleClosingTagArray_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "get_styleClosingTagArray"), value);
        }

        public static event Delegates.RefreshStyle_NormalArgs RefreshStyle
        {
            add => HookEndpointManager.Add<Delegates.RefreshStyle_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "RefreshStyle"), value);
            remove => HookEndpointManager.Remove<Delegates.RefreshStyle_NormalArgs>(
                ReflectionHelper.GetMethodInfo(typeof(TMP_Style), "RefreshStyle"), value);
        }
    }
}