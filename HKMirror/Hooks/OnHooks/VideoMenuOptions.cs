namespace HKMirror.Hooks.OnHooks;

/// <summary>
///     Contains different types of On Hooks for VideoMenuOptions class.<br />
///     Contains hooks that aren't generated by monomod, and before and after orig hooks for easier hooking.
/// </summary>
public static class OnVideoMenuOptions
{
    internal static class HookHandler
    {
        private static readonly List<string> HookedList = new();

        internal static void HookConfigureNavigation()
        {
            if (!HookedList.Contains("ConfigureNavigation"))
            {
                HookedList.Add("ConfigureNavigation");
                On.VideoMenuOptions.ConfigureNavigation += ConfigureNavigation;
            }
        }

        internal static event Delegates.ConfigureNavigation_BeforeArgs _beforeConfigureNavigation;
        internal static event Delegates.ConfigureNavigation_NormalArgs _afterConfigureNavigation;

        private static void ConfigureNavigation(On.VideoMenuOptions.orig_ConfigureNavigation orig,
            VideoMenuOptions self)
        {
            Delegates.Params_ConfigureNavigation @params = new()
            {
                self = self
            };
            _beforeConfigureNavigation?.Invoke(@params);
            self = @params.self;
            orig(self);
            if (_afterConfigureNavigation != null) _afterConfigureNavigation.Invoke(@params);
        }
    }

    /// <summary>
    ///     Contains necessary information to create Hooks. Does not contain any hooks
    /// </summary>
    public static class Delegates
    {
        public delegate void ConfigureNavigation_BeforeArgs(Params_ConfigureNavigation args);

        public delegate void ConfigureNavigation_NormalArgs(Params_ConfigureNavigation args);

        public sealed class Params_ConfigureNavigation
        {
            public VideoMenuOptions self;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code before orig(self) is called
    /// </summary>
    public static class BeforeOrig
    {
        public static event Delegates.ConfigureNavigation_BeforeArgs ConfigureNavigation
        {
            add
            {
                HookHandler._beforeConfigureNavigation += value;
                HookHandler.HookConfigureNavigation();
            }
            remove => HookHandler._beforeConfigureNavigation -= value;
        }
    }

    /// <summary>
    ///     Contains Hooks to that run code after orig(self) is called
    /// </summary>
    public static class AfterOrig
    {
        public static event Delegates.ConfigureNavigation_NormalArgs ConfigureNavigation
        {
            add
            {
                HookHandler._afterConfigureNavigation += value;
                HookHandler.HookConfigureNavigation();
            }
            remove => HookHandler._afterConfigureNavigation -= value;
        }
    }

    /// <summary>
    ///     Contains all On Hooks, even those that aren't in the On namespace such as API generated functions and property
    ///     getters/setters
    /// </summary>
    public static class WithOrig
    {
        public static event On.VideoMenuOptions.hook_ConfigureNavigation ConfigureNavigation
        {
            add => On.VideoMenuOptions.ConfigureNavigation += value;
            remove => On.VideoMenuOptions.ConfigureNavigation -= value;
        }
    }
}